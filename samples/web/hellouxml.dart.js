// Generated by dart2js, the Dart to JavaScript compiler version: 1.0.0.10_r30798.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
var A = {};
delete A.x;
var B = {};
delete B.x;
var C = {};
delete C.x;
var D = {};
delete D.x;
var E = {};
delete E.x;
var F = {};
delete F.x;
var G = {};
delete G.x;
var H = {};
delete H.x;
var J = {};
delete J.x;
var K = {};
delete K.x;
var L = {};
delete L.x;
var M = {};
delete M.x;
var N = {};
delete N.x;
var O = {};
delete O.x;
var P = {};
delete P.x;
var Q = {};
delete Q.x;
var R = {};
delete R.x;
var S = {};
delete S.x;
var T = {};
delete T.x;
var U = {};
delete U.x;
var V = {};
delete V.x;
var W = {};
delete W.x;
var X = {};
delete X.x;
var Y = {};
delete Y.x;
var Z = {};
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
// Method closures
$$.BoundClosure$i0 = [J, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this._target.call(this._self, this._receiver);
  }
}];

$$.BoundClosure$1 = [H, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this._target.call(this._self, p0);
  },
  $is_args1: true
}];

$$.BoundClosure$2 = [P, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this._target.call(this._self, p0, p1);
  },
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  $is_args2: true,
  $is_args1: true
}];

$$.BoundClosure$0 = [P, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$0: function() {
    return this._target.call(this._self);
  }
}];

$$.BoundClosure$i1 = [W, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$1: function(p0) {
    return this._target.call(this._self, this._receiver, p0);
  },
  $is_args1: true
}];

$$.BoundClosure$20 = [Q, {"": "BoundClosure;_self,_target,_receiver,__js_helper$_name",
  call$2: function(p0, p1) {
    return this._target.call(this._self, p0, p1);
  },
  $is_args2: true
}];

$$.Closure$2 = [H, {"": "Closure;call$2,$name", $is_args2: true}];

$$.Closure$1 = [H, {"": "Closure;call$1,$name", $is_args1: true}];

$$.Closure$0 = [H, {"": "Closure;call$0,$name"}];

$$.Closure$7 = [H, {"": "Closure;call$7,$name"}];

$$.Closure$20 = [P, {"": "Closure;call$2,$name",
  call$1: function(p0) {
    return this.call$2(p0, null);
  },
  $is_args2: true,
  $is_args1: true
}];

$$.Closure$4 = [W, {"": "Closure;call$4,$name"}];

(function (reflectionData) {
  function map(x){x={x:x};delete x.x;return x}
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              newDesc[previousProp = prop] = element[prop];
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})([
["_foreign_helper", "dart:_foreign_helper", , H, {
JS_CONST: {"": "Object;code"}}],
["_interceptors", "dart:_interceptors", , J, {
getInterceptor: function(object) {
  return void 0;
},

makeDispatchRecord: function(interceptor, proto, extension, indexability) {
  return {i: interceptor, p: proto, e: extension, x: indexability};
},

getNativeInterceptor: function(object) {
  var record, proto, objectProto, interceptor;
  record = object[init.dispatchPropertyName];
  if (record == null)
    if ($.initNativeDispatchFlag == null) {
      H.initNativeDispatch();
      record = object[init.dispatchPropertyName];
    }
  if (record != null) {
    proto = record.p;
    if (false === proto)
      return record.i;
    if (true === proto)
      return object;
    objectProto = Object.getPrototypeOf(object);
    if (proto === objectProto)
      return record.i;
    if (record.e === objectProto)
      throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
  }
  interceptor = H.lookupAndCacheInterceptor(object);
  if (interceptor == null)
    return C.UnknownJavaScriptObject_methods;
  return interceptor;
},

Interceptor: {"": "Object;",
  $eq: function(receiver, other) {
    return receiver === other;
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  toString$0: function(receiver) {
    return H.Primitives_objectToString(receiver);
  },
  "%": "ArrayBuffer|CanvasGradient|CanvasPattern|DOMImplementation|MediaError|MediaKeyError|Navigator|PositionError|SQLError|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedString|SVGAnimatedTransformList"
},

JSBool: {"": "bool/Interceptor;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true
},

JSNull: {"": "Interceptor;",
  $eq: function(receiver, other) {
    return null == other;
  },
  toString$0: function(receiver) {
    return "null";
  },
  get$toString: function(_receiver) {
    return new J.BoundClosure$i0(this, J.JSNull.prototype.toString$0, _receiver, "toString$0");
  },
  get$hashCode: function(receiver) {
    return 0;
  }
},

JavaScriptObject: {"": "Interceptor;",
  get$hashCode: function(_) {
    return 0;
  }
},

PlainJavaScriptObject: {"": "JavaScriptObject;"},

UnknownJavaScriptObject: {"": "JavaScriptObject;"},

JSArray: {"": "List/Interceptor;",
  add$1: function(receiver, value) {
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("add"));
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index < 0 || index >= receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("removeAt"));
    return receiver.splice(index, 1)[0];
  },
  insert$2: function(receiver, index, value) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index < 0 || index > receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("insert"));
    receiver.splice(index, 0, value);
  },
  remove$1: function(receiver, element) {
    var i;
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("remove"));
    for (i = 0; i < receiver.length; ++i)
      if (J.$eq(receiver[i], element)) {
        receiver.splice(i, 1);
        return true;
      }
    return false;
  },
  forEach$1: function(receiver, f) {
    return H.IterableMixinWorkaround_forEach(receiver, f);
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  removeRange$2: function(receiver, start, end) {
    var receiverLength;
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("removeRange"));
    receiverLength = receiver.length;
    if (start < 0 || start > receiverLength)
      throw H.wrapException(P.RangeError$range(start, 0, receiverLength));
    if (end < start || end > receiverLength)
      throw H.wrapException(P.RangeError$range(end, start, receiverLength));
    H.Arrays_copy(receiver, end, receiver, start, receiverLength - end);
    this.set$length(receiver, receiverLength - (end - start));
  },
  indexOf$2: function(receiver, element, start) {
    return H.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  toString$0: function(receiver) {
    return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
  },
  toList$1$growable: function(receiver, growable) {
    return P.List_List$from(receiver, growable, H.getRuntimeTypeArgument(receiver, "JSArray", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, receiver.length, 0, null);
  },
  get$hashCode: function(receiver) {
    return H.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
      throw H.wrapException(new P.ArgumentError(newLength));
    if (newLength < 0)
      throw H.wrapException(P.RangeError$value(newLength));
    if (!!receiver.fixed$length)
      H.throwExpression(P.UnsupportedError$("set length"));
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    if (!!receiver.immutable$list)
      H.throwExpression(P.UnsupportedError$("indexed set"));
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: true,
  $asList: null,
  $isList: true,
  $isEfficientLength: true
},

JSMutableArray: {"": "JSArray;", $isJSMutableArray: true,
  $asJSArray: function() {
    return [null];
  },
  $asList: function() {
    return [null];
  }
},

JSFixedArray: {"": "JSMutableArray;"},

JSExtendableArray: {"": "JSMutableArray;", $isJSExtendableArray: true},

JSNumber: {"": "num/Interceptor;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if (this.get$isNegative(receiver) === bIsNegative)
          return 0;
        if (this.get$isNegative(receiver))
          return -1;
        return 1;
      }
      return 0;
    } else if (isNaN(receiver)) {
      if (this.get$isNaN(b))
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  remainder$1: function(receiver, b) {
    return receiver % b;
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var t1;
    if (receiver >= -2147483648 && receiver <= 2147483647)
      return receiver | 0;
    if (isFinite(receiver)) {
      t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
      return t1 + 0;
    }
    throw H.wrapException(P.UnsupportedError$('' + receiver));
  },
  ceil$0: function(receiver) {
    return this.toInt$0(Math.ceil(receiver));
  },
  roundToDouble$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    if (fractionDigits < 0 || fractionDigits > 20)
      throw H.wrapException(P.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver))
      return "-" + result;
    return result;
  },
  toRadixString$1: function(receiver, radix) {
    if (radix < 2 || radix > 36)
      throw H.wrapException(P.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver - other;
  },
  $mul: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
      return receiver / other | 0;
    else
      return this._slowTdiv$1(receiver, other);
  },
  _slowTdiv$1: function(receiver, other) {
    return this.toInt$0(receiver / other);
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw H.wrapException(P.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return receiver >> other >>> 0;
  },
  $lt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (typeof other !== "number")
      throw H.wrapException(P.ArgumentError$(other));
    return receiver >= other;
  },
  $isnum: true,
  static: {
"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32",
}

},

JSInt: {"": "int/JSNumber;", $isdouble: true, $isnum: true, $isint: true},

JSDouble: {"": "double/JSNumber;", $isdouble: true, $isnum: true},

JSString: {"": "String/Interceptor;",
  codeUnitAt$1: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(P.ArgumentError$(index));
    if (index < 0)
      throw H.wrapException(P.RangeError$value(index));
    if (index >= receiver.length)
      throw H.wrapException(P.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  matchAsPrefix$2: function(receiver, string, start) {
    var t1, t2, i, t3;
    if (start < 0 || start > string.length)
      throw H.wrapException(P.RangeError$range(start, 0, string.length));
    t1 = receiver.length;
    t2 = string.length;
    if (start + t1 > t2)
      return;
    for (i = 0; i < t1; ++i) {
      t3 = start + i;
      if (typeof t3 !== "number" || Math.floor(t3) !== t3)
        H.throwExpression(new P.ArgumentError(t3));
      if (t3 < 0)
        H.throwExpression(P.RangeError$value(t3));
      if (t3 >= t2)
        H.throwExpression(P.RangeError$value(t3));
      t3 = string.charCodeAt(t3);
      if (i >= t1)
        H.throwExpression(P.RangeError$value(i));
      if (t3 !== receiver.charCodeAt(i))
        return;
    }
    return new H.StringMatch(start, string, receiver);
  },
  $add: function(receiver, other) {
    if (typeof other !== "string")
      throw H.wrapException(new P.ArgumentError(other));
    return receiver + other;
  },
  replaceAll$2: function(receiver, from, to) {
    return H.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    return receiver.split(pattern);
  },
  startsWith$2: function(receiver, pattern, index) {
    var endIndex;
    if (index < 0 || index > receiver.length)
      throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
    endIndex = index + pattern.length;
    if (endIndex > receiver.length)
      return false;
    return pattern === receiver.substring(index, endIndex);
  },
  startsWith$1: function($receiver, pattern) {
    return this.startsWith$2($receiver, pattern, 0);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
      H.throwExpression(P.ArgumentError$(startIndex));
    if (endIndex == null)
      endIndex = receiver.length;
    if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
      H.throwExpression(P.ArgumentError$(endIndex));
    if (startIndex < 0)
      throw H.wrapException(P.RangeError$value(startIndex));
    if (typeof endIndex !== "number")
      throw H.iae(endIndex);
    if (startIndex > endIndex)
      throw H.wrapException(P.RangeError$value(startIndex));
    if (endIndex > receiver.length)
      throw H.wrapException(P.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
    for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
      if (startIndex >= endIndex)
        H.throwExpression(P.RangeError$value(startIndex));
      codeUnit = receiver.charCodeAt(startIndex);
      if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
        ++startIndex;
      else
        break;
    }
    if (startIndex === endIndex)
      return "";
    for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
      endIndex1 = endIndex0 - 1;
      if (endIndex1 < 0)
        H.throwExpression(P.RangeError$value(endIndex1));
      if (endIndex1 >= endIndex)
        H.throwExpression(P.RangeError$value(endIndex1));
      codeUnit = receiver.charCodeAt(endIndex1);
      if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
        ;
      else
        break;
    }
    if (startIndex === 0 && endIndex0 === endIndex)
      return receiver;
    return receiver.substring(startIndex, endIndex0);
  },
  indexOf$2: function(receiver, pattern, start) {
    var t1, t2, i;
    if (pattern == null)
      H.throwExpression(new P.ArgumentError(null));
    if (typeof start !== "number" || Math.floor(start) !== start)
      throw H.wrapException(new P.ArgumentError(start));
    if (start < 0 || start > receiver.length)
      throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
    if (typeof pattern === "string")
      return receiver.indexOf(pattern, start);
    for (t1 = receiver.length, t2 = J.getInterceptor$s(pattern), i = start; i <= t1; ++i)
      if (t2.matchAsPrefix$2(pattern, receiver, i) != null)
        return i;
    return -1;
  },
  indexOf$1: function($receiver, pattern) {
    return this.indexOf$2($receiver, pattern, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    if (startIndex < 0 || startIndex > receiver.length)
      throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length));
    return H.stringContainsUnchecked(receiver, other, startIndex);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (typeof other !== "string")
      throw H.wrapException(new P.ArgumentError(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = 536870911 & hash + receiver.charCodeAt(i);
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      hash ^= hash >> 6;
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (typeof index !== "number" || Math.floor(index) !== index)
      throw H.wrapException(new P.ArgumentError(index));
    if (index >= receiver.length || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  static: {
JSString__isWhitespace: function(codeUnit) {
  if (codeUnit < 256)
    switch (codeUnit) {
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 32:
      case 133:
      case 160:
        return true;
      default:
        return false;
    }
  switch (codeUnit) {
    case 5760:
    case 6158:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8232:
    case 8233:
    case 8239:
    case 8287:
    case 12288:
    case 65279:
      return true;
    default:
      return false;
  }
}}

}}],
["_isolate_helper", "dart:_isolate_helper", , H, {
_callInIsolate: function(isolate, $function) {
  var result = isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
  return result;
},

startRootIsolate: function(entry) {
  var rootContext;
  $globalState = H._Manager$(entry);
  if ($globalState.isWorker === true)
    return;
  rootContext = H._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  if (!!entry.$is_args1)
    rootContext.eval$1(new H.startRootIsolate_closure(entry));
  else if (!!entry.$is_args2)
    rootContext.eval$1(new H.startRootIsolate_closure0(entry));
  else
    rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
},

IsolateNatives_computeThisScript: function() {
  var currentScript = init.currentScript;
  if (currentScript != null)
    return String(currentScript.src);
  if (typeof version == "function" && typeof os == "object" && "system" in os)
    return H.IsolateNatives_computeThisScriptD8();
  if (typeof version == "function" && typeof system == "function")
    return thisFilename();
  return;
},

IsolateNatives_computeThisScriptD8: function() {
  var stack, matches;
  stack = new Error().stack;
  if (stack == null) {
    stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
    if (stack == null)
      throw H.wrapException(P.UnsupportedError$("No stack trace"));
  }
  matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
  if (matches != null)
    return matches[1];
  matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
  if (matches != null)
    return matches[1];
  throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
},

IsolateNatives__processWorkerMessage: function(sender, e) {
  var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, context, t2;
  msg = H._deserializeMessage(e.data);
  t1 = J.getInterceptor$asx(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      $globalState.currentManagerId = t1.$index(msg, "id");
      functionName = t1.$index(msg, "functionName");
      entryPoint = functionName == null ? $globalState.entry : init.globalFunctions[functionName];
      args = t1.$index(msg, "args");
      message = H._deserializeMessage(t1.$index(msg, "msg"));
      isSpawnUri = t1.$index(msg, "isSpawnUri");
      replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
      context = H._IsolateContext$();
      $globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      H.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "args"), t1.$index(msg, "msg"), t1.$index(msg, "isSpawnUri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (t1.$index(msg, "port") != null)
        J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      t1 = $globalState.managers;
      t2 = $.get$IsolateNatives_workerIds();
      t1.remove$1(t1, t2.$index(t2, sender));
      sender.terminate();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      H.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true) {
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      } else
        P.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw H.wrapException(t1.$index(msg, "msg"));
    default:
  }
},

IsolateNatives__log: function(msg) {
  var trace, t1, t2, exception;
  if ($globalState.isWorker === true) {
    t1 = $globalState.mainManager;
    t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    t1.toString;
    self.postMessage(t2);
  } else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      H.unwrapException(exception);
      trace = new H._StackTrace(exception, null);
      throw H.wrapException(P.Exception_Exception(trace));
    }

},

IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, replyTo) {
  var t1;
  H.Primitives_initializeStatics($globalState.currentContext.id);
  $.lazyPort = H.ReceivePortImpl$();
  t1 = $.lazyPort;
  t1.toString;
  J.send$1$x(replyTo, ["spawned", new H._NativeJsSendPort(t1, $globalState.currentContext.id)]);
  if (isSpawnUri !== true)
    topLevel.call$1(message);
  else {
    t1 = J.getInterceptor(topLevel);
    if (!!t1.$is_args2)
      topLevel.call$2(args, message);
    else if (!!t1.$is_args1)
      topLevel.call$1(args);
    else
      topLevel.call$0();
  }
},

IsolateNatives__spawnWorker: function(functionName, uri, args, message, isSpawnUri, replyPort) {
  var worker, t1, workerId;
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage$closure.call$2(worker, e); };
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  t1 = $.get$IsolateNatives_workerIds();
  t1.$indexSet(t1, worker, workerId);
  t1 = $globalState.managers;
  t1.$indexSet(t1, workerId, worker);
  worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(replyPort), "args", args, "msg", H._serializeMessage(message), "isSpawnUri", isSpawnUri, "functionName", functionName], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
},

_waitForPendingPorts: function(message, callback) {
  var finder = H._PendingSendPortFinder$();
  finder.traverse$1(message);
  P.Future_wait(finder.ports).then$1(new H._waitForPendingPorts_closure(callback));
},

_serializeMessage: function(message) {
  var t1;
  if ($globalState.supportsWorkers === true) {
    t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  } else {
    t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
    t1._visited = new H._JsVisitedMap(null);
    return t1.traverse$1(message);
  }
},

_deserializeMessage: function(message) {
  if ($globalState.supportsWorkers === true)
    return new H._JsDeserializer(null).deserialize$1(message);
  else
    return message;
},

_MessageTraverser_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

_Deserializer_isPrimitive: function(x) {
  return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
},

startRootIsolate_closure: {"": "Closure;entry_0",
  call$0: function() {
    this.entry_0.call$1([]);
  }
},

startRootIsolate_closure0: {"": "Closure;entry_1",
  call$0: function() {
    this.entry_1.call$2([], null);
  }
},

_Manager: {"": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    t2 = $.get$globalWorker();
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { H.IsolateNatives__processWorkerMessage$closure.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  _Manager$1: function(entry) {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
    this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
    this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
    if (this.isWorker === true) {
      this.mainManager = new H._MainManagerStub();
      this._nativeInitWorkerMessageHandler$0();
    }
  },
  static: {
_Manager$: function(entry) {
  var t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
  t1._Manager$1(entry);
  return t1;
}}

},

_IsolateContext: {"": "Object;id,ports,isolateStatics<",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    $ = this.isolateStatics;
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (old != null)
        $ = old.get$isolateStatics();
    }
    return result;
  },
  lookup$1: function(portId) {
    var t1 = this.ports;
    return t1.$index(t1, portId);
  },
  register$2: function(_, portId, port) {
    var t1;
    if (this.ports.containsKey$1(portId))
      throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
    t1 = this.ports;
    t1.$indexSet(t1, portId, port);
    t1 = $globalState.isolates;
    t1.$indexSet(t1, this.id, this);
  },
  unregister$1: function(portId) {
    var t1 = this.ports;
    t1.remove$1(t1, portId);
    if (this.ports._collection$_length === 0) {
      t1 = $globalState.isolates;
      t1.remove$1(t1, this.id);
    }
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    this.id = t2;
    this.ports = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, P.ReceivePort);
    this.isolateStatics = new Isolate();
  },
  static: {
_IsolateContext$: function() {
  var t1 = new H._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
}}

},

_EventLoop: {"": "Object;events,activeTimerCount",
  dequeue$0: function() {
    var t1 = this.events;
    if (t1._head === t1._tail)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if ($globalState.rootContext != null && $globalState.isolates.containsKey$1($globalState.rootContext.id) && $globalState.fromCommandLine === true && $globalState.rootContext.ports._collection$_length === 0)
      throw H.wrapException(P.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event, t1, t2;
    $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      t1 = $globalState;
      if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop.activeTimerCount === 0) {
        t1 = t1.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if ($.get$globalWindow() != null)
      new H._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0();)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1, t2;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        trace = new H._StackTrace(exception, null);
        t1 = $globalState.mainManager;
        t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
        t1.toString;
        self.postMessage(t2);
      }

  }
},

_EventLoop__runHelper_next: {"": "Closure;this_0",
  call$0: function() {
    if (!this.this_0.runIteration$0())
      return;
    P.Timer_Timer(C.Duration_0, this);
  }
},

_IsolateEvent: {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
},

_MainManagerStub: {"": "Object;"},

IsolateNatives__processWorkerMessage_closure: {"": "Closure;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
  call$0: function() {
    H.IsolateNatives__startIsolate(this.entryPoint_0, this.args_1, this.message_2, this.isSpawnUri_3, this.replyTo_4);
  }
},

_BaseSendPort: {"": "Object;", $isSendPort: true},

_NativeJsSendPort: {"": "_BaseSendPort;_receivePort,_isolateId",
  send$1: function(_, message) {
    H._waitForPendingPorts(message, new H._NativeJsSendPort_send_closure(this, message));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
  },
  get$hashCode: function(_) {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
},

_NativeJsSendPort_send_closure: {"": "Closure;this_1,message_2",
  call$0: function() {
    var t1, t2, t3, t4, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = $globalState.isolates;
    t3 = this.this_1;
    t4 = t3._isolateId;
    isolate = t2.$index(t2, t4);
    if (isolate == null)
      return;
    if ((t3._receivePort.get$_controller()._state & 4) !== 0)
      return;
    shouldSerialize = $globalState.currentContext != null && $globalState.currentContext.id !== t4;
    msg = this.message_2;
    t1.msg_0 = msg;
    if (shouldSerialize)
      t1.msg_0 = H._serializeMessage(t1.msg_0);
    t2 = $globalState.topEventLoop;
    t4 = "receive " + H.S(msg);
    t2.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send__closure(t1, t3, shouldSerialize), t4));
  }
},

_NativeJsSendPort_send__closure: {"": "Closure;box_0,this_3,shouldSerialize_4",
  call$0: function() {
    var t1, t2;
    t1 = this.this_3._receivePort;
    if ((t1.get$_controller()._state & 4) === 0) {
      if (this.shouldSerialize_4) {
        t2 = this.box_0;
        t2.msg_0 = H._deserializeMessage(t2.msg_0);
      }
      t1 = t1._controller;
      t2 = this.box_0.msg_0;
      if (t1._state >= 4)
        H.throwExpression(t1._badEventState$0());
      t1._async$_add$1(t2);
    }
  }
},

_WorkerSendPort: {"": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
  send$1: function(_, message) {
    H._waitForPendingPorts(message, new H._WorkerSendPort_send_closure(this, message));
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
  },
  get$hashCode: function(_) {
    var t1, t2, t3;
    t1 = this._workerId;
    if (typeof t1 !== "number")
      throw t1.$shl();
    t2 = this._isolateId;
    if (typeof t2 !== "number")
      throw t2.$shl();
    t3 = this._receivePortId;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    return (t1 << 16 ^ t2 << 8 ^ t3) >>> 0;
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
},

_WorkerSendPort_send_closure: {"": "Closure;this_0,message_1",
  call$0: function() {
    var t1, workerMessage, t2, manager;
    t1 = this.this_0;
    workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", t1, "msg", this.message_1], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
    if ($globalState.isWorker === true) {
      $globalState.mainManager.toString;
      self.postMessage(workerMessage);
    } else {
      t2 = $globalState.managers;
      manager = t2.$index(t2, t1._workerId);
      if (manager != null)
        manager.postMessage(workerMessage);
    }
  }
},

ReceivePortImpl: {"": "Stream;_id<,_controller<",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = this._controller;
    t1.toString;
    t1 = new P._ControllerStream(t1);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
  },
  close$0: function(_) {
    var t1 = this._controller;
    if ((t1._state & 4) !== 0)
      return;
    t1.close$0(t1);
    $globalState.currentContext.unregister$1(this._id);
  },
  get$close: function(_receiver) {
    return new J.BoundClosure$i0(this, H.ReceivePortImpl.prototype.close$0, _receiver, "close$0");
  },
  ReceivePortImpl$0: function() {
    this._controller = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
    var t1 = $globalState.currentContext;
    t1.register$2(t1, this._id, this);
  },
  static: {
"": "ReceivePortImpl__nextFreeId",
ReceivePortImpl$: function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = t1 + 1;
  t1 = new H.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
}}

},

_waitForPendingPorts_closure: {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $is_args1: true
},

_PendingSendPortFinder: {"": "_MessageTraverser;ports,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    var t1 = this._visited;
    if (t1.$index(t1, list) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, list, true);
    J.forEach$1$ax(list, this.get$_dispatch());
  },
  visitMap$1: function(map) {
    var t1 = this._visited;
    if (t1.$index(t1, map) != null)
      return;
    t1 = this._visited;
    t1.$indexSet(t1, map, true);
    J.forEach$1$ax(map.get$values(map), this.get$_dispatch());
  },
  visitSendPort$1: function(port) {
  },
  _PendingSendPortFinder$0: function() {
    this._visited = new H._JsVisitedMap(null);
  },
  static: {
_PendingSendPortFinder$: function() {
  var t1 = new H._PendingSendPortFinder([], new H._MessageTraverserVisitedMap());
  t1._PendingSendPortFinder$0();
  return t1;
}}

},

_JsSerializer: {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return ["sendport", $globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
    if (!!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsCopier: {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (!!x.$is_NativeJsSendPort)
      return new H._NativeJsSendPort(x._receivePort, x._isolateId);
    if (!!x.$is_WorkerSendPort)
      return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
    throw H.wrapException("Illegal underlying port " + H.S(x));
  }
},

_JsDeserializer: {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(list) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = J.getInterceptor$asx(list);
    managerId = t1.$index(list, 1);
    isolateId = t1.$index(list, 2);
    receivePortId = t1.$index(list, 3);
    if (J.$eq(managerId, $globalState.currentManagerId)) {
      t1 = $globalState.isolates;
      isolate = t1.$index(t1, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return new H._NativeJsSendPort(receivePort, isolateId);
    } else
      return new H._WorkerSendPort(managerId, receivePortId, isolateId);
  }
},

_JsVisitedMap: {"": "Object;tagged",
  $index: function(_, object) {
    return object.__MessageTraverser__attached_info__;
  },
  $indexSet: function(_, object, info) {
    this.tagged.push(object);
    object.__MessageTraverser__attached_info__ = info;
  },
  reset$0: function(_) {
    this.tagged = P.List_List(null, null);
  },
  cleanup$0: function() {
    var $length, i, t1;
    for ($length = this.tagged.length, i = 0; i < $length; ++i) {
      t1 = this.tagged;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t1[i].__MessageTraverser__attached_info__ = null;
    }
    this.tagged = null;
  }
},

_MessageTraverserVisitedMap: {"": "Object;",
  $index: function(_, object) {
    return;
  },
  $indexSet: function(_, object, info) {
  },
  reset$0: function(_) {
  },
  cleanup$0: function() {
  }
},

_MessageTraverser: {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    if (H._MessageTraverser_isPrimitive(x))
      return this.visitPrimitive$1(x);
    t1 = this._visited;
    t1.reset$0(t1);
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    var t1;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    t1 = J.getInterceptor(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isMap)
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!t1.$isSendPort)
      return this.visitSendPort$1(x);
    return this.visitObject$1(x);
  },
  get$_dispatch: function() {
    return new H.BoundClosure$1(this, H._MessageTraverser.prototype._dispatch$1, null, "_dispatch$1");
  },
  visitObject$1: function(x) {
    throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
  }
},

_Copier: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copy, len, t2, i;
    t1 = this._visited;
    copy = t1.$index(t1, list);
    if (copy != null)
      return copy;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    copy = P.List_List(len, null);
    t2 = this._visited;
    t2.$indexSet(t2, list, copy);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw H.ioore(copy, i);
      copy[i] = t2;
    }
    return copy;
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t2 = this._visited;
    t1.copy_0 = t2.$index(t2, map);
    t2 = t1.copy_0;
    if (t2 != null)
      return t2;
    t1.copy_0 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t2 = this._visited;
    t2.$indexSet(t2, map, t1.copy_0);
    map.forEach$1(map, new H._Copier_visitMap_closure(t1, this));
    return t1.copy_0;
  }
},

_Copier_visitMap_closure: {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1 = this.this_1;
    J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
  },
  $is_args2: true
},

_Serializer: {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, list);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, copyId, id;
    t1 = this._visited;
    copyId = t1.$index(t1, map);
    if (copyId != null)
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    t1 = this._visited;
    t1.$indexSet(t1, map, id);
    return ["map", id, this._serializeList$1(J.toList$0$ax(map.get$keys())), this._serializeList$1(J.toList$0$ax(map.get$values(map)))];
  },
  _serializeList$1: function(list) {
    var t1, len, result, i, t2;
    t1 = J.getInterceptor$asx(list);
    len = t1.get$length(list);
    result = P.List_List(len, null);
    for (i = 0; i < len; ++i) {
      t2 = this._dispatch$1(t1.$index(list, i));
      if (i >= len)
        throw H.ioore(result, i);
      result[i] = t2;
    }
    return result;
  }
},

_Deserializer: {"": "Object;",
  deserialize$1: function(x) {
    if (H._Deserializer_isPrimitive(x))
      return x;
    this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    var t1, id;
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    t1 = J.getInterceptor$asx(x);
    switch (t1.$index(x, 0)) {
      case "ref":
        id = t1.$index(x, 1);
        t1 = this._deserialized;
        return t1.$index(t1, id);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    t1 = this._deserialized;
    t1.$indexSet(t1, id, dartList);
    t1 = J.getInterceptor$asx(dartList);
    len = t1.get$length(dartList);
    if (typeof len !== "number")
      throw H.iae(len);
    i = 0;
    for (; i < len; ++i)
      t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
    return dartList;
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, t2, keys, values, len, i;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    t1 = J.getInterceptor$asx(x);
    id = t1.$index(x, 1);
    t2 = this._deserialized;
    t2.$indexSet(t2, id, result);
    keys = t1.$index(x, 2);
    values = t1.$index(x, 3);
    t1 = J.getInterceptor$asx(keys);
    len = t1.get$length(keys);
    if (typeof len !== "number")
      throw H.iae(len);
    t2 = J.getInterceptor$asx(values);
    i = 0;
    for (; i < len; ++i)
      result.$indexSet(result, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
    return result;
  },
  deserializeObject$1: function(x) {
    throw H.wrapException("Unexpected serialized object");
  }
},

TimerImpl: {"": "Object;_once,_inEventLoop,_handle",
  cancel$0: function() {
    if ($.get$globalThis().setTimeout != null) {
      if (this._inEventLoop)
        throw H.wrapException(P.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$periodic$2: function(milliseconds, callback) {
    var t1;
    if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setInterval(H.convertDartClosureToJS(new H.TimerImpl$periodic_closure(this, callback), 0), milliseconds);
    } else
      throw H.wrapException(P.UnsupportedError$("Periodic timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1, t2;
    if (milliseconds === 0)
      t1 = $.get$globalThis().setTimeout == null || $globalState.isWorker === true;
    else
      t1 = false;
    if (t1) {
      this._handle = 1;
      t1 = $globalState.topEventLoop;
      t2 = $globalState.currentContext;
      t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
      this._inEventLoop = true;
    } else if ($.get$globalThis().setTimeout != null) {
      t1 = $globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount + 1;
      this._handle = $.get$globalThis().setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
    } else
      throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
  },
  static: {
TimerImpl$: function(milliseconds, callback) {
  var t1 = new H.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
},

TimerImpl$periodic: function(milliseconds, callback) {
  var t1 = new H.TimerImpl(false, false, null);
  t1.TimerImpl$periodic$2(milliseconds, callback);
  return t1;
}}

},

TimerImpl_internalCallback: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.this_0._handle = null;
    this.callback_1.call$0();
  }
},

TimerImpl_internalCallback0: {"": "Closure;this_2,callback_3",
  call$0: function() {
    this.this_2._handle = null;
    var t1 = $globalState.topEventLoop;
    t1.activeTimerCount = t1.activeTimerCount - 1;
    this.callback_3.call$0();
  }
},

TimerImpl$periodic_closure: {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
}}],
["_js_helper", "dart:_js_helper", , H, {
isJsIndexable: function(object, record) {
  var result, t1;
  if (record != null) {
    result = record.x;
    if (result != null)
      return result;
  }
  t1 = J.getInterceptor(object);
  return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
},

S: function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number") {
    if (value !== 0)
      return "" + value;
  } else if (true === value)
    return "true";
  else if (false === value)
    return "false";
  else if (value == null)
    return "null";
  res = J.toString$0(value);
  if (typeof res !== "string")
    throw H.wrapException(P.ArgumentError$(value));
  return res;
},

Primitives_initializeStatics: function(id) {
  $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + H.S(id));
  $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + H.S(id));
},

Primitives_objectHashCode: function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = Math.random() * 0x3fffffff | 0;
    object.$identityHash = hash;
  }
  return hash;
},

Primitives__throwFormatException: function(string) {
  throw H.wrapException(P.FormatException$(string));
},

Primitives_parseDouble: function(source, handleError) {
  var result, trimmed;
  handleError = H.Primitives__throwFormatException$closure;
  if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if (isNaN(result)) {
    trimmed = C.JSString_methods.trim$0(source);
    if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
      return result;
    return handleError.call$1(source);
  }
  return result;
},

Primitives_objectTypeName: function(object) {
  var $name, decompiled;
  $name = C.JS_CONST_86y(J.getInterceptor(object));
  if ($name === "Object") {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  if (J.getInterceptor$s($name).codeUnitAt$1($name, 0) === 36)
    $name = C.JSString_methods.substring$1($name, 1);
  return $name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null);
},

Primitives_objectToString: function(object) {
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Primitives_newFixedList: function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
},

Primitives__fromCharCodeApply: function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result += String.fromCharCode.apply(null, subarray);
  }
  return result;
},

Primitives_stringFromCodePoints: function(codePoints) {
  var a, t1, i;
  a = [];
  a.$builtinTypeInfo = [J.JSInt];
  for (t1 = new H.ListIterator(codePoints, codePoints.length, 0, null); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i <= 65535)
      a.push(i);
    else if (i <= 1114111) {
      a.push(55296 + (C.JSInt_methods.$shr(i - 65536, 10) & 1023));
      a.push(56320 + (i & 1023));
    } else
      throw H.wrapException(P.ArgumentError$(i));
  }
  return H.Primitives__fromCharCodeApply(a);
},

Primitives_stringFromCharCodes: function(charCodes) {
  var t1, i;
  for (t1 = new H.ListIterator(charCodes, charCodes.length, 0, null); t1.moveNext$0();) {
    i = t1._current;
    if (typeof i !== "number" || Math.floor(i) !== i)
      throw H.wrapException(P.ArgumentError$(i));
    if (i < 0)
      throw H.wrapException(P.ArgumentError$(i));
    if (i > 65535)
      return H.Primitives_stringFromCodePoints(charCodes);
  }
  return H.Primitives__fromCharCodeApply(charCodes);
},

Primitives_lazyAsJsDate: function(receiver) {
  if (receiver.date === void 0)
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
},

Primitives_getYear: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
},

Primitives_getMonth: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
},

Primitives_getDay: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
},

Primitives_getHours: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
},

Primitives_getMinutes: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
},

Primitives_getSeconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
},

Primitives_getMilliseconds: function(receiver) {
  return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
},

Primitives_getProperty: function(object, key) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  return object[key];
},

Primitives_setProperty: function(object, key, value) {
  if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
    throw H.wrapException(new P.ArgumentError(object));
  object[key] = value;
},

iae: function(argument) {
  throw H.wrapException(P.ArgumentError$(argument));
},

ioore: function(receiver, index) {
  if (receiver == null)
    J.get$length$asx(receiver);
  if (typeof index !== "number" || Math.floor(index) !== index)
    H.iae(index);
  throw H.wrapException(P.RangeError$value(index));
},

wrapException: function(ex) {
  var wrapper;
  if (ex == null)
    ex = new P.NullThrownError();
  wrapper = new Error();
  wrapper.dartException = ex;
  if ("defineProperty" in Object) {
    Object.defineProperty(wrapper, "message", { get: H.toStringWrapper$closure.call$0 });
    wrapper.name = "";
  } else
    wrapper.toString = H.toStringWrapper$closure.call$0;
  return wrapper;
},

toStringWrapper: function() {
  return J.toString$0(this.dartException);
},

throwExpression: function(ex) {
  throw H.wrapException(ex);
},

unwrapException: function(ex) {
  var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
  t1 = new H.unwrapException_saveStackTrace(ex);
  if (ex == null)
    return;
  if (typeof ex !== "object")
    return ex;
  if ("dartException" in ex)
    return t1.call$1(ex.dartException);
  else if (!("message" in ex))
    return ex;
  message = ex.message;
  if ("number" in ex && typeof ex.number == "number") {
    number = ex.number;
    ieErrorCode = number & 65535;
    if ((C.JSInt_methods.$shr(number, 16) & 8191) === 10)
      switch (ieErrorCode) {
        case 438:
          return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
        case 445:
        case 5007:
          t2 = H.S(message) + " (Error " + ieErrorCode + ")";
          return t1.call$1(new H.NullError(t2, null));
        default:
      }
  }
  if (ex instanceof TypeError) {
    t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
    t3 = $.get$TypeErrorDecoder_notClosurePattern();
    t4 = $.get$TypeErrorDecoder_nullCallPattern();
    nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
    t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
    t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
    t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
    $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
    t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
    t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
    match = t2.matchTypeError$1(message);
    if (match != null)
      return t1.call$1(H.JsNoSuchMethodError$(message, match));
    else {
      match = t3.matchTypeError$1(message);
      if (match != null) {
        match.method = "call";
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      } else {
        match = t4.matchTypeError$1(message);
        if (match == null) {
          match = nullLiteralCall.matchTypeError$1(message);
          if (match == null) {
            match = t5.matchTypeError$1(message);
            if (match == null) {
              match = t6.matchTypeError$1(message);
              if (match == null) {
                match = t7.matchTypeError$1(message);
                if (match == null) {
                  match = nullLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = t8.matchTypeError$1(message);
                    if (match == null) {
                      match = t9.matchTypeError$1(message);
                      t2 = match != null;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
        } else
          t2 = true;
        if (t2) {
          t2 = match == null ? null : match.method;
          return t1.call$1(new H.NullError(message, t2));
        }
      }
    }
    t2 = typeof message === "string" ? message : "";
    return t1.call$1(new H.UnknownJsTypeError(t2));
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return new P.StackOverflowError();
    return t1.call$1(new P.ArgumentError(null));
  }
  if (typeof InternalError == "function" && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return new P.StackOverflowError();
  return ex;
},

objectHashCode: function(object) {
  if (object == null || typeof object != 'object')
    return J.get$hashCode$(object);
  else
    return H.Primitives_objectHashCode(object);
},

fillLiteralMap: function(keyValuePairs, result) {
  var $length, index, index0, index1;
  $length = keyValuePairs.length;
  for (index = 0; index < $length; index = index1) {
    index0 = index + 1;
    index1 = index0 + 1;
    result.$indexSet(result, keyValuePairs[index], keyValuePairs[index0]);
  }
  return result;
},

invokeClosure: function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
  var t1 = J.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0))
    return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
  else if (t1.$eq(numberOfArguments, 1))
    return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2))
    return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
  else if (t1.$eq(numberOfArguments, 3))
    return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
  else if (t1.$eq(numberOfArguments, 4))
    return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
  else
    throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
},

convertDartClosureToJS: function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,$globalState.currentContext,H.invokeClosure$closure.call$7);
  closure.$identity = $function;
  return $function;
},

throwCyclicInit: function(staticName) {
  throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
},

createRuntimeType: function($name) {
  return new H.TypeImpl($name, null);
},

setRuntimeTypeInfo: function(target, typeInfo) {
  if (target != null)
    target.$builtinTypeInfo = typeInfo;
  return target;
},

getRuntimeTypeInfo: function(target) {
  if (target == null)
    return;
  return target.$builtinTypeInfo;
},

getRuntimeTypeArguments: function(target, substitutionName) {
  return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
},

getRuntimeTypeArgument: function(target, substitutionName, index) {
  var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
  return $arguments == null ? null : $arguments[index];
},

getRuntimeTypeAsString: function(runtimeType, onTypeVariable) {
  return runtimeType[0].builtin$cls + H.joinArguments(runtimeType, 1, onTypeVariable);
},

runtimeTypeToString: function(type, onTypeVariable) {
  if (type == null)
    return "dynamic";
  else if (typeof type === "object" && type !== null && type.constructor === Array)
    return H.getRuntimeTypeAsString(type, onTypeVariable);
  else if (typeof type == "function")
    return type.builtin$cls;
  else if (typeof type === "number" && Math.floor(type) === type)
    return C.JSInt_methods.toString$0(type);
  else
    return;
},

joinArguments: function(types, startIndex, onTypeVariable) {
  var buffer, index, firstArgument, allDynamic, argument, str;
  if (types == null)
    return "";
  buffer = P.StringBuffer$("");
  for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      buffer._contents = buffer._contents + ", ";
    argument = types[index];
    if (argument != null)
      allDynamic = false;
    str = H.runtimeTypeToString(argument, onTypeVariable);
    str = typeof str === "string" ? str : H.S(str);
    buffer._contents = buffer._contents + str;
  }
  return allDynamic ? "" : "<" + H.S(buffer) + ">";
},

substitute: function(substitution, $arguments) {
  if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
    $arguments = substitution;
  else if (typeof substitution == "function") {
    substitution = H.invokeOn(substitution, null, $arguments);
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function")
      $arguments = H.invokeOn(substitution, null, $arguments);
  }
  return $arguments;
},

computeSignature: function(signature, context, contextName) {
  return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
},

invokeOn: function($function, receiver, $arguments) {
  return $function.apply(receiver, $arguments);
},

toStringForNativeObject: function(obj) {
  var t1 = $.getTagFunction;
  return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
},

hashCodeForNativeObject: function(object) {
  return H.Primitives_objectHashCode(object);
},

defineProperty: function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
},

lookupAndCacheInterceptor: function(obj) {
  var tag, record, interceptor, interceptorClass, mark, t1;
  tag = $.getTagFunction.call$1(obj);
  record = $.dispatchRecordsForInstanceTags[tag];
  if (record != null) {
    Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return record.i;
  }
  interceptor = $.interceptorsForUncacheableTags[tag];
  if (interceptor != null)
    return interceptor;
  interceptorClass = init.interceptorsByTag[tag];
  if (interceptorClass == null) {
    tag = $.alternateTagFunction.call$2(obj, tag);
    if (tag != null) {
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
    }
  }
  if (interceptorClass == null)
    return;
  interceptor = interceptorClass.prototype;
  mark = tag[0];
  if (mark === "!") {
    record = H.makeLeafDispatchRecord(interceptor);
    $.dispatchRecordsForInstanceTags[tag] = record;
    Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return record.i;
  }
  if (mark === "~") {
    $.interceptorsForUncacheableTags[tag] = interceptor;
    return interceptor;
  }
  if (mark === "-") {
    t1 = H.makeLeafDispatchRecord(interceptor);
    Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
    return t1.i;
  }
  if (mark === "+")
    return H.patchInteriorProto(obj, interceptor);
  if (mark === "*")
    throw H.wrapException(P.UnimplementedError$(tag));
  if (init.leafTags[tag] === true) {
    t1 = H.makeLeafDispatchRecord(interceptor);
    Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
    return t1.i;
  } else
    return H.patchInteriorProto(obj, interceptor);
},

patchInteriorProto: function(obj, interceptor) {
  var proto, record;
  proto = Object.getPrototypeOf(obj);
  record = J.makeDispatchRecord(interceptor, proto, null, null);
  Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
  return interceptor;
},

makeLeafDispatchRecord: function(interceptor) {
  return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
},

makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
  var interceptor = interceptorClass.prototype;
  if (init.leafTags[tag] === true)
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  else
    return J.makeDispatchRecord(interceptor, proto, null, null);
},

initNativeDispatch: function() {
  if (true === $.initNativeDispatchFlag)
    return;
  $.initNativeDispatchFlag = true;
  H.initNativeDispatchContinue();
},

initNativeDispatchContinue: function() {
  var map, tags, i, tag, proto, record, interceptorClass;
  $.dispatchRecordsForInstanceTags = Object.create(null);
  $.interceptorsForUncacheableTags = Object.create(null);
  H.initHooks();
  map = init.interceptorsByTag;
  tags = Object.getOwnPropertyNames(map);
  if (typeof window != "undefined") {
    window;
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      proto = $.prototypeForTagFunction.call$1(tag);
      if (proto != null) {
        record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
        if (record != null)
          Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      }
    }
  }
  for (i = 0; i < tags.length; ++i) {
    tag = tags[i];
    if (/^[A-Za-z_]/.test(tag)) {
      interceptorClass = map[tag];
      map["!" + tag] = interceptorClass;
      map["~" + tag] = interceptorClass;
      map["-" + tag] = interceptorClass;
      map["+" + tag] = interceptorClass;
      map["*" + tag] = interceptorClass;
    }
  }
},

initHooks: function() {
  var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
  hooks = C.JS_CONST_TtD();
  hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_rD3, H.applyHooksTransformer(C.JS_CONST_6qb, H.applyHooksTransformer(C.JS_CONST_Cbr(C.JS_CONST_86y), hooks))))));
  if (typeof dartNativeDispatchHooksTransformer != "undefined") {
    transformers = dartNativeDispatchHooksTransformer;
    if (typeof transformers == "function")
      transformers = [transformers];
    if (transformers.constructor == Array)
      for (i = 0; i < transformers.length; ++i) {
        transformer = transformers[i];
        if (typeof transformer == "function")
          hooks = transformer(hooks) || hooks;
      }
  }
  getTag = hooks.getTag;
  getUnknownTag = hooks.getUnknownTag;
  prototypeForTag = hooks.prototypeForTag;
  $.getTagFunction = new H.initHooks_closure(getTag);
  $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
  $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
},

applyHooksTransformer: function(transformer, hooks) {
  return transformer(hooks) || hooks;
},

stringContainsUnchecked: function(receiver, other, startIndex) {
  return C.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
},

stringReplaceAllUnchecked: function(receiver, from, to) {
  var result, $length, i, t1;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = P.StringBuffer$("");
      $length = receiver.length;
      result.write$1(to);
      for (i = 0; i < $length; ++i) {
        t1 = receiver[i];
        result._contents = result._contents + t1;
        result._contents = result._contents + to;
      }
      return result._contents;
    }
  else
    return receiver.replace(new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to.replace("$", "$$$$"));
},

TypeErrorDecoder: {"": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
  matchTypeError$1: function(message) {
    var match, result, t1;
    match = new RegExp(this._pattern).exec(message);
    if (match == null)
      return;
    result = {};
    t1 = this._arguments;
    if (t1 !== -1)
      result.arguments = match[t1 + 1];
    t1 = this._argumentsExpr;
    if (t1 !== -1)
      result.argumentsExpr = match[t1 + 1];
    t1 = this._expr;
    if (t1 !== -1)
      result.expr = match[t1 + 1];
    t1 = this._method;
    if (t1 !== -1)
      result.method = match[t1 + 1];
    t1 = this._receiver;
    if (t1 !== -1)
      result.receiver = match[t1 + 1];
    return result;
  },
  static: {
"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern",
TypeErrorDecoder_extractPattern: function(message) {
  var match, $arguments, argumentsExpr, expr, method, receiver;
  message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
  match = message.match(/\\\$[a-zA-Z]+\\\$/g);
  if (match == null)
    match = [];
  $arguments = match.indexOf("\\$arguments\\$");
  argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
  expr = match.indexOf("\\$expr\\$");
  method = match.indexOf("\\$method\\$");
  receiver = match.indexOf("\\$receiver\\$");
  return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
},

TypeErrorDecoder_provokeCallErrorOn: function(expression) {
  return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokeCallErrorOnNull: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokeCallErrorOnUndefined: function() {
  return function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
  return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
},

TypeErrorDecoder_provokePropertyErrorOnNull: function() {
  return function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}();
},

TypeErrorDecoder_provokePropertyErrorOnUndefined: function() {
  return function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}();
}}

},

NullError: {"": "Error;_message,_method",
  toString$0: function(_) {
    var t1 = this._method;
    if (t1 == null)
      return "NullError: " + H.S(this._message);
    return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
  },
  $isNoSuchMethodError: true,
  $isError: true
},

JsNoSuchMethodError: {"": "Error;_message,_method,_receiver",
  toString$0: function(_) {
    var t1, t2;
    t1 = this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + H.S(this._message);
    t2 = this._receiver;
    if (t2 == null)
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
    return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
  },
  $isNoSuchMethodError: true,
  $isError: true,
  static: {
JsNoSuchMethodError$: function(_message, match) {
  var t1, t2;
  t1 = match == null;
  t2 = t1 ? null : match.method;
  t1 = t1 ? null : match.receiver;
  return new H.JsNoSuchMethodError(_message, t2, t1);
}}

},

UnknownJsTypeError: {"": "Error;_message",
  toString$0: function(_) {
    var t1 = this._message;
    return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
  }
},

unwrapException_saveStackTrace: {"": "Closure;ex_0",
  call$1: function(error) {
    var t1 = J.getInterceptor(error);
    if (typeof error === "object" && error !== null && !!t1.$isError)
      if (error.$thrownJsError == null)
        error.$thrownJsError = this.ex_0;
    return error;
  },
  $is_args1: true
},

_StackTrace: {"": "Object;_exception,_trace",
  toString$0: function(_) {
    var t1, trace;
    t1 = this._trace;
    if (t1 != null)
      return t1;
    t1 = this._exception;
    trace = typeof t1 === "object" ? t1.stack : null;
    t1 = trace == null ? "" : trace;
    this._trace = t1;
    return t1;
  }
},

invokeClosure_closure: {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
},

invokeClosure_closure0: {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
},

invokeClosure_closure1: {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
},

invokeClosure_closure2: {"": "Closure;closure_6,arg1_7,arg2_8,arg3_9",
  call$0: function() {
    return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
  }
},

invokeClosure_closure3: {"": "Closure;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
  call$0: function() {
    return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
  }
},

Closure: {"": "Object;",
  toString$0: function(_) {
    return "Closure";
  }
},

BoundClosure: {"": "Closure;_self,_target,_receiver,__js_helper$_name",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
      return false;
    return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
  },
  get$hashCode: function(_) {
    var t1, receiverHashCode;
    t1 = this._receiver;
    if (t1 == null)
      receiverHashCode = H.Primitives_objectHashCode(this._self);
    else
      receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
    return (receiverHashCode ^ H.Primitives_objectHashCode(this._target)) >>> 0;
  },
  $isBoundClosure: true
},

TypeImpl: {"": "Object;_typeName,_unmangledName",
  toString$0: function(_) {
    var t1, unmangledName, unmangledName0;
    t1 = this._unmangledName;
    if (t1 != null)
      return t1;
    unmangledName = this._typeName;
    unmangledName0 = H.unmangleGlobalNameIfPreservedAnyways(unmangledName);
    unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
    this._unmangledName = unmangledName;
    return unmangledName;
  },
  get$hashCode: function(_) {
    return J.get$hashCode$(this._typeName);
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName);
  },
  $isTypeImpl: true
},

initHooks_closure: {"": "Closure;getTag_0",
  call$1: function(o) {
    return this.getTag_0(o);
  },
  $is_args1: true
},

initHooks_closure0: {"": "Closure;getUnknownTag_1",
  call$2: function(o, tag) {
    return this.getUnknownTag_1(o, tag);
  },
  $is_args2: true
},

initHooks_closure1: {"": "Closure;prototypeForTag_2",
  call$1: function(tag) {
    return this.prototypeForTag_2(tag);
  },
  $is_args1: true
},

JSSyntaxRegExp: {"": "Object;_nativeRegExp,_nativeGlobalRegExp,_nativeAnchoredRegExp", static: {
JSSyntaxRegExp_makeNative: function(pattern, multiLine, caseSensitive, global) {
  var m, i, g, regexp, errorMessage;
  m = multiLine ? "m" : "";
  i = caseSensitive ? "" : "i";
  g = global ? "g" : "";
  regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
  if (regexp instanceof RegExp)
    return regexp;
  errorMessage = String(regexp);
  throw H.wrapException(P.FormatException$("Illegal RegExp pattern: " + pattern + ", " + errorMessage));
}}
},

StringMatch: {"": "Object;start,input,pattern",
  $index: function(_, g) {
    if (g !== 0)
      H.throwExpression(P.RangeError$value(g));
    return this.pattern;
  }
}}],
["dart._collection.dev", "dart:_collection-dev", , H, {
Arrays_copy: function(src, srcStart, dst, dstStart, count) {
  var i, j, t1;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
  else
    for (t1 = srcStart + count, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw H.ioore(src, i);
      C.JSArray_methods.$indexSet(dst, j, src[i]);
    }
},

Arrays_indexOf: function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i >>> 0 !== i || i >= a.length)
      throw H.ioore(a, i);
    if (J.$eq(a[i], element))
      return i;
  }
  return -1;
},

IterableMixinWorkaround_forEach: function(iterable, f) {
  var t1;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    f.call$1(t1._current);
},

IterableMixinWorkaround_any: function(iterable, f) {
  var t1;
  for (t1 = new H.ListIterator(iterable, iterable.length, 0, null); t1.moveNext$0();)
    if (f.call$1(t1._current) === true)
      return true;
  return false;
},

IterableMixinWorkaround_toStringIterable: function(iterable, leftDelimiter, rightDelimiter) {
  var result, i, t1;
  for (i = 0; i < $.get$IterableMixinWorkaround__toStringList().length; ++i) {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (i >= t1.length)
      throw H.ioore(t1, i);
    if (t1[i] === iterable)
      return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
  }
  result = P.StringBuffer$("");
  try {
    $.get$IterableMixinWorkaround__toStringList().push(iterable);
    result.write$1(leftDelimiter);
    result.writeAll$2(iterable, ", ");
    result.write$1(rightDelimiter);
  } finally {
    t1 = $.get$IterableMixinWorkaround__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

IterableMixinWorkaround_sortList: function(list, compare) {
  H.Sort__doSort(list, 0, list.length - 1, compare);
},

IterableMixinWorkaround__rangeCheck: function(list, start, end) {
  if (start < 0 || start > list.length)
    throw H.wrapException(P.RangeError$range(start, 0, list.length));
  if (end < start || end > list.length)
    throw H.wrapException(P.RangeError$range(end, start, list.length));
},

IterableMixinWorkaround_setRangeList: function(list, start, end, from, skipCount) {
  var $length;
  H.IterableMixinWorkaround__rangeCheck(list, start, end);
  $length = end - start;
  if ($length === 0)
    return;
  if (skipCount < 0)
    throw H.wrapException(new P.ArgumentError(skipCount));
  if (skipCount + $length > from.length)
    throw H.wrapException(P.StateError$("Not enough elements"));
  H.Arrays_copy(from, skipCount, list, start, $length);
},

printToConsole: function(line) {
  if (typeof dartPrint == "function") {
    dartPrint(line);
    return;
  }
  if (typeof console == "object" && typeof console.log == "function") {
    console.log(line);
    return;
  }
  if (typeof window == "object")
    return;
  if (typeof print == "function") {
    print(line);
    return;
  }
  throw "Unable to print message: " + String(line);
},

Sort__doSort: function(a, left, right, compare) {
  if (right - left <= 32)
    H.Sort__insertionSort(a, left, right, compare);
  else
    H.Sort__dualPivotQuicksort(a, left, right, compare);
},

Sort__insertionSort: function(a, left, right, compare) {
  var i, t1, el, j, j0;
  for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
    el = t1.$index(a, i);
    j = i;
    while (true) {
      if (!(j > left && J.$gt$n(compare.call$2(t1.$index(a, j - 1), el), 0)))
        break;
      j0 = j - 1;
      t1.$indexSet(a, j, t1.$index(a, j0));
      j = j0;
    }
    t1.$indexSet(a, j, el);
  }
},

Sort__dualPivotQuicksort: function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, great0, less0, pivots_are_equal;
  sixth = C.JSInt_methods.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = C.JSInt_methods.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = J.getInterceptor$asx(a);
  el1 = t1.$index(a, index1);
  el2 = t1.$index(a, index2);
  el3 = t1.$index(a, index3);
  el4 = t1.$index(a, index4);
  el5 = t1.$index(a, index5);
  if (J.$gt$n(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if (J.$gt$n(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if (J.$gt$n(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if (J.$gt$n(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1.$indexSet(a, index1, el1);
  t1.$indexSet(a, index3, el3);
  t1.$indexSet(a, index5, el5);
  t1.$indexSet(a, index2, t1.$index(a, left));
  t1.$indexSet(a, index4, t1.$index(a, right));
  less = left + 1;
  great = right - 1;
  if (J.$eq(compare.call$2(el2, el4), 0)) {
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      comp = compare.call$2(ak, el2);
      t2 = J.getInterceptor(comp);
      if (t2.$eq(comp, 0))
        continue;
      if (t2.$lt(comp, 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          comp = compare.call$2(t1.$index(a, great), el2);
          t2 = J.getInterceptor$n(comp);
          if (t2.$gt(comp, 0)) {
            --great;
            continue;
          } else {
            great0 = great - 1;
            if (t2.$lt(comp, 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
    pivots_are_equal = true;
  } else {
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      if (J.$lt$n(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else if (J.$gt$n(compare.call$2(ak, el4), 0))
        for (; true;)
          if (J.$gt$n(compare.call$2(t1.$index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            great0 = great - 1;
            if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    pivots_are_equal = false;
  }
  t2 = less - 1;
  t1.$indexSet(a, left, t1.$index(a, t2));
  t1.$indexSet(a, t2, el2);
  t2 = great + 1;
  t1.$indexSet(a, right, t1.$index(a, t2));
  t1.$indexSet(a, t2, el4);
  H.Sort__doSort(a, left, less - 2, compare);
  H.Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    for (; J.$eq(compare.call$2(t1.$index(a, less), el2), 0);)
      ++less;
    for (; J.$eq(compare.call$2(t1.$index(a, great), el4), 0);)
      --great;
    for (k = less; k <= great; ++k) {
      ak = t1.$index(a, k);
      if (J.$eq(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1.$indexSet(a, k, t1.$index(a, less));
          t1.$indexSet(a, less, ak);
        }
        ++less;
      } else if (J.$eq(compare.call$2(ak, el4), 0))
        for (; true;)
          if (J.$eq(compare.call$2(t1.$index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            great0 = great - 1;
            if (J.$lt$n(compare.call$2(t1.$index(a, great), el2), 0)) {
              t1.$indexSet(a, k, t1.$index(a, less));
              less0 = less + 1;
              t1.$indexSet(a, less, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              t1.$indexSet(a, k, t1.$index(a, great));
              t1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    H.Sort__doSort(a, less, great, compare);
  } else
    H.Sort__doSort(a, less, great, compare);
},

Symbol_getName: function(symbol) {
  return symbol.get$_name();
},

ListIterable: {"": "IterableBase;",
  get$iterator: function(_) {
    return new H.ListIterator(this, this.get$length(this), 0, null);
  },
  forEach$1: function(_, action) {
    var $length, i;
    $length = this.get$length(this);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.elementAt$1(this, i));
      if ($length !== this.get$length(this))
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

ListIterator: {"": "Object;_iterable,_length,_index,_current",
  get$current: function() {
    return this._current;
  },
  moveNext$0: function() {
    var t1, t2, $length, t3;
    t1 = this._iterable;
    t2 = J.getInterceptor$asx(t1);
    $length = t2.get$length(t1);
    if (this._length !== $length)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    t3 = this._index;
    if (t3 >= $length) {
      this._current = null;
      return false;
    }
    this._current = t2.elementAt$1(t1, t3);
    this._index = this._index + 1;
    return true;
  }
},

MappedIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = this._iterable;
    t1 = t1.get$iterator(t1);
    t1 = new H.MappedIterator(null, t1, this._f);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "MappedIterable", 0), H.getRuntimeTypeArgument(this, "MappedIterable", 1)]);
    return t1;
  },
  get$length: function(_) {
    var t1 = this._iterable;
    return t1.get$length(t1);
  },
  $asIterableBase: function($S, $T) {
    return [$T];
  },
  static: {
MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
  var t1;
  if (!!iterable.$isEfficientLength) {
    t1 = new H.EfficientLengthMappedIterable(iterable, $function);
    H.setRuntimeTypeInfo(t1, [$S, $T]);
    return t1;
  }
  t1 = new H.MappedIterable(iterable, $function);
  H.setRuntimeTypeInfo(t1, [$S, $T]);
  return t1;
}}

},

EfficientLengthMappedIterable: {"": "MappedIterable;_iterable,_f", $asMappedIterable: null, $isEfficientLength: true},

MappedIterator: {"": "Iterator;_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0()) {
      this._current = this._f$1(t1.get$current());
      return true;
    }
    this._current = null;
    return false;
  },
  get$current: function() {
    return this._current;
  },
  $asIterator: function($S, $T) {
    return [$T];
  }
},

MappedListIterable: {"": "ListIterable;_source,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$length: function(_) {
    return J.get$length$asx(this._source);
  },
  elementAt$1: function(_, index) {
    return this._f$1(J.elementAt$1$ax(this._source, index));
  },
  $asListIterable: function($S, $T) {
    return [$T];
  },
  $isEfficientLength: true
},

WhereIterable: {"": "IterableBase;_iterable,_f",
  get$iterator: function(_) {
    var t1 = J.get$iterator$ax(this._iterable);
    t1 = new H.WhereIterator(t1, this._f);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "WhereIterable", 0)]);
    return t1;
  },
  $asIterableBase: null
},

WhereIterator: {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0();)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  },
  $asIterator: null
},

FixedLengthListMixin: {"": "Object;",
  set$length: function(receiver, newLength) {
    throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
  },
  add$1: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  removeAt$1: function(receiver, index) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  removeRange$2: function(receiver, start, end) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
  }
}}],
["dart._js_names", "dart:_js_names", , H, {
unmangleGlobalNameIfPreservedAnyways: function($name) {
  return init.mangledGlobalNames[$name];
}}],
["dart.async", "dart:async", , P, {
_invokeErrorHandler: function(errorHandler, error, stackTrace) {
  var t1 = J.getInterceptor(errorHandler);
  if (!!t1.$is_args2)
    return errorHandler.call$2(error, stackTrace);
  else
    return errorHandler.call$1(error);
},

_registerErrorHandler: function(errorHandler, zone) {
  var t1 = J.getInterceptor(errorHandler);
  zone.toString;
  if (!!t1.$is_args2)
    return errorHandler;
  else
    return errorHandler;
},

Future_wait: function(futures) {
  var t1, t2, t3, future, pos, t4, t5, result, completer;
  t1 = {};
  t1.completer_0 = null;
  t1.values_1 = null;
  t2 = new P.Future_wait_handleError(t1);
  t1.remaining_2 = 0;
  for (t3 = new H.ListIterator(futures, futures.length, 0, null); t3.moveNext$0();) {
    future = t3._current;
    pos = t1.remaining_2;
    t1.remaining_2 = pos + 1;
    t4 = future.catchError$1(t2);
    t5 = $.Zone__current;
    t5.toString;
    result = new P._Future(0, t5, null, null, new P.Future_wait_closure(t1, pos), null, P._registerErrorHandler(null, t5), null);
    result.$builtinTypeInfo = [null];
    t4._addListener$1(result);
  }
  t2 = t1.remaining_2;
  if (t2 === 0)
    return P._Future$immediate(C.List_empty, null);
  t1.values_1 = P.List_List(t2, null);
  t2 = J.JSArray;
  completer = new P._AsyncCompleter(P._Future$(t2));
  H.setRuntimeTypeInfo(completer, [t2]);
  t1.completer_0 = completer;
  return t1.completer_0.future;
},

_asyncRunCallback: function() {
  var callback, t1, exception, milliseconds;
  for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
    callback = $.get$_asyncCallbacks().removeFirst$0();
    try {
      callback.call$0();
    } catch (exception) {
      H.unwrapException(exception);
      milliseconds = C.JSNumber_methods.$tdiv(C.Duration_0._duration, 1000);
      H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure);
      throw exception;
    }

  }
  $._callbacksAreEnqueued = false;
},

_scheduleAsyncCallback: function(callback) {
  $.get$_asyncCallbacks()._add$1(callback);
  if (!$._callbacksAreEnqueued) {
    P._createTimer(C.Duration_0, P._asyncRunCallback$closure);
    $._callbacksAreEnqueued = true;
  }
},

scheduleMicrotask: function(callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    P._scheduleAsyncCallback(callback);
    return;
  }
  P._scheduleAsyncCallback(t1.bindCallback$2$runGuarded(callback, true));
},

StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
  var t1;
  if (sync) {
    t1 = new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  } else {
    t1 = new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
    H.setRuntimeTypeInfo(t1, [$T]);
  }
  return t1;
},

_runGuarded: function(notificationHandler) {
  var result, e, s, t1, t2, exception;
  if (notificationHandler == null)
    return;
  try {
    result = notificationHandler.call$0();
    t1 = result;
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
      return result;
    return;
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    t1 = $.Zone__current;
    t1.toString;
    P._rootHandleUncaughtError(t1, null, t1, e, s);
  }

},

_nullDataHandler: function(value) {
},

_nullErrorHandler: function(error, stackTrace) {
  var t1 = $.Zone__current;
  t1.toString;
  P._rootHandleUncaughtError(t1, null, t1, error, stackTrace);
},

_nullDoneHandler: function() {
},

_runUserCode: function(userCode, onSuccess, onError) {
  var e, s, exception, t1;
  try {
    onSuccess.call$1(userCode.call$0());
  } catch (exception) {
    t1 = H.unwrapException(exception);
    e = t1;
    s = new H._StackTrace(exception, null);
    onError.call$2(e, s);
  }

},

_cancelAndError: function(subscription, future, error, stackTrace) {
  var cancelFuture, t1;
  cancelFuture = subscription.cancel$0();
  t1 = J.getInterceptor(cancelFuture);
  if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
    cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
  else
    future._completeError$2(error, stackTrace);
},

_cancelAndErrorClosure: function(subscription, future) {
  return new P._cancelAndErrorClosure_closure(subscription, future);
},

Timer_Timer: function(duration, callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    return P._createTimer(duration, callback);
  }
  return P._createTimer(duration, t1.bindCallback$2$runGuarded(callback, true));
},

Timer_Timer$periodic: function(duration, callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone) {
    t1.toString;
    return P._createPeriodicTimer(duration, callback);
  }
  return P._createPeriodicTimer(duration, t1.bindUnaryCallback$2$runGuarded(callback, true));
},

_createTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
},

_createPeriodicTimer: function(duration, callback) {
  var milliseconds = C.JSNumber_methods.$tdiv(duration._duration, 1000);
  return H.TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
},

_rootHandleUncaughtError: function($self, $parent, zone, error, stackTrace) {
  P._rootRun($self, null, $self, new P._rootHandleUncaughtError_closure(error, stackTrace));
},

_rootRun: function($self, $parent, zone, f) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$0();
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$0();
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_rootRunUnary: function($self, $parent, zone, f, arg) {
  var old, t1, t2;
  t1 = $.Zone__current;
  t2 = zone;
  if (t1 == null ? t2 == null : t1 === t2)
    return f.call$1(arg);
  old = t1;
  try {
    $.Zone__current = zone;
    t1 = f.call$1(arg);
    return t1;
  } finally {
    $.Zone__current = old;
  }
},

_AsyncError: {"": "Object;error>,stackTrace<", $isError: true},

Future: {"": "Object;", $isFuture: true},

Future_wait_handleError: {"": "Closure;box_0",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.values_1 != null) {
      t1.values_1 = null;
      t1.completer_0.completeError$1(error);
    }
    return;
  },
  $is_args1: true
},

Future_wait_closure: {"": "Closure;box_0,pos_1",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.values_1;
    if (t2 == null)
      return;
    t3 = this.pos_1;
    if (t3 < 0 || t3 >= t2.length)
      throw H.ioore(t2, t3);
    t2[t3] = value;
    t1.remaining_2 = t1.remaining_2 - 1;
    if (t1.remaining_2 === 0) {
      t2 = t1.completer_0;
      t1 = t1.values_1;
      t2 = t2.future;
      if (t2._state !== 0)
        H.throwExpression(P.StateError$("Future already completed"));
      t2._asyncComplete$1(t1);
    }
  },
  $is_args1: true
},

_Completer: {"": "Object;"},

_AsyncCompleter: {"": "_Completer;future",
  completeError$2: function(error, stackTrace) {
    var t1;
    if (error == null)
      throw H.wrapException(new P.ArgumentError("Error must not be null"));
    t1 = this.future;
    if (t1._state !== 0)
      throw H.wrapException(P.StateError$("Future already completed"));
    t1._asyncCompleteError$2(error, stackTrace);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  },
  $as_Completer: null
},

_Future: {"": "Object;_state,_zone<,_resultOrListeners,_nextListener<,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
  get$_isComplete: function() {
    return this._state >= 4;
  },
  get$_hasError: function() {
    return this._state === 8;
  },
  set$_isChained: function(value) {
    if (value)
      this._state = 2;
    else
      this._state = 0;
  },
  get$_onValue: function() {
    return this._state === 2 ? null : this._onValueCallback;
  },
  _onValue$1: function(arg0) {
    return this.get$_onValue().call$1(arg0);
  },
  get$_whenCompleteAction: function() {
    return this._state === 2 ? null : this._whenCompleteActionCallback;
  },
  _whenCompleteAction$0: function() {
    return this.get$_whenCompleteAction().call$0();
  },
  then$2$onError: function(f, onError) {
    var result = P._Future$_then(f, onError, null);
    this._addListener$1(result);
    return result;
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(onError, test) {
    var result = P._Future$_catchError(onError, test, null);
    this._addListener$1(result);
    return result;
  },
  catchError$1: function(onError) {
    return this.catchError$2$test(onError, null);
  },
  whenComplete$1: function(action) {
    var result = P._Future$_whenComplete(action, H.getRuntimeTypeArgument(this, "_Future", 0));
    this._addListener$1(result);
    return result;
  },
  get$_async$_value: function() {
    return this._resultOrListeners;
  },
  get$_error: function() {
    return this._resultOrListeners;
  },
  _setValue$1: function(value) {
    this._state = 4;
    this._resultOrListeners = value;
  },
  _setError$2: function(error, stackTrace) {
    this._state = 8;
    this._resultOrListeners = new P._AsyncError(error, stackTrace);
  },
  _addListener$1: function(listener) {
    if (this._state >= 4) {
      this._zone.toString;
      P._scheduleAsyncCallback(new P._Future__addListener_closure(this, listener));
    } else {
      listener._nextListener = this._resultOrListeners;
      this._resultOrListeners = listener;
    }
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; current != null; prev = current, current = next) {
      next = current.get$_nextListener();
      current._nextListener = prev;
    }
    return prev;
  },
  _complete$1: function(value) {
    var t1, listeners;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isFuture) {
      P._Future__chainFutures(value, this);
      return;
    }
    listeners = this._removeListeners$0();
    this._setValue$1(value);
    P._Future__propagateToListeners(this, listeners);
  },
  _completeError$2: function(error, stackTrace) {
    var listeners = this._removeListeners$0();
    this._setError$2(error, stackTrace);
    P._Future__propagateToListeners(this, listeners);
  },
  get$_completeError: function() {
    return new P.BoundClosure$2(this, P._Future.prototype._completeError$2, null, "_completeError$2");
  },
  _asyncComplete$1: function(value) {
    if (this._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncComplete_closure(this, value));
  },
  _asyncCompleteError$2: function(error, stackTrace) {
    if (this._state !== 0)
      H.throwExpression(P.StateError$("Future already completed"));
    this._state = 1;
    this._zone.toString;
    P._scheduleAsyncCallback(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
  },
  _async$_Future$immediate$1: function(value, $T) {
    this._asyncComplete$1(value);
  },
  $is_Future: true,
  $isFuture: true,
  static: {
"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR",
_Future$: function($T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$immediate: function(value, $T) {
  var t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$T]);
  t1._async$_Future$immediate$1(value, $T);
  return t1;
},

_Future$_then: function(onValueCallback, onErrorCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, onValueCallback, null, P._registerErrorHandler(onErrorCallback, t1), null);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future$_catchError: function(onErrorCallback, errorTestCallback, $T) {
  var t1, t2;
  t1 = $.Zone__current;
  t2 = P._registerErrorHandler(onErrorCallback, t1);
  t1.toString;
  t2 = new P._Future(0, t1, null, null, null, errorTestCallback, t2, null);
  H.setRuntimeTypeInfo(t2, [$T]);
  return t2;
},

_Future$_whenComplete: function(whenCompleteActionCallback, $T) {
  var t1 = $.Zone__current;
  t1.toString;
  t1 = new P._Future(0, t1, null, null, null, null, null, whenCompleteActionCallback);
  H.setRuntimeTypeInfo(t1, [$T]);
  return t1;
},

_Future__chainFutures: function(source, target) {
  var t1;
  target._state = 2;
  t1 = J.getInterceptor(source);
  if (typeof source === "object" && source !== null && !!t1.$is_Future)
    if (source._state >= 4)
      P._Future__propagateToListeners(source, target);
    else
      source._addListener$1(target);
  else
    source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
},

_Future__propagateMultipleListeners: function(source, listeners) {
  var listeners0;
  do {
    listeners0 = listeners.get$_nextListener();
    listeners._nextListener = null;
    P._Future__propagateToListeners(source, listeners);
    if (listeners0 != null) {
      listeners = listeners0;
      continue;
    } else
      break;
  } while (true);
},

_Future__propagateToListeners: function(source, listeners) {
  var t1, t2, hasError, asyncError, t3, t4, t5, chainSource, listeners0;
  t1 = {};
  t1.source_4 = source;
  for (; true;) {
    t2 = {};
    if (!t1.source_4.get$_isComplete())
      return;
    hasError = t1.source_4.get$_hasError();
    if (hasError && listeners == null) {
      t2 = t1.source_4;
      asyncError = t2.get$_error();
      t2 = t2._zone;
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    if (listeners == null)
      return;
    if (listeners._nextListener != null) {
      P._Future__propagateMultipleListeners(t1.source_4, listeners);
      return;
    }
    if (hasError) {
      t3 = t1.source_4.get$_zone();
      t4 = listeners._zone;
      t3.toString;
      t4.toString;
      t3 = t4 == null ? t3 != null : t4 !== t3;
    } else
      t3 = false;
    if (t3) {
      t2 = t1.source_4;
      asyncError = t2.get$_error();
      t2 = t2._zone;
      t3 = J.get$error$x(asyncError);
      t4 = asyncError.get$stackTrace();
      t2.toString;
      P._rootHandleUncaughtError(t2, null, t2, t3, t4);
      return;
    }
    t3 = $.Zone__current;
    t4 = listeners._zone;
    if (t3 == null ? t4 != null : t3 !== t4) {
      t4.toString;
      P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure(t1, listeners));
      return;
    }
    t2.listenerHasValue_1 = null;
    t2.listenerValueOrError_2 = null;
    t2.isPropagationAborted_3 = false;
    t4.toString;
    P._rootRun(t4, null, t4, new P._Future__propagateToListeners_closure0(t1, t2, hasError, listeners));
    if (t2.isPropagationAborted_3)
      return;
    t3 = t2.listenerHasValue_1 === true;
    if (t3) {
      t4 = t2.listenerValueOrError_2;
      t5 = J.getInterceptor(t4);
      t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
      t4 = t5;
    } else
      t4 = false;
    if (t4) {
      chainSource = t2.listenerValueOrError_2;
      t2 = J.getInterceptor(chainSource);
      if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
        listeners._state = 2;
        t1.source_4 = chainSource;
        continue;
      }
      P._Future__chainFutures(chainSource, listeners);
      return;
    }
    if (t3) {
      listeners0 = listeners._removeListeners$0();
      t2 = t2.listenerValueOrError_2;
      listeners._state = 4;
      listeners._resultOrListeners = t2;
    } else {
      listeners0 = listeners._removeListeners$0();
      asyncError = t2.listenerValueOrError_2;
      t2 = J.get$error$x(asyncError);
      t3 = asyncError.get$stackTrace();
      listeners._state = 8;
      listeners._resultOrListeners = new P._AsyncError(t2, t3);
    }
    t1.source_4 = listeners;
    listeners = listeners0;
  }
}}

},

_Future__addListener_closure: {"": "Closure;this_0,listener_1",
  call$0: function() {
    P._Future__propagateToListeners(this.this_0, this.listener_1);
  }
},

_Future__chainFutures_closure: {"": "Closure;target_0",
  call$1: function(value) {
    this.target_0._complete$1(value);
  },
  $is_args1: true
},

_Future__chainFutures_closure0: {"": "Closure;target_1",
  call$2: function(error, stackTrace) {
    this.target_1._completeError$2(error, stackTrace);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  },
  $is_args2: true,
  $is_args1: true
},

_Future__asyncComplete_closure: {"": "Closure;this_0,value_1",
  call$0: function() {
    this.this_0._complete$1(this.value_1);
  }
},

_Future__asyncCompleteError_closure: {"": "Closure;this_0,error_1,stackTrace_2",
  call$0: function() {
    this.this_0._completeError$2(this.error_1, this.stackTrace_2);
  }
},

_Future__propagateToListeners_closure: {"": "Closure;box_2,listener_3",
  call$0: function() {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
  }
},

_Future__propagateToListeners_closure0: {"": "Closure;box_2,box_1,hasError_4,listener_5",
  call$0: function() {
    var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, exception;
    t1 = {};
    try {
      t2 = this.box_2;
      if (!this.hasError_4) {
        value = t2.source_4.get$_async$_value();
        t2 = this.listener_5;
        t3 = t2._state === 2 ? null : t2._onValueCallback;
        t4 = this.box_1;
        if (t3 != null) {
          t4.listenerValueOrError_2 = t2._onValue$1(value);
          t4.listenerHasValue_1 = true;
        } else {
          t4.listenerValueOrError_2 = value;
          t4.listenerHasValue_1 = true;
        }
      } else {
        asyncError = t2.source_4.get$_error();
        t2 = this.listener_5;
        test = t2._state === 2 ? null : t2._errorTestCallback;
        matchesTest = true;
        if (test != null)
          matchesTest = test.call$1(J.get$error$x(asyncError));
        if (matchesTest === true)
          t3 = (t2._state === 2 ? null : t2._onErrorCallback) != null;
        else
          t3 = false;
        if (t3) {
          errorCallback = t2._state === 2 ? null : t2._onErrorCallback;
          t2 = this.box_1;
          t2.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
          t2.listenerHasValue_1 = true;
        } else {
          t2 = this.box_1;
          t2.listenerValueOrError_2 = asyncError;
          t2.listenerHasValue_1 = false;
        }
      }
      t2 = this.listener_5;
      if ((t2._state === 2 ? null : t2._whenCompleteActionCallback) != null) {
        t1.completeResult_0 = t2._whenCompleteAction$0();
        t3 = t1.completeResult_0;
        t4 = J.getInterceptor(t3);
        if (typeof t3 === "object" && t3 !== null && !!t4.$isFuture) {
          t2.set$_isChained(true);
          t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(this.box_2, t2), new P._Future__propagateToListeners__closure0(t1, t2));
          this.box_1.isPropagationAborted_3 = true;
        }
      }
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      if (this.hasError_4) {
        t1 = J.get$error$x(this.box_2.source_4.get$_error());
        t2 = e;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      t2 = this.box_1;
      if (t1)
        t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
      else
        t2.listenerValueOrError_2 = new P._AsyncError(e, s);
      this.box_1.listenerHasValue_1 = false;
    }

  }
},

_Future__propagateToListeners__closure: {"": "Closure;box_2,listener_6",
  call$1: function(ignored) {
    P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
  },
  $is_args1: true
},

_Future__propagateToListeners__closure0: {"": "Closure;box_0,listener_7",
  call$2: function(error, stackTrace) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.completeResult_0;
    t3 = J.getInterceptor(t2);
    if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
      t1.completeResult_0 = P._Future$(null);
      t1.completeResult_0._setError$2(error, stackTrace);
    }
    P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
  },
  call$1: function(error) {
    return this.call$2(error, null);
  },
  $is_args2: true,
  $is_args1: true
},

Stream: {"": "Object;",
  forEach$1: function(_, action) {
    var t1, future;
    t1 = {};
    future = P._Future$(null);
    t1.subscription_0 = null;
    t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
    return future;
  },
  get$length: function(_) {
    var t1, future;
    t1 = {};
    future = P._Future$(J.JSInt);
    t1.count_0 = 0;
    this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
    return future;
  }
},

Stream_forEach_closure: {"": "Closure;box_0,this_1,action_2,future_3",
  call$1: function(element) {
    P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
  },
  $is_args1: true
},

Stream_forEach__closure: {"": "Closure;action_4,element_5",
  call$0: function() {
    return this.action_4.call$1(this.element_5);
  }
},

Stream_forEach__closure0: {"": "Closure;",
  call$1: function(_) {
  },
  $is_args1: true
},

Stream_forEach_closure0: {"": "Closure;future_6",
  call$0: function() {
    this.future_6._complete$1(null);
  }
},

Stream_length_closure: {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = t1.count_0 + 1;
  },
  $is_args1: true
},

Stream_length_closure0: {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._complete$1(this.box_0.count_0);
  }
},

StreamSubscription: {"": "Object;"},

StreamTransformer: {"": "Object;"},

_StreamController: {"": "Object;",
  get$hasListener: function() {
    return (this._state & 1) !== 0;
  },
  hasListener$1: function(arg0) {
    return this.get$hasListener().call$1(arg0);
  },
  get$_pendingEvents: function() {
    if ((this._state & 8) === 0)
      return this._varData;
    return this._varData.get$varData();
  },
  _ensurePendingEvents$0: function() {
    if ((this._state & 8) === 0) {
      if (this._varData == null)
        this._varData = new P._StreamImplEvents(null, null, 0);
      return this._varData;
    }
    var t1 = this._varData.get$varData();
    return t1;
  },
  get$_subscription: function() {
    if ((this._state & 8) !== 0)
      return this._varData.get$varData();
    return this._varData;
  },
  _badEventState$0: function() {
    if ((this._state & 4) !== 0)
      return new P.StateError("Cannot add event after closing");
    return new P.StateError("Cannot add event while adding a stream");
  },
  _ensureDoneFuture$0: function() {
    if (this._doneFuture == null) {
      this._doneFuture = P._Future$(null);
      if ((this._state & 2) !== 0)
        this._doneFuture._complete$1(null);
    }
    return this._doneFuture;
  },
  add$1: function(_, value) {
    if (this._state >= 4)
      throw H.wrapException(this._badEventState$0());
    this._async$_add$1(value);
  },
  close$0: function(_) {
    var t1 = this._state;
    if ((t1 & 4) !== 0)
      return this._doneFuture;
    if (t1 >= 4)
      throw H.wrapException(this._badEventState$0());
    this._state = (t1 | 4) >>> 0;
    this._ensureDoneFuture$0();
    t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendDone$0();
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, C.C__DelayedDone);
    }
    return this._doneFuture;
  },
  _async$_add$1: function(value) {
    var t1 = this._state;
    if ((t1 & 1) !== 0)
      this._sendData$1(value);
    else if ((t1 & 3) === 0) {
      t1 = this._ensurePendingEvents$0();
      t1.add$1(t1, new P._DelayedData(value, null));
    }
  },
  _subscribe$1: function(cancelOnError) {
    var t1, t2, subscription, pendingEvents, addState;
    if ((this._state & 3) !== 0)
      throw H.wrapException(P.StateError$("Stream has already been listened to."));
    t1 = $.Zone__current;
    t2 = cancelOnError ? 1 : 0;
    subscription = new P._ControllerSubscription(this, null, null, null, t1, t2, null, null);
    H.setRuntimeTypeInfo(subscription, [null]);
    pendingEvents = this.get$_pendingEvents();
    this._state = (this._state | 1) >>> 0;
    if ((this._state & 8) !== 0) {
      addState = this._varData;
      addState.set$varData(subscription);
      addState.resume$0();
    } else
      this._varData = subscription;
    subscription._setPendingEvents$1(pendingEvents);
    subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
    return subscription;
  },
  _recordCancel$1: function(subscription) {
    var t1, future;
    if ((this._state & 8) !== 0)
      this._varData.cancel$0();
    this._varData = null;
    this._state = (this._state & 4294967286 | 2) >>> 0;
    t1 = new P._StreamController__recordCancel_complete(this);
    future = P._runGuarded(this.get$_onCancel());
    if (future != null)
      future = future.whenComplete$1(t1);
    else
      t1.call$0();
    return future;
  }
},

_StreamController__subscribe_closure: {"": "Closure;this_0",
  call$0: function() {
    P._runGuarded(this.this_0.get$_onListen());
  }
},

_StreamController__recordCancel_complete: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0._doneFuture;
    if (t1 != null && t1._state === 0)
      t1._asyncComplete$1(null);
  }
},

_SyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._async$_add$1(data);
  },
  _sendDone$0: function() {
    this.get$_subscription()._close$0();
  }
},

_AsyncStreamControllerDispatch: {"": "Object;",
  _sendData$1: function(data) {
    this.get$_subscription()._addPending$1(new P._DelayedData(data, null));
  },
  _sendDone$0: function() {
    this.get$_subscription()._addPending$1(C.C__DelayedDone);
  }
},

_AsyncStreamController: {"": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__AsyncStreamControllerDispatch: {"": "_StreamController+_AsyncStreamControllerDispatch;"},

_SyncStreamController: {"": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"},

_StreamController__SyncStreamControllerDispatch: {"": "_StreamController+_SyncStreamControllerDispatch;"},

_ControllerStream: {"": "_StreamImpl;_async$_controller",
  _createSubscription$1: function(cancelOnError) {
    return this._async$_controller._subscribe$1(cancelOnError);
  },
  get$hashCode: function(_) {
    return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    if (this === other)
      return true;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
      return false;
    return other._async$_controller === this._async$_controller;
  },
  $is_ControllerStream: true,
  $as_StreamImpl: null
},

_ControllerSubscription: {"": "_BufferingStreamSubscription;_async$_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
  _onCancel$0: function() {
    return this._async$_controller._recordCancel$1(this);
  },
  _onPause$0: function() {
    var t1, addState;
    t1 = this._async$_controller;
    if ((t1._state & 8) !== 0) {
      addState = t1._varData;
      addState.pause$0(addState);
    }
    P._runGuarded(t1.get$_onPause());
  },
  get$_onPause: function() {
    return new P.BoundClosure$0(this, P._ControllerSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
    var t1 = this._async$_controller;
    if ((t1._state & 8) !== 0)
      t1._varData.resume$0();
    P._runGuarded(t1.get$_onResume());
  },
  get$_onResume: function() {
    return new P.BoundClosure$0(this, P._ControllerSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  $as_BufferingStreamSubscription: null
},

_EventSink: {"": "Object;"},

_BufferingStreamSubscription: {"": "Object;_async$_onData,_onError,_onDone,_zone<,_state,_cancelFuture,_pending",
  _setPendingEvents$1: function(pendingEvents) {
    if (pendingEvents == null)
      return;
    this._pending = pendingEvents;
    if (!pendingEvents.get$isEmpty(pendingEvents)) {
      this._state = (this._state | 64) >>> 0;
      this._pending.schedule$1(this);
    }
  },
  onData$1: function(handleData) {
    $.Zone__current.toString;
    this._async$_onData = handleData;
  },
  onError$1: function(_, handleError) {
    this._onError = P._registerErrorHandler(handleError, $.Zone__current);
  },
  onDone$1: function(handleDone) {
    $.Zone__current.toString;
    this._onDone = handleDone;
  },
  pause$1: function(_, resumeSignal) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 + 128 | 4) >>> 0;
    if (t1 < 128 && this._pending != null)
      this._pending.cancelSchedule$0();
    if ((t1 & 4) === 0 && (this._state & 32) === 0)
      this._guardCallback$1(this.get$_onPause());
  },
  pause$0: function($receiver) {
    return this.pause$1($receiver, null);
  },
  resume$0: function() {
    var t1, t2;
    t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 >= 128) {
      this._state = t1 - 128;
      t1 = this._state;
      if (t1 < 128) {
        if ((t1 & 64) !== 0) {
          t2 = this._pending;
          t2 = !t2.get$isEmpty(t2);
        } else
          t2 = false;
        if (t2)
          this._pending.schedule$1(this);
        else {
          this._state = (t1 & 4294967291) >>> 0;
          if ((this._state & 32) === 0)
            this._guardCallback$1(this.get$_onResume());
        }
      }
    }
  },
  cancel$0: function() {
    this._state = (this._state & 4294967279) >>> 0;
    if ((this._state & 8) !== 0)
      return this._cancelFuture;
    this._cancel$0();
    return this._cancelFuture;
  },
  get$_mayResumeInput: function() {
    if (this._state < 128) {
      var t1 = this._pending;
      t1 = t1 == null || t1.get$isEmpty(t1);
    } else
      t1 = false;
    return t1;
  },
  _cancel$0: function() {
    this._state = (this._state | 8) >>> 0;
    if ((this._state & 64) !== 0)
      this._pending.cancelSchedule$0();
    if ((this._state & 32) === 0)
      this._pending = null;
    this._cancelFuture = this._onCancel$0();
  },
  _async$_add$1: function(data) {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    if (t1 < 32)
      this._sendData$1(data);
    else
      this._addPending$1(new P._DelayedData(data, null));
  },
  _close$0: function() {
    var t1 = this._state;
    if ((t1 & 8) !== 0)
      return;
    this._state = (t1 | 2) >>> 0;
    if (this._state < 32)
      this._sendDone$0();
    else
      this._addPending$1(C.C__DelayedDone);
  },
  _onPause$0: function() {
  },
  get$_onPause: function() {
    return new P.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onPause$0, null, "_onPause$0");
  },
  _onResume$0: function() {
  },
  get$_onResume: function() {
    return new P.BoundClosure$0(this, P._BufferingStreamSubscription.prototype._onResume$0, null, "_onResume$0");
  },
  _onCancel$0: function() {
  },
  _addPending$1: function($event) {
    var pending, t1;
    pending = this._pending;
    if (pending == null) {
      pending = new P._StreamImplEvents(null, null, 0);
      this._pending = pending;
    }
    pending.add$1(pending, $event);
    t1 = this._state;
    if ((t1 & 64) === 0) {
      this._state = (t1 | 64) >>> 0;
      if (this._state < 128)
        this._pending.schedule$1(this);
    }
  },
  _sendData$1: function(data) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    this._zone.runUnaryGuarded$2(this._async$_onData, data);
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _sendDone$0: function() {
    var t1, t2, t3;
    t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
    this._cancel$0();
    this._state = (this._state | 16) >>> 0;
    t2 = this._cancelFuture;
    t3 = J.getInterceptor(t2);
    if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
      t2.whenComplete$1(t1);
    else
      t1.call$0();
  },
  _guardCallback$1: function(callback) {
    var t1 = this._state;
    this._state = (t1 | 32) >>> 0;
    callback.call$0();
    this._state = (this._state & 4294967263) >>> 0;
    this._checkState$1((t1 & 4) !== 0);
  },
  _checkState$1: function(wasInputPaused) {
    var t1, t2, isInputPaused;
    t1 = this._state;
    if ((t1 & 64) !== 0) {
      t2 = this._pending;
      t2 = t2.get$isEmpty(t2);
    } else
      t2 = false;
    if (t2) {
      this._state = (t1 & 4294967231) >>> 0;
      if ((this._state & 4) !== 0 && this.get$_mayResumeInput())
        this._state = (this._state & 4294967291) >>> 0;
    }
    for (; true; wasInputPaused = isInputPaused) {
      t1 = this._state;
      if ((t1 & 8) !== 0) {
        this._pending = null;
        return;
      }
      isInputPaused = (t1 & 4) !== 0;
      if (wasInputPaused === isInputPaused)
        break;
      this._state = (t1 ^ 32) >>> 0;
      if (isInputPaused)
        this._onPause$0();
      else
        this._onResume$0();
      this._state = (this._state & 4294967263) >>> 0;
    }
    t1 = this._state;
    if ((t1 & 64) !== 0 && t1 < 128)
      this._pending.schedule$1(this);
  },
  static: {
"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT",
}

},

_BufferingStreamSubscription__sendDone_sendDone: {"": "Closure;this_0",
  call$0: function() {
    var t1, t2;
    t1 = this.this_0;
    t2 = t1._state;
    if ((t2 & 16) === 0)
      return;
    t1._state = (t2 | 42) >>> 0;
    t1._zone.runGuarded$1(t1._onDone);
    t1._state = (t1._state & 4294967263) >>> 0;
  }
},

_StreamImpl: {"": "Stream;",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var subscription = this._createSubscription$1(true === cancelOnError);
    subscription.onData$1(onData);
    subscription.onError$1(subscription, onError);
    subscription.onDone$1(onDone);
    return subscription;
  },
  _createSubscription$1: function(cancelOnError) {
    var t1, t2;
    t1 = $.Zone__current;
    t2 = cancelOnError ? 1 : 0;
    return new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
  },
  $asStream: null
},

_DelayedEvent: {"": "Object;next@"},

_DelayedData: {"": "_DelayedEvent;value,next",
  perform$1: function(dispatch) {
    dispatch._sendData$1(this.value);
  }
},

_DelayedDone: {"": "Object;",
  perform$1: function(dispatch) {
    dispatch._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw H.wrapException(P.StateError$("No events after a done."));
  }
},

_PendingEvents: {"": "Object;",
  schedule$1: function(dispatch) {
    var t1 = this._state;
    if (t1 === 1)
      return;
    if (t1 >= 1) {
      this._state = 1;
      return;
    }
    P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
    this._state = 1;
  },
  cancelSchedule$0: function() {
    if (this._state === 1)
      this._state = 3;
  }
},

_PendingEvents_schedule_closure: {"": "Closure;this_0,dispatch_1",
  call$0: function() {
    var t1, oldState;
    t1 = this.this_0;
    oldState = t1._state;
    t1._state = 0;
    if (oldState === 3)
      return;
    t1.handleNext$1(this.dispatch_1);
  }
},

_StreamImplEvents: {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
  get$isEmpty: function(_) {
    return this.lastPendingEvent == null;
  },
  add$1: function(_, $event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = $event;
      this.firstPendingEvent = $event;
    } else {
      t1.set$next($event);
      this.lastPendingEvent = $event;
    }
  },
  handleNext$1: function(dispatch) {
    var $event = this.firstPendingEvent;
    this.firstPendingEvent = $event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    $event.perform$1(dispatch);
  }
},

_cancelAndError_closure: {"": "Closure;future_0,error_1,stackTrace_2",
  call$0: function() {
    return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
  }
},

_cancelAndErrorClosure_closure: {"": "Closure;subscription_0,future_1",
  call$2: function(error, stackTrace) {
    return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
  },
  $is_args2: true
},

Timer: {"": "Object;"},

_BaseZone: {"": "Object;",
  runGuarded$1: function(f) {
    var e, s, t1, exception;
    try {
      t1 = this.run$1(f);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  runUnaryGuarded$2: function(f, arg) {
    var e, s, t1, exception;
    try {
      t1 = this.runUnary$2(f, arg);
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      return this.handleUncaughtError$2(e, s);
    }

  },
  bindCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindCallback_closure(this, registered);
    else
      return new P._BaseZone_bindCallback_closure0(this, registered);
  },
  bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
    var registered = this.registerUnaryCallback$1(f);
    if (runGuarded)
      return new P._BaseZone_bindUnaryCallback_closure(this, registered);
    else
      return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
  }
},

_BaseZone_bindCallback_closure: {"": "Closure;this_0,registered_1",
  call$0: function() {
    return this.this_0.runGuarded$1(this.registered_1);
  }
},

_BaseZone_bindCallback_closure0: {"": "Closure;this_2,registered_3",
  call$0: function() {
    return this.this_2.run$1(this.registered_3);
  }
},

_BaseZone_bindUnaryCallback_closure: {"": "Closure;this_0,registered_1",
  call$1: function(arg) {
    return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
  },
  $is_args1: true
},

_BaseZone_bindUnaryCallback_closure0: {"": "Closure;this_2,registered_3",
  call$1: function(arg) {
    return this.this_2.runUnary$2(this.registered_3, arg);
  },
  $is_args1: true
},

_rootHandleUncaughtError_closure: {"": "Closure;error_0,stackTrace_1",
  call$0: function() {
    P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
  }
},

_rootHandleUncaughtError__closure: {"": "Closure;error_2,stackTrace_3",
  call$0: function() {
    var t1, trace, t2;
    t1 = this.error_2;
    P.print("Uncaught Error: " + H.S(t1));
    trace = this.stackTrace_3;
    if (trace == null) {
      t2 = J.getInterceptor(t1);
      t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
    } else
      t2 = false;
    if (t2)
      trace = t1.get$stackTrace();
    if (trace != null)
      P.print("Stack Trace: \n" + H.S(trace) + "\n");
    throw H.wrapException(t1);
  }
},

_RootZone: {"": "_BaseZone;",
  get$parent: function(_) {
    return;
  },
  $index: function(_, key) {
    return;
  },
  handleUncaughtError$2: function(error, stackTrace) {
    return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
  },
  run$1: function(f) {
    return P._rootRun(this, null, this, f);
  },
  runUnary$2: function(f, arg) {
    return P._rootRunUnary(this, null, this, f, arg);
  },
  registerCallback$1: function(f) {
    return f;
  },
  registerUnaryCallback$1: function(f) {
    return f;
  }
}}],
["dart.collection", "dart:collection", , P, {
_defaultEquals: function(a, b) {
  return J.$eq(a, b);
},

_defaultHashCode: function(a) {
  return J.get$hashCode$(a);
},

HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._HashMap(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

HashSet_HashSet$identity: function($E) {
  var t1 = new P._IdentityHashSet(0, null, null, null, null);
  H.setRuntimeTypeInfo(t1, [$E]);
  return t1;
},

_iterableToString: function(iterable) {
  var parts, t1;
  t1 = $.get$_toStringVisiting();
  if (t1.contains$1(t1, iterable))
    return "(...)";
  t1 = $.get$_toStringVisiting();
  t1.add$1(t1, iterable);
  parts = [];
  try {
    P._iterablePartsToStrings(iterable, parts);
  } finally {
    t1 = $.get$_toStringVisiting();
    t1.remove$1(t1, iterable);
  }
  t1 = P.StringBuffer$("(");
  t1.writeAll$2(parts, ", ");
  t1.write$1(")");
  return t1._contents;
},

_iterablePartsToStrings: function(iterable, parts) {
  var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
  it = iterable.get$iterator(iterable);
  $length = 0;
  count = 0;
  while (true) {
    if (!($length < 80 || count < 3))
      break;
    if (!it.moveNext$0())
      return;
    next = H.S(it.get$current());
    parts.push(next);
    $length += next.length + 2;
    ++count;
  }
  if (!it.moveNext$0()) {
    if (count <= 5)
      return;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    ultimateString = parts.pop();
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    penultimateString = parts.pop();
  } else {
    penultimate = it.get$current();
    ++count;
    if (!it.moveNext$0()) {
      if (count <= 4) {
        parts.push(H.S(penultimate));
        return;
      }
      ultimateString = H.S(penultimate);
      if (0 >= parts.length)
        throw H.ioore(parts, 0);
      penultimateString = parts.pop();
      $length += ultimateString.length + 2;
    } else {
      ultimate = it.get$current();
      ++count;
      for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
        ultimate0 = it.get$current();
        ++count;
        if (count > 100) {
          while (true) {
            if (!($length > 75 && count > 3))
              break;
            if (0 >= parts.length)
              throw H.ioore(parts, 0);
            $length -= parts.pop().length + 2;
            --count;
          }
          parts.push("...");
          return;
        }
      }
      penultimateString = H.S(penultimate);
      ultimateString = H.S(ultimate);
      $length += ultimateString.length + penultimateString.length + 4;
    }
  }
  if (count > parts.length + 2) {
    $length += 5;
    elision = "...";
  } else
    elision = null;
  while (true) {
    if (!($length > 80 && parts.length > 3))
      break;
    if (0 >= parts.length)
      throw H.ioore(parts, 0);
    $length -= parts.pop().length + 2;
    if (elision == null) {
      $length += 5;
      elision = "...";
    }
  }
  if (elision != null)
    parts.push(elision);
  parts.push(penultimateString);
  parts.push(ultimateString);
},

LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
  var t1 = new P._LinkedHashMap(0, null, null, null, null, null, 0);
  H.setRuntimeTypeInfo(t1, [$K, $V]);
  return t1;
},

LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
  var t1 = new P._LinkedHashSet(0, null, null, null, null, null, 0);
  H.setRuntimeTypeInfo(t1, [$E]);
  return t1;
},

Maps_mapToString: function(m) {
  var t1, result, i, t2;
  t1 = {};
  for (i = 0; i < $.get$Maps__toStringList().length; ++i) {
    t2 = $.get$Maps__toStringList();
    if (i >= t2.length)
      throw H.ioore(t2, i);
    if (t2[i] === m)
      return "{...}";
  }
  result = P.StringBuffer$("");
  try {
    $.get$Maps__toStringList().push(m);
    result.write$1("{");
    t1.first_0 = true;
    J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
    result.write$1("}");
  } finally {
    t1 = $.get$Maps__toStringList();
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    t1.pop();
  }
  return result.get$_contents();
},

_HashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_keys",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$keys: function() {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.HashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_HashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._HashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  $index: function(_, key) {
    var strings, t1, entry, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        t1 = null;
      else {
        entry = strings[key];
        t1 = entry === strings ? null : entry;
      }
      return t1;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        t1 = null;
      else {
        entry = nums[key];
        t1 = entry === nums ? null : entry;
      }
      return t1;
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._HashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._HashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._HashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        P._HashMap__setTableEntry(rest, hash, [key, value]);
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      } else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        }
      }
    }
  },
  forEach$1: function(_, action) {
    var keys, $length, i, key;
    keys = this._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      key = keys[i];
      action.call$2(key, this.$index(this, key));
      if (keys !== this._keys)
        throw H.wrapException(P.ConcurrentModificationError$(this));
    }
  },
  _computeKeys$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._keys;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; i0 += 2) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._keys = result;
    return result;
  },
  _addHashTableEntry$3: function(table, key, value) {
    if (table[key] == null) {
      this._collection$_length = this._collection$_length + 1;
      this._keys = null;
    }
    P._HashMap__setTableEntry(table, key, value);
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; i += 2)
      if (J.$eq(bucket[i], key))
        return i;
    return -1;
  },
  $isMap: true,
  static: {
_HashMap__setTableEntry: function(table, key, value) {
  if (value == null)
    table[key] = table;
  else
    table[key] = value;
},

_HashMap__newHashTable: function() {
  var table = Object.create(null);
  P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
  delete table["<non-identifier-key>"];
  return table;
}}

},

_HashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  $is_args1: true
},

HashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    return new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
  },
  forEach$1: function(_, f) {
    var t1, keys, $length, i;
    t1 = this._map;
    keys = t1._computeKeys$0();
    for ($length = keys.length, i = 0; i < $length; ++i) {
      f.call$1(keys[i]);
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
    }
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

HashMapKeyIterator: {"": "Object;_map,_keys,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var keys, offset, t1;
    keys = this._keys;
    offset = this._offset;
    t1 = this._map;
    if (keys !== t1._keys)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= keys.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = keys[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_LinkedHashMap: {"": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
  get$length: function(_) {
    return this._collection$_length;
  },
  get$isEmpty: function(_) {
    return this._collection$_length === 0;
  },
  get$keys: function() {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return t1;
  },
  get$values: function(_) {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return H.MappedIterable_MappedIterable(t1, new P._LinkedHashMap_values_closure(this), H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
  },
  containsKey$1: function(key) {
    var strings, nums, rest;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
    }
  },
  containsValue$1: function(value) {
    var t1 = new P.LinkedHashMapKeyIterable(this);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_LinkedHashMap", 0)]);
    return t1.any$1(t1, new P._LinkedHashMap_containsValue_closure(this, value));
  },
  $index: function(_, key) {
    var strings, cell, nums, rest, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return;
      cell = strings[key];
      return cell == null ? null : cell.get$_value();
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return;
      cell = nums[key];
      return cell == null ? null : cell.get$_value();
    } else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      return bucket[index].get$_value();
    }
  },
  $indexSet: function(_, key, value) {
    var strings, nums, rest, hash, bucket, index;
    if (typeof key === "string" && key !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        strings = P._LinkedHashMap__newHashTable();
        this._strings = strings;
      }
      this._addHashTableEntry$3(strings, key, value);
    } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
      nums = this._nums;
      if (nums == null) {
        nums = P._LinkedHashMap__newHashTable();
        this._nums = nums;
      }
      this._addHashTableEntry$3(nums, key, value);
    } else {
      rest = this._rest;
      if (rest == null) {
        rest = P._LinkedHashMap__newHashTable();
        this._rest = rest;
      }
      hash = this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$2(key, value)];
      else {
        index = this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].set$_value(value);
        else
          bucket.push(this._newLinkedCell$2(key, value));
      }
    }
  },
  remove$1: function(_, key) {
    var rest, bucket, index, cell;
    if (typeof key === "string" && key !== "__proto__")
      return this._removeHashTableEntry$2(this._strings, key);
    else if (typeof key === "number" && (key & 0x3ffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(key)];
      index = this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return;
      cell = bucket.splice(index, 1)[0];
      this._unlinkCell$1(cell);
      return cell.get$_value();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$2(cell.get$_collection$_key(), cell._value);
      if (modifications !== this._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      cell = cell._next;
    }
  },
  _addHashTableEntry$3: function(table, key, value) {
    var cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.set$_value(value);
  },
  _removeHashTableEntry$2: function(table, key) {
    var cell;
    if (table == null)
      return;
    cell = table[key];
    if (cell == null)
      return;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.get$_value();
  },
  _newLinkedCell$2: function(key, value) {
    var cell, last;
    cell = new P.LinkedHashMapCell(key, value, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._collection$_length = this._collection$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next.set$_previous(previous);
    this._collection$_length = this._collection$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  _computeHashCode$1: function(key) {
    return J.get$hashCode$(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i].get$_collection$_key(), key))
        return i;
    return -1;
  },
  toString$0: function(_) {
    return P.Maps_mapToString(this);
  },
  $isMap: true,
  static: {
_LinkedHashMap__newHashTable: function() {
  var table = Object.create(null);
  table["<non-identifier-key>"] = table;
  delete table["<non-identifier-key>"];
  return table;
}}

},

_LinkedHashMap_values_closure: {"": "Closure;this_0",
  call$1: function(each) {
    var t1 = this.this_0;
    return t1.$index(t1, each);
  },
  $is_args1: true
},

_LinkedHashMap_containsValue_closure: {"": "Closure;this_0,value_1",
  call$1: function(each) {
    var t1 = this.this_0;
    return J.$eq(t1.$index(t1, each), this.value_1);
  },
  $is_args1: true
},

LinkedHashMapCell: {"": "Object;_collection$_key<,_value@,_next@,_previous@"},

LinkedHashMapKeyIterable: {"": "IterableBase;_map",
  get$length: function(_) {
    return this._map._collection$_length;
  },
  get$iterator: function(_) {
    var t1 = this._map;
    t1 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
    t1._cell = t1._map._first;
    return t1;
  },
  forEach$1: function(_, f) {
    var t1, cell, modifications;
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell.get$_collection$_key());
      if (modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      cell = cell._next;
    }
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

LinkedHashMapKeyIterator: {"": "Object;_map,_modifications,_cell,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1 = this._map;
    if (this._modifications !== t1._modifications)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = t1.get$_collection$_key();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

_HashSet: {"": "_HashSetBase;",
  get$iterator: function(_) {
    return new P.HashSetIterator(this, this._computeElements$0(), 0, null);
  },
  get$length: function(_) {
    return this._collection$_length;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      return strings == null ? false : strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      return nums == null ? false : nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    }
  },
  lookup$1: function(object) {
    var t1, rest, bucket, index;
    if (!(typeof object === "string" && object !== "__proto__"))
      t1 = typeof object === "number" && (object & 0x3ffffff) === object;
    else
      t1 = true;
    if (t1)
      return this.contains$1(this, object) ? object : null;
    rest = this._rest;
    if (rest == null)
      return;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return;
    return J.$index$asx(bucket, index);
  },
  add$1: function(_, element) {
    var rest, table, hash, bucket;
    rest = this._rest;
    if (rest == null) {
      table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      this._rest = table;
      rest = table;
    }
    hash = this._computeHashCode$1(element);
    bucket = rest[hash];
    if (bucket == null)
      rest[hash] = [element];
    else {
      if (this._findBucketIndex$2(bucket, element) >= 0)
        return false;
      bucket.push(element);
    }
    this._collection$_length = this._collection$_length + 1;
    this._elements = null;
    return true;
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    rest = this._rest;
    if (rest == null)
      return false;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return false;
    this._collection$_length = this._collection$_length - 1;
    this._elements = null;
    bucket.splice(index, 1);
    return true;
  },
  _computeElements$0: function() {
    var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
    t1 = this._elements;
    if (t1 != null)
      return t1;
    result = P.List_List(this._collection$_length, null);
    strings = this._strings;
    if (strings != null) {
      names = Object.getOwnPropertyNames(strings);
      entries = names.length;
      for (index = 0, i = 0; i < entries; ++i) {
        result[index] = names[i];
        ++index;
      }
    } else
      index = 0;
    nums = this._nums;
    if (nums != null) {
      names = Object.getOwnPropertyNames(nums);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        result[index] = +names[i];
        ++index;
      }
    }
    rest = this._rest;
    if (rest != null) {
      names = Object.getOwnPropertyNames(rest);
      entries = names.length;
      for (i = 0; i < entries; ++i) {
        bucket = rest[names[i]];
        $length = bucket.length;
        for (i0 = 0; i0 < $length; ++i0) {
          result[index] = bucket[i0];
          ++index;
        }
      }
    }
    this._elements = result;
    return result;
  },
  _computeHashCode$1: function(element) {
    return J.get$hashCode$(element) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i], element))
        return i;
    return -1;
  },
  $as_HashSetBase: null,
  $isEfficientLength: true
},

_IdentityHashSet: {"": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
  _computeHashCode$1: function(key) {
    return H.objectHashCode(key) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i, t1;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i) {
      t1 = bucket[i];
      if (t1 == null ? element == null : t1 === element)
        return i;
    }
    return -1;
  },
  $as_HashSet: null
},

HashSetIterator: {"": "Object;_set,_elements,_offset,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var elements, offset, t1;
    elements = this._elements;
    offset = this._offset;
    t1 = this._set;
    if (elements !== t1._elements)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else if (offset >= elements.length) {
      this._collection$_current = null;
      return false;
    } else {
      this._collection$_current = elements[offset];
      this._offset = offset + 1;
      return true;
    }
  }
},

_LinkedHashSet: {"": "_HashSetBase;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
  get$iterator: function(_) {
    var t1 = new P.LinkedHashSetIterator(this, this._modifications, null, null);
    t1._cell = t1._set._first;
    return t1;
  },
  get$length: function(_) {
    return this._collection$_length;
  },
  contains$1: function(_, object) {
    var strings, nums, rest;
    if (typeof object === "string" && object !== "__proto__") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[object] != null;
    } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[object] != null;
    } else {
      rest = this._rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    }
  },
  lookup$1: function(object) {
    var t1, rest, bucket, index;
    if (!(typeof object === "string" && object !== "__proto__"))
      t1 = typeof object === "number" && (object & 0x3ffffff) === object;
    else
      t1 = true;
    if (t1)
      return this.contains$1(this, object) ? object : null;
    else {
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index).get$_collection$_element();
    }
  },
  forEach$1: function(_, action) {
    var cell, modifications;
    cell = this._first;
    modifications = this._modifications;
    for (; cell != null;) {
      action.call$1(cell.get$_collection$_element());
      if (modifications !== this._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      cell = cell._next;
    }
  },
  add$1: function(_, element) {
    var strings, table, nums, rest, hash, bucket;
    if (typeof element === "string" && element !== "__proto__") {
      strings = this._strings;
      if (strings == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._strings = table;
        strings = table;
      }
      return this._addHashTableEntry$2(strings, element);
    } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
      nums = this._nums;
      if (nums == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._nums = table;
        nums = table;
      }
      return this._addHashTableEntry$2(nums, element);
    } else {
      rest = this._rest;
      if (rest == null) {
        table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        this._rest = table;
        rest = table;
      }
      hash = this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [this._newLinkedCell$1(element)];
      else {
        if (this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(this._newLinkedCell$1(element));
      }
      return true;
    }
  },
  addAll$1: function(_, objects) {
    var t1;
    for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
      this.add$1(this, t1._current);
  },
  remove$1: function(_, object) {
    var rest, bucket, index;
    rest = this._rest;
    if (rest == null)
      return false;
    bucket = rest[this._computeHashCode$1(object)];
    index = this._findBucketIndex$2(bucket, object);
    if (index < 0)
      return false;
    this._unlinkCell$1(bucket.splice(index, 1)[0]);
    return true;
  },
  clear$0: function(_) {
    if (this._collection$_length > 0) {
      this._last = null;
      this._first = null;
      this._rest = null;
      this._nums = null;
      this._strings = null;
      this._collection$_length = 0;
      this._modifications = this._modifications + 1 & 67108863;
    }
  },
  _addHashTableEntry$2: function(table, element) {
    if (table[element] != null)
      return false;
    table[element] = this._newLinkedCell$1(element);
    return true;
  },
  _newLinkedCell$1: function(element) {
    var cell, last;
    cell = new P.LinkedHashSetCell(element, null, null);
    if (this._first == null) {
      this._last = cell;
      this._first = cell;
    } else {
      last = this._last;
      cell._previous = last;
      last.set$_next(cell);
      this._last = cell;
    }
    this._collection$_length = this._collection$_length + 1;
    this._modifications = this._modifications + 1 & 67108863;
    return cell;
  },
  _unlinkCell$1: function(cell) {
    var previous, next;
    previous = cell.get$_previous();
    next = cell.get$_next();
    if (previous == null)
      this._first = next;
    else
      previous.set$_next(next);
    if (next == null)
      this._last = previous;
    else
      next.set$_previous(previous);
    this._collection$_length = this._collection$_length - 1;
    this._modifications = this._modifications + 1 & 67108863;
  },
  _computeHashCode$1: function(element) {
    return J.get$hashCode$(element) & 0x3ffffff;
  },
  _findBucketIndex$2: function(bucket, element) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq(bucket[i].get$_collection$_element(), element))
        return i;
    return -1;
  },
  $as_HashSetBase: null,
  $isEfficientLength: true
},

LinkedHashSetCell: {"": "Object;_collection$_element<,_next@,_previous@"},

LinkedHashSetIterator: {"": "Object;_set,_modifications,_cell,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1 = this._set;
    if (this._modifications !== t1._modifications)
      throw H.wrapException(P.ConcurrentModificationError$(t1));
    else {
      t1 = this._cell;
      if (t1 == null) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = t1.get$_collection$_element();
        this._cell = this._cell.get$_next();
        return true;
      }
    }
  }
},

_HashSetBase: {"": "IterableBase;",
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  $asIterableBase: null,
  $isEfficientLength: true
},

IterableBase: {"": "Object;",
  forEach$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  any$1: function(_, f) {
    var t1;
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$1$growable: function(_, growable) {
    return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "IterableBase", 0));
  },
  toList$0: function($receiver) {
    return this.toList$1$growable($receiver, true);
  },
  get$length: function(_) {
    var it, count;
    it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  },
  get$single: function(_) {
    var it, result;
    it = this.get$iterator(this);
    if (!it.moveNext$0())
      throw H.wrapException(P.StateError$("No elements"));
    result = it.get$current();
    if (it.moveNext$0())
      throw H.wrapException(P.StateError$("More than one element"));
    return result;
  },
  elementAt$1: function(_, index) {
    var t1, remaining, element;
    if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
      throw H.wrapException(P.RangeError$value(index));
    for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
      element = t1.get$current();
      if (remaining === 0)
        return element;
      --remaining;
    }
    throw H.wrapException(P.RangeError$value(index));
  },
  toString$0: function(_) {
    return P._iterableToString(this);
  }
},

ListBase: {"": "Object+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

ListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return new H.ListIterator(receiver, this.get$length(receiver), 0, null);
  },
  elementAt$1: function(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1: function(receiver, action) {
    var $length, i;
    $length = this.get$length(receiver);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw H.wrapException(P.ConcurrentModificationError$(receiver));
    }
  },
  where$1: function(receiver, test) {
    var t1 = new H.WhereIterable(receiver, test);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    return t1;
  },
  add$1: function(receiver, element) {
    var t1 = this.get$length(receiver);
    this.set$length(receiver, t1 + 1);
    this.$indexSet(receiver, t1, element);
  },
  _rangeCheck$2: function(receiver, start, end) {
    if (start < 0 || start > this.get$length(receiver))
      throw H.wrapException(P.RangeError$range(start, 0, this.get$length(receiver)));
    if (end < start || end > this.get$length(receiver))
      throw H.wrapException(P.RangeError$range(end, start, this.get$length(receiver)));
  },
  removeRange$2: function(receiver, start, end) {
    var $length;
    this._rangeCheck$2(receiver, start, end);
    $length = end.$sub(end, start);
    this.setRange$4(receiver, start, C.JSInt_methods.$sub(this.get$length(receiver), $length), receiver, end);
    this.set$length(receiver, C.JSInt_methods.$sub(this.get$length(receiver), $length));
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    var $length, t1, i;
    if (start < 0 || start > this.get$length(receiver))
      H.throwExpression(P.RangeError$range(start, 0, this.get$length(receiver)));
    if (end < start || end > this.get$length(receiver))
      H.throwExpression(P.RangeError$range(end, start, this.get$length(receiver)));
    $length = end - start;
    if ($length === 0)
      return;
    if (skipCount < 0)
      throw H.wrapException(new P.ArgumentError(skipCount));
    t1 = J.getInterceptor$asx(iterable);
    if (skipCount + $length > t1.get$length(iterable))
      throw H.wrapException(P.StateError$("Not enough elements"));
    if (skipCount < start)
      for (i = $length - 1; i >= 0; --i)
        this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
    else
      for (i = 0; i < $length; ++i)
        this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
  },
  indexOf$2: function(receiver, element, startIndex) {
    var i;
    if (startIndex >= this.get$length(receiver))
      return -1;
    if (startIndex < 0)
      startIndex = 0;
    for (i = startIndex; i < this.get$length(receiver); ++i)
      this.$index(receiver, i);
    return -1;
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  removeAt$1: function(receiver, index) {
    var result = this.$index(receiver, index);
    this.setRange$4(receiver, index, this.get$length(receiver) - 1, receiver, index + 1);
    this.set$length(receiver, this.get$length(receiver) - 1);
    return result;
  },
  toString$0: function(receiver) {
    var result, t1;
    t1 = $.get$_toStringVisiting();
    if (t1.contains$1(t1, receiver))
      return "[...]";
    result = P.StringBuffer$("");
    try {
      t1 = $.get$_toStringVisiting();
      t1.add$1(t1, receiver);
      result.write$1("[");
      result.writeAll$2(receiver, ", ");
      result.write$1("]");
    } finally {
      t1 = $.get$_toStringVisiting();
      t1.remove$1(t1, receiver);
    }
    return result.get$_contents();
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true
},

Maps_mapToString_closure: {"": "Closure;box_0,result_1",
  call$2: function(k, v) {
    var t1 = this.box_0;
    if (!t1.first_0)
      this.result_1.write$1(", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t1.write$1(k);
    t1.write$1(": ");
    t1.write$1(v);
  },
  $is_args2: true
},

ListQueue: {"": "IterableBase;_table,_head,_tail,_modificationCount",
  get$iterator: function(_) {
    return P._ListQueueIterator$(this);
  },
  forEach$1: function(_, action) {
    var modificationCount, i, t1;
    modificationCount = this._modificationCount;
    for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
      t1 = this._table;
      if (i < 0 || i >= t1.length)
        throw H.ioore(t1, i);
      action.call$1(t1[i]);
      if (modificationCount !== this._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(this));
    }
  },
  get$length: function(_) {
    return (this._tail - this._head & this._table.length - 1) >>> 0;
  },
  add$1: function(_, element) {
    this._add$1(element);
  },
  toString$0: function(_) {
    return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
  },
  removeFirst$0: function() {
    var t1, t2, t3, result;
    if (this._head === this._tail)
      throw H.wrapException(P.StateError$("No elements"));
    this._modificationCount = this._modificationCount + 1;
    t1 = this._table;
    t2 = this._head;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    result = t1[t2];
    this._head = (t2 + 1 & t3 - 1) >>> 0;
    return result;
  },
  _add$1: function(element) {
    var t1, t2, t3;
    t1 = this._table;
    t2 = this._tail;
    t3 = t1.length;
    if (t2 < 0 || t2 >= t3)
      throw H.ioore(t1, t2);
    t1[t2] = element;
    this._tail = (t2 + 1 & t3 - 1) >>> 0;
    if (this._head === this._tail)
      this._grow$0();
    this._modificationCount = this._modificationCount + 1;
  },
  _grow$0: function() {
    var newTable, t1, t2, split;
    newTable = P.List_List(this._table.length * 2, H.getRuntimeTypeArgument(this, "ListQueue", 0));
    H.setRuntimeTypeInfo(newTable, [H.getRuntimeTypeArgument(this, "ListQueue", 0)]);
    t1 = this._table;
    t2 = this._head;
    split = t1.length - t2;
    H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
    t1 = this._head;
    t2 = this._table;
    H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
    this._head = 0;
    this._tail = this._table.length;
    this._table = newTable;
  },
  ListQueue$1: function(initialCapacity, $E) {
    var t1 = P.List_List(8, $E);
    H.setRuntimeTypeInfo(t1, [$E]);
    this._table = t1;
  },
  $asIterableBase: null,
  $isEfficientLength: true,
  static: {
"": "ListQueue__INITIAL_CAPACITY",
ListQueue$: function(initialCapacity, $E) {
  var t1 = new P.ListQueue(null, 0, 0, 0);
  H.setRuntimeTypeInfo(t1, [$E]);
  t1.ListQueue$1(initialCapacity, $E);
  return t1;
}}

},

_ListQueueIterator: {"": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
  get$current: function() {
    return this._collection$_current;
  },
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._queue;
    if (this._modificationCount !== t1._modificationCount)
      H.throwExpression(P.ConcurrentModificationError$(t1));
    t2 = this._collection$_position;
    if (t2 === this._end) {
      this._collection$_current = null;
      return false;
    }
    t3 = t1._table;
    if (t2 < 0 || t2 >= t3.length)
      throw H.ioore(t3, t2);
    this._collection$_current = t3[t2];
    this._collection$_position = (this._collection$_position + 1 & t1._table.length - 1) >>> 0;
    return true;
  },
  static: {
_ListQueueIterator$: function(queue) {
  return new P._ListQueueIterator(queue, queue._tail, queue._modificationCount, queue._head, null);
}}

}}],
["dart.core", "dart:core", , P, {
_symbolToString: function(symbol) {
  return H.Symbol_getName(symbol);
},

Comparable_compare: function(a, b) {
  return J.compareTo$1$ns(a, b);
},

Error_safeToString: function(object) {
  var buffer, t1, i, codeUnit, t2, charCodes;
  if (typeof object === "number" || typeof object === "boolean" || null == object)
    return J.toString$0(object);
  if (typeof object === "string") {
    buffer = new P.StringBuffer("");
    buffer._contents = "\"";
    for (t1 = object.length, i = 0; i < t1; ++i) {
      codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
      if (codeUnit <= 31)
        if (codeUnit === 10)
          buffer._contents = buffer._contents + "\\n";
        else if (codeUnit === 13)
          buffer._contents = buffer._contents + "\\r";
        else if (codeUnit === 9)
          buffer._contents = buffer._contents + "\\t";
        else {
          buffer._contents = buffer._contents + "\\x";
          if (codeUnit < 16)
            buffer._contents = buffer._contents + "0";
          else {
            buffer._contents = buffer._contents + "1";
            codeUnit -= 16;
          }
          t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
          charCodes = P.List_List$filled(1, t2, J.JSInt);
          charCodes.$builtinTypeInfo = [J.JSInt];
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          buffer._contents = buffer._contents + t2;
        }
      else if (codeUnit === 92)
        buffer._contents = buffer._contents + "\\\\";
      else if (codeUnit === 34)
        buffer._contents = buffer._contents + "\\\"";
      else {
        charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
        charCodes.$builtinTypeInfo = [J.JSInt];
        t2 = H.Primitives_stringFromCharCodes(charCodes);
        buffer._contents = buffer._contents + t2;
      }
    }
    buffer._contents = buffer._contents + "\"";
    return buffer._contents;
  }
  return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
},

Exception_Exception: function(message) {
  return new P._ExceptionImplementation(message);
},

identical: function(a, b) {
  return a == null ? b == null : a === b;
},

identityHashCode: function(object) {
  return H.objectHashCode(object);
},

List_List: function($length, $E) {
  if ($length == null)
    return new Array(0);
  if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + H.S($length) + "."));
  return H.Primitives_newFixedList($length);
},

List_List$filled: function($length, fill, $E) {
  var result, t1, i;
  if ($length < 0)
    throw H.wrapException(P.ArgumentError$("Length must be a positive integer: " + $length + "."));
  result = H.Primitives_newFixedList($length);
  if ($length !== 0 && true)
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
},

List_List$from: function(other, growable, $E) {
  var list, t1, $length, fixedList, i;
  list = P.List_List(null, $E);
  H.setRuntimeTypeInfo(list, [$E]);
  for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
    list.push(t1.get$current());
  if (growable)
    return list;
  $length = list.length;
  fixedList = P.List_List($length, $E);
  H.setRuntimeTypeInfo(fixedList, [$E]);
  for (t1 = list.length, i = 0; i < $length; ++i) {
    if (i >= t1)
      throw H.ioore(list, i);
    fixedList[i] = list[i];
  }
  return fixedList;
},

print: function(object) {
  var line = J.toString$0(object);
  H.printToConsole(line);
},

NoSuchMethodError_toString_closure: {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if (t1.i_1 > 0)
      t1.sb_0.write$1(", ");
    t1.sb_0.write$1(P._symbolToString(key));
  },
  $is_args2: true
},

Comparable: {"": "Object;"},

DateTime: {"": "Object;millisecondsSinceEpoch<,isUtc",
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDateTime)
      return false;
    return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
  },
  compareTo$1: function(_, other) {
    return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function(_) {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function(_) {
    var t1, y, m, d, h, min, sec, ms;
    t1 = new P.DateTime_toString_twoDigits();
    y = new P.DateTime_toString_fourDigits().call$1(H.Primitives_getYear(this));
    m = t1.call$1(H.Primitives_getMonth(this));
    d = t1.call$1(H.Primitives_getDay(this));
    h = t1.call$1(H.Primitives_getHours(this));
    min = t1.call$1(H.Primitives_getMinutes(this));
    sec = t1.call$1(H.Primitives_getSeconds(this));
    ms = new P.DateTime_toString_threeDigits().call$1(H.Primitives_getMilliseconds(this));
    if (this.isUtc)
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
    else
      return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
  },
  add$1: function(_, duration) {
    return P.DateTime$fromMillisecondsSinceEpoch(C.JSNumber_methods.$add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if (Math.abs(millisecondsSinceEpoch) > 8640000000000000)
      throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
  },
  DateTime$_now$0: function() {
    H.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true,
  static: {
"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH",
DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
  var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
},

DateTime$_now: function() {
  var t1 = new P.DateTime(Date.now(), false);
  t1.DateTime$_now$0();
  return t1;
}}

},

DateTime_toString_fourDigits: {"": "Closure;",
  call$1: function(n) {
    var absN, sign;
    absN = J.abs$0$n(n);
    sign = n < 0 ? "-" : "";
    if (absN >= 1000)
      return H.S(n);
    if (absN >= 100)
      return sign + "0" + H.S(absN);
    if (absN >= 10)
      return sign + "00" + H.S(absN);
    return sign + "000" + H.S(absN);
  },
  $is_args1: true
},

DateTime_toString_threeDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100))
      return H.S(n);
    if (t1.$ge(n, 10))
      return "0" + H.S(n);
    return "00" + H.S(n);
  },
  $is_args1: true
},

DateTime_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  $is_args1: true
},

Duration: {"": "Object;_duration<",
  $add: function(_, other) {
    return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
  },
  $sub: function(_, other) {
    return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
  },
  $mul: function(_, factor) {
    if (typeof factor !== "number")
      throw H.iae(factor);
    return P.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
  },
  $lt: function(_, other) {
    return this._duration < other.get$_duration();
  },
  $gt: function(_, other) {
    return this._duration > other.get$_duration();
  },
  $le: function(_, other) {
    return C.JSNumber_methods.$le(this._duration, other.get$_duration());
  },
  $ge: function(_, other) {
    return C.JSNumber_methods.$ge(this._duration, other.get$_duration());
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isDuration)
      return false;
    return this._duration === other._duration;
  },
  get$hashCode: function(_) {
    return this._duration & 0x1FFFFFFF;
  },
  compareTo$1: function(_, other) {
    return C.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
  },
  toString$0: function(_) {
    var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
    t1 = new P.Duration_toString_twoDigits();
    t2 = this._duration;
    if (t2 < 0)
      return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
    twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 60000000), 60));
    twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods.$tdiv(t2, 1000000), 60));
    sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
    return H.S(C.JSNumber_methods.$tdiv(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
  },
  $isDuration: true,
  static: {
"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO",
Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
  return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
}}

},

Duration_toString_sixDigits: {"": "Closure;",
  call$1: function(n) {
    var t1 = J.getInterceptor$n(n);
    if (t1.$ge(n, 100000))
      return H.S(n);
    if (t1.$ge(n, 10000))
      return "0" + H.S(n);
    if (t1.$ge(n, 1000))
      return "00" + H.S(n);
    if (t1.$ge(n, 100))
      return "000" + H.S(n);
    if (t1.$gt(n, 10))
      return "0000" + H.S(n);
    return "00000" + H.S(n);
  },
  $is_args1: true
},

Duration_toString_twoDigits: {"": "Closure;",
  call$1: function(n) {
    if (J.$ge$n(n, 10))
      return H.S(n);
    return "0" + H.S(n);
  },
  $is_args1: true
},

Error: {"": "Object;",
  get$stackTrace: function() {
    return new H._StackTrace(this.$thrownJsError, null);
  },
  $isError: true
},

NullThrownError: {"": "Error;",
  toString$0: function(_) {
    return "Throw of null.";
  }
},

ArgumentError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Illegal argument(s): " + H.S(t1);
    return "Illegal argument(s)";
  },
  static: {
ArgumentError$: function(message) {
  return new P.ArgumentError(message);
}}

},

RangeError: {"": "ArgumentError;message",
  toString$0: function(_) {
    return "RangeError: " + H.S(this.message);
  },
  static: {
RangeError$: function(message) {
  return new P.RangeError(message);
},

RangeError$value: function(value) {
  return new P.RangeError("value " + H.S(value));
},

RangeError$range: function(value, start, end) {
  return new P.RangeError("value " + H.S(value) + " not in range " + H.S(start) + ".." + H.S(end));
}}

},

UnsupportedError: {"": "Error;message",
  toString$0: function(_) {
    return "Unsupported operation: " + this.message;
  },
  static: {
UnsupportedError$: function(message) {
  return new P.UnsupportedError(message);
}}

},

UnimplementedError: {"": "Error;message",
  toString$0: function(_) {
    var t1 = this.message;
    return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
  },
  $isError: true,
  static: {
UnimplementedError$: function(message) {
  return new P.UnimplementedError(message);
}}

},

StateError: {"": "Error;message",
  toString$0: function(_) {
    return "Bad state: " + this.message;
  },
  static: {
StateError$: function(message) {
  return new P.StateError(message);
}}

},

ConcurrentModificationError: {"": "Error;modifiedObject",
  toString$0: function(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
  },
  static: {
ConcurrentModificationError$: function(modifiedObject) {
  return new P.ConcurrentModificationError(modifiedObject);
}}

},

StackOverflowError: {"": "Object;",
  toString$0: function(_) {
    return "Stack Overflow";
  },
  get$stackTrace: function() {
    return;
  },
  $isError: true
},

CyclicInitializationError: {"": "Error;variableName",
  toString$0: function(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  },
  static: {
CyclicInitializationError$: function(variableName) {
  return new P.CyclicInitializationError(variableName);
}}

},

_ExceptionImplementation: {"": "Object;message",
  toString$0: function(_) {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + H.S(t1);
  },
  $isException: true
},

FormatException: {"": "Object;message",
  toString$0: function(_) {
    return "FormatException: " + H.S(this.message);
  },
  $isFormatException: true,
  $isException: true,
  static: {
FormatException$: function(message) {
  return new P.FormatException(message);
}}

},

Expando: {"": "Object;name>",
  toString$0: function(_) {
    return "Expando:" + H.S(this.name);
  },
  $index: function(_, object) {
    var values = H.Primitives_getProperty(object, "expando$values");
    return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
  },
  $indexSet: function(_, object, value) {
    var values = H.Primitives_getProperty(object, "expando$values");
    if (values == null) {
      values = new P.Object();
      H.Primitives_setProperty(object, "expando$values", values);
    }
    H.Primitives_setProperty(values, this._getKey$0(), value);
  },
  _getKey$0: function() {
    var key, t1;
    key = H.Primitives_getProperty(this, "expando$key");
    if (key == null) {
      t1 = $.Expando__keyCount;
      $.Expando__keyCount = t1 + 1;
      key = "expando$key$" + t1;
      H.Primitives_setProperty(this, "expando$key", key);
    }
    return key;
  },
  static: {
"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount",
}

},

Function: {"": "Object;"},

Iterator: {"": "Object;"},

Map: {"": "Object;", $isMap: true},

Null: {"": "Object;",
  toString$0: function(_) {
    return "null";
  }
},

Object: {"": ";",
  $eq: function(_, other) {
    return this === other;
  },
  get$hashCode: function(_) {
    return H.Primitives_objectHashCode(this);
  },
  toString$0: function(_) {
    return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
  }
},

StackTrace: {"": "Object;"},

StringBuffer: {"": "Object;_contents<",
  get$length: function(_) {
    return this._contents.length;
  },
  write$1: function(obj) {
    var str = typeof obj === "string" ? obj : H.S(obj);
    this._contents = this._contents + str;
  },
  writeAll$2: function(objects, separator) {
    var iterator, str;
    iterator = J.get$iterator$ax(objects);
    if (!iterator.moveNext$0())
      return;
    if (separator.length === 0)
      do {
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      } while (iterator.moveNext$0());
    else {
      this.write$1(iterator.get$current());
      for (; iterator.moveNext$0();) {
        this._contents = this._contents + separator;
        str = iterator.get$current();
        str = typeof str === "string" ? str : H.S(str);
        this._contents = this._contents + str;
      }
    }
  },
  toString$0: function(_) {
    return this._contents;
  },
  StringBuffer$1: function($content) {
    this._contents = $content;
  },
  static: {
StringBuffer$: function($content) {
  var t1 = new P.StringBuffer("");
  t1.StringBuffer$1($content);
  return t1;
}}

},

Symbol: {"": "Object;"}}],
["dart.dom.html", "dart:html", , W, {
AnchorElement_AnchorElement: function(href) {
  var e = document.createElement("a", null);
  return e;
},

Element_Element$html: function(html, treeSanitizer, validator) {
  var fragment, t1;
  fragment = J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator);
  fragment.toString;
  t1 = new W._ChildNodeListLazy(fragment);
  t1 = t1.where$1(t1, new W.Element_Element$html_closure());
  return t1.get$single(t1);
},

Element__determineMouseWheelEventType: function(e) {
  if (e.onwheel !== undefined)
    return "wheel";
  else if (e.onmousewheel !== undefined)
    return "mousewheel";
  else
    return "DOMMouseScroll";
},

_ElementFactoryProvider_createElement_tag: function(tag, typeExtension) {
  return document.createElement(tag);
},

Window__isDartLocation: function(thing) {
  var t1, t2, exception;
  try {
    t1 = thing;
    t2 = J.getInterceptor(t1);
    return typeof t1 === "object" && t1 !== null && !!t2.$isLocation;
  } catch (exception) {
    H.unwrapException(exception);
    return false;
  }

},

_JenkinsSmiHash_combine: function(hash, value) {
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

_convertNativeToDart_Window: function(win) {
  if (win == null)
    return;
  return W._DOMWindowCrossFrame__createSafe(win);
},

_convertNativeToDart_EventTarget: function(e) {
  var $window, t1;
  if (e == null)
    return;
  if ("setInterval" in e) {
    $window = W._DOMWindowCrossFrame__createSafe(e);
    t1 = J.getInterceptor($window);
    if (typeof $window === "object" && $window !== null && !!t1.$isEventTarget)
      return $window;
    return;
  } else
    return e;
},

_wrapZone: function(callback) {
  var t1 = $.Zone__current;
  if (t1 === C.C__RootZone)
    return callback;
  return t1.bindUnaryCallback$2$runGuarded(callback, true);
},

HtmlElement: {"": "Element;", "%": "HTMLAppletElement|HTMLBRElement|HTMLBaseFontElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLMarqueeElement|HTMLMenuElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPreElement|HTMLQuoteElement|HTMLScriptElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"},

AnchorElement: {"": "HtmlElement;hostname=,href},port=,protocol=",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "HTMLAnchorElement"
},

AreaElement: {"": "HtmlElement;hostname=,href},port=,protocol=", "%": "HTMLAreaElement"},

BaseElement: {"": "HtmlElement;href}", "%": "HTMLBaseElement"},

Blob: {"": "Interceptor;", "%": ";Blob"},

BodyElement: {"": "HtmlElement;", $isBodyElement: true, "%": "HTMLBodyElement"},

ButtonElement: {"": "HtmlElement;name=,value=", "%": "HTMLButtonElement"},

CanvasElement: {"": "HtmlElement;height%,width%",
  getContext$2: function(receiver, contextId, attrs) {
    return receiver.getContext(contextId);
  },
  getContext$1: function($receiver, contextId) {
    return this.getContext$2($receiver, contextId, null);
  },
  "%": "HTMLCanvasElement"
},

CanvasRenderingContext: {"": "Interceptor;", "%": "WebGLRenderingContext;CanvasRenderingContext"},

CanvasRenderingContext2D: {"": "CanvasRenderingContext;fillStyle},font}",
  clearRect$4: function(receiver, x, y, width, height) {
    return receiver.clearRect(x, y, width, height);
  },
  createLinearGradient$4: function(receiver, x0, y0, x1, y1) {
    return receiver.createLinearGradient(x0, y0, x1, y1);
  },
  scale$2: function(receiver, sx, sy) {
    return receiver.scale(sx, sy);
  },
  "%": "CanvasRenderingContext2D"
},

CharacterData: {"": "Node;length=", "%": "CDATASection|CharacterData|Comment|ProcessingInstruction|Text"},

CssStyleDeclaration: {"": "Interceptor_CssStyleDeclarationBase;length=",
  getPropertyValue$1: function(receiver, propertyName) {
    var propValue = receiver.getPropertyValue(propertyName);
    return propValue != null ? propValue : "";
  },
  setProperty$3: function(receiver, propertyName, value, priority) {
    var exception;
    try {
      if (priority == null)
        priority = "";
      receiver.setProperty(propertyName, value, priority);
      if (!!receiver.setAttribute)
        receiver.setAttribute(propertyName, value);
    } catch (exception) {
      H.unwrapException(exception);
    }

  },
  setProperty$2: function($receiver, propertyName, value) {
    return this.setProperty$3($receiver, propertyName, value, null);
  },
  "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
},

DeviceOrientationEvent: {"": "Event;", "%": "DeviceOrientationEvent"},

Document: {"": "Node;",
  get$onKeyDown: function(receiver) {
    return C.EventStreamProvider_keydown.forTarget$1(receiver);
  },
  onKeyDown$1: function($receiver, arg0) {
    return this.get$onKeyDown($receiver).call$1(arg0);
  },
  get$onKeyUp: function(receiver) {
    return C.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  "%": "Document|HTMLDocument|SVGDocument"
},

DocumentFragment: {"": "Node;",
  set$innerHtml: function(receiver, value) {
    this.setInnerHtml$1(receiver, value);
  },
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    new W._ChildNodeListLazy(receiver)._this.textContent = "";
    receiver.appendChild(J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator));
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  "%": ";DocumentFragment"
},

DomError: {"": "Interceptor;name=", "%": "DOMError|FileError"},

DomException: {"": "Interceptor;",
  get$name: function(receiver) {
    var errorName = receiver.name;
    if (P.Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if (P.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "DOMException"
},

Element: {"": "Node;style=",
  get$attributes: function(receiver) {
    return new W._ElementAttributeMap(receiver);
  },
  get$offset: function(receiver) {
    var t1 = new P.Rectangle(receiver.offsetLeft, receiver.offsetTop, receiver.offsetWidth, receiver.offsetHeight);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  toString$0: function(receiver) {
    return receiver.localName;
  },
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var t1, t2, base, contextElement, fragment;
    if (treeSanitizer == null) {
      if ($.Element__defaultValidator == null) {
        t1 = [];
        H.setRuntimeTypeInfo(t1, [W.NodeValidator]);
        t1 = new W.NodeValidatorBuilder(t1);
        t2 = t1._validators;
        t2.push(W._Html5NodeValidator$(null));
        t2.push(W._TemplatingNodeValidator$());
        $.Element__defaultValidator = t1;
      }
      validator = $.Element__defaultValidator;
      t1 = $.Element__defaultSanitizer;
      if (t1 == null)
        $.Element__defaultSanitizer = new W._ValidatingTreeSanitizer(validator);
      else
        t1.validator = validator;
      treeSanitizer = $.Element__defaultSanitizer;
    }
    if ($.Element__parseDocument == null) {
      $.Element__parseDocument = document.implementation.createHTMLDocument("");
      $.Element__parseRange = $.Element__parseDocument.createRange();
      base = $.Element__parseDocument.createElement("base", null);
      J.set$href$x(base, document.baseURI);
      $.Element__parseDocument.head.appendChild(base);
    }
    t1 = $.Element__parseDocument;
    if (!!this.$isBodyElement)
      contextElement = t1.body;
    else {
      contextElement = t1.createElement(receiver.tagName, null);
      $.Element__parseDocument.body.appendChild(contextElement);
    }
    if ("createContextualFragment" in window.Range.prototype) {
      $.Element__parseRange.selectNodeContents(contextElement);
      fragment = $.Element__parseRange.createContextualFragment(html);
    } else {
      contextElement.innerHTML = html;
      fragment = $.Element__parseDocument.createDocumentFragment();
      for (; t1 = contextElement.firstChild, t1 != null;)
        fragment.appendChild(t1);
    }
    t1 = $.Element__parseDocument.body;
    if (contextElement == null ? t1 != null : contextElement !== t1)
      J.remove$0$ax(contextElement);
    treeSanitizer.sanitizeTree$1(fragment);
    document.adoptNode(fragment);
    return fragment;
  },
  createFragment$2$treeSanitizer: function($receiver, html, treeSanitizer) {
    return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
  },
  set$innerHtml: function(receiver, html) {
    this.setInnerHtml$1(receiver, html);
  },
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    receiver.textContent = null;
    receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator));
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  get$onKeyDown: function(receiver) {
    return C.EventStreamProvider_keydown.forElement$1(receiver);
  },
  onKeyDown$1: function($receiver, arg0) {
    return this.get$onKeyDown($receiver).call$1(arg0);
  },
  get$onKeyUp: function(receiver) {
    return C.EventStreamProvider_keyup.forElement$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  $isElement: true,
  "%": ";Element"
},

EmbedElement: {"": "HtmlElement;height%,name=,width%", "%": "HTMLEmbedElement"},

ErrorEvent: {"": "Event;error=", "%": "ErrorEvent"},

Event: {"": "Interceptor;",
  preventDefault$0: function(receiver) {
    return receiver.preventDefault();
  },
  "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeLoadEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaKeyEvent|MediaKeyMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|ResourceProgressEvent|SecurityPolicyViolationEvent|SpeechInputEvent|SpeechRecognitionEvent|StorageEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent|XMLHttpRequestProgressEvent;Event"
},

EventTarget: {"": "Interceptor;",
  addEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  removeEventListener$3: function(receiver, type, listener, useCapture) {
    return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
  },
  $isEventTarget: true,
  "%": "MediaStream;EventTarget"
},

FieldSetElement: {"": "HtmlElement;name=", "%": "HTMLFieldSetElement"},

File: {"": "Blob;name=", "%": "File"},

FormElement: {"": "HtmlElement;length=,name=", "%": "HTMLFormElement"},

IFrameElement: {"": "HtmlElement;height%,name=,width%", "%": "HTMLIFrameElement"},

ImageElement: {"": "HtmlElement;height%,width%", "%": "HTMLImageElement"},

InputElement: {"": "HtmlElement;height%,maxLength},name=,value=,width%", $isElement: true, $isEventTarget: true, "%": "HTMLInputElement"},

KeyboardEvent: {"": "UIEvent;altKey=,ctrlKey=,location=,metaKey=,shiftKey=",
  get$keyCode: function(receiver) {
    return receiver.keyCode;
  },
  "%": "KeyboardEvent"
},

KeygenElement: {"": "HtmlElement;name=", "%": "HTMLKeygenElement"},

LIElement: {"": "HtmlElement;value=", "%": "HTMLLIElement"},

LinkElement: {"": "HtmlElement;href}", "%": "HTMLLinkElement"},

Location: {"": "Interceptor;hostname=,port=,protocol=",
  toString$0: function(receiver) {
    return receiver.toString();
  },
  $isLocation: true,
  "%": "Location"
},

MapElement: {"": "HtmlElement;name=", "%": "HTMLMapElement"},

MediaElement: {"": "HtmlElement;error=", "%": "HTMLAudioElement;HTMLMediaElement"},

MessageEvent: {"": "Event;",
  get$source: function(receiver) {
    return W._convertNativeToDart_EventTarget(receiver.source);
  },
  "%": "MessageEvent"
},

MetaElement: {"": "HtmlElement;name=", "%": "HTMLMetaElement"},

MeterElement: {"": "HtmlElement;value=", "%": "HTMLMeterElement"},

MidiOutput: {"": "MidiPort;",
  send$2: function(receiver, data, timestamp) {
    return receiver.send(data, timestamp);
  },
  send$1: function($receiver, data) {
    return $receiver.send(data);
  },
  "%": "MIDIOutput"
},

MidiPort: {"": "EventTarget;name=", "%": "MIDIInput;MIDIPort"},

MouseEvent: {"": "UIEvent;altKey=,button=,ctrlKey=,metaKey=,shiftKey=",
  get$offset: function(receiver) {
    var t1, t2, target, point;
    if (!!receiver.offsetX) {
      t1 = new P.Point(receiver.offsetX, receiver.offsetY);
      H.setRuntimeTypeInfo(t1, [null]);
      return t1;
    } else {
      t1 = W._convertNativeToDart_EventTarget(receiver.target);
      t2 = J.getInterceptor(t1);
      if (typeof t1 !== "object" || t1 === null || !t2.$isElement)
        throw H.wrapException(P.UnsupportedError$("offsetX is only supported on elements"));
      target = W._convertNativeToDart_EventTarget(receiver.target);
      t1 = new P.Point(receiver.clientX, receiver.clientY);
      H.setRuntimeTypeInfo(t1, [null]);
      point = t1.$sub(t1, J.get$topLeft$x(J.getBoundingClientRect$0$x(target)));
      t1 = new P.Point(J.toInt$0$n(point.x), J.toInt$0$n(point.y));
      H.setRuntimeTypeInfo(t1, [null]);
      return t1;
    }
  },
  "%": ";DragEvent|MSPointerEvent|MouseEvent|PointerEvent"
},

NavigatorUserMediaError: {"": "Interceptor;name=", "%": "NavigatorUserMediaError"},

Node: {"": "EventTarget;lastChild=,nodeType=,parent:parentElement=",
  get$nodes: function(receiver) {
    return new W._ChildNodeListLazy(receiver);
  },
  remove$0: function(receiver) {
    var t1 = receiver.parentNode;
    if (t1 != null)
      t1.removeChild(receiver);
  },
  replaceWith$1: function(receiver, otherNode) {
    var $parent, exception;
    try {
      $parent = receiver.parentNode;
      J._replaceChild$2$x($parent, otherNode, receiver);
    } catch (exception) {
      H.unwrapException(exception);
    }

    return receiver;
  },
  toString$0: function(receiver) {
    var t1 = receiver.nodeValue;
    return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
  },
  _replaceChild$2: function(receiver, newChild, oldChild) {
    return receiver.replaceChild(newChild, oldChild);
  },
  "%": "DocumentType|Entity|Notation;Node"
},

NodeList: {"": "Interceptor_ListMixin_ImmutableListMixin;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  $asList: function() {
    return [W.Node];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "NodeList|RadioNodeList"
},

ObjectElement: {"": "HtmlElement;height%,name=,width%", "%": "HTMLObjectElement"},

OptionElement: {"": "HtmlElement;value=", "%": "HTMLOptionElement"},

OutputElement: {"": "HtmlElement;name=,value=", "%": "HTMLOutputElement"},

ParamElement: {"": "HtmlElement;name=,value=", "%": "HTMLParamElement"},

ProgressElement: {"": "HtmlElement;value=", "%": "HTMLProgressElement"},

Range: {"": "Interceptor;",
  getBoundingClientRect$0: function(receiver) {
    return receiver.getBoundingClientRect();
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  "%": "Range"
},

SelectElement: {"": "HtmlElement;length%,name=,selectedIndex},value=", "%": "HTMLSelectElement"},

ShadowRoot: {"": "DocumentFragment;innerHtml:innerHTML}", "%": "ShadowRoot"},

SpeechRecognitionError: {"": "Event;error=", "%": "SpeechRecognitionError"},

SpeechSynthesisEvent: {"": "Event;name=", "%": "SpeechSynthesisEvent"},

TableElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var table, fragment, t1;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    table = W.Element_Element$html("<table>" + H.S(html) + "</table>", treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    t1.addAll$1(t1, J.get$nodes$x(table));
    return fragment;
  },
  "%": "HTMLTableElement"
},

TableRowElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment, t1, section, row;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
    t1.toString;
    t1 = new W._ChildNodeListLazy(t1);
    section = t1.get$single(t1);
    section.toString;
    t1 = new W._ChildNodeListLazy(section);
    row = t1.get$single(t1);
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    row.toString;
    t1.addAll$1(t1, new W._ChildNodeListLazy(row));
    return fragment;
  },
  "%": "HTMLTableRowElement"
},

TableSectionElement: {"": "HtmlElement;",
  createFragment$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment, t1, section;
    if ("createContextualFragment" in window.Range.prototype)
      return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
    fragment = document.createDocumentFragment();
    t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
    t1.toString;
    t1 = new W._ChildNodeListLazy(t1);
    section = t1.get$single(t1);
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    section.toString;
    t1.addAll$1(t1, new W._ChildNodeListLazy(section));
    return fragment;
  },
  "%": "HTMLTableSectionElement"
},

TemplateElement: {"": "HtmlElement;",
  setInnerHtml$3$treeSanitizer$validator: function(receiver, html, treeSanitizer, validator) {
    var fragment;
    receiver.textContent = null;
    fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator);
    receiver.content.appendChild(fragment);
  },
  setInnerHtml$1: function($receiver, html) {
    return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, null, null);
  },
  $isTemplateElement: true,
  "%": "HTMLTemplateElement"
},

TextAreaElement: {"": "HtmlElement;maxLength},name=,value=", "%": "HTMLTextAreaElement"},

TextMetrics: {"": "Interceptor;width=", "%": "TextMetrics"},

Touch: {"": "Interceptor;",
  get$page: function(receiver) {
    var t1 = new P.Point(receiver.pageX, receiver.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "Touch"
},

TouchEvent: {"": "UIEvent;altKey=,ctrlKey=,metaKey=,shiftKey=,touches=", "%": "TouchEvent"},

TouchList: {"": "Interceptor_ListMixin_ImmutableListMixin0;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  $asList: function() {
    return [W.Touch];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "TouchList"
},

UIEvent: {"": "Event;which=",
  get$page: function(receiver) {
    var t1 = new P.Point(receiver.pageX, receiver.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent;UIEvent"
},

VideoElement: {"": "MediaElement;height%,width%", "%": "HTMLVideoElement"},

WheelEvent: {"": "MouseEvent;",
  get$deltaY: function(receiver) {
    var detail;
    if (receiver.deltaY !== undefined)
      return receiver.deltaY;
    else if (receiver.wheelDelta !== undefined)
      return -receiver.wheelDelta;
    else if (receiver.detail !== undefined) {
      if (receiver.axis == MouseScrollEvent.VERTICAL_AXIS) {
        detail = receiver.detail;
        if (Math.abs(detail) < 100)
          return -detail * 40;
        return -detail;
      }
      return 0;
    }
    throw H.wrapException(P.UnsupportedError$("deltaY is not supported"));
  },
  "%": "MouseScrollEvent|MouseWheelEvent|WheelEvent"
},

Window: {"": "EventTarget;name=",
  get$location: function(receiver) {
    var result = receiver.location;
    if (W.Window__isDartLocation(result) === true)
      return result;
    if (null == receiver._location_wrapper)
      receiver._location_wrapper = new W._LocationWrapper(result);
    return receiver._location_wrapper;
  },
  _requestAnimationFrame$1: function(receiver, callback) {
    return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function(receiver) {
    if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
  },
  get$parent: function(receiver) {
    return W._convertNativeToDart_Window(receiver.parent);
  },
  get$top: function(receiver) {
    return W._convertNativeToDart_Window(receiver.top);
  },
  toString$0: function(receiver) {
    return receiver.toString();
  },
  get$onKeyDown: function(receiver) {
    return C.EventStreamProvider_keydown.forTarget$1(receiver);
  },
  onKeyDown$1: function($receiver, arg0) {
    return this.get$onKeyDown($receiver).call$1(arg0);
  },
  get$onKeyUp: function(receiver) {
    return C.EventStreamProvider_keyup.forTarget$1(receiver);
  },
  onKeyUp$1: function($receiver, arg0) {
    return this.get$onKeyUp($receiver).call$1(arg0);
  },
  $isEventTarget: true,
  "%": "DOMWindow|Window"
},

_Attr: {"": "Node;name=,value=", "%": "Attr"},

_ClientRect: {"": "Interceptor;bottom=,height=,left=,right=,top=,width=",
  toString$0: function(receiver) {
    return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
  },
  $eq: function(receiver, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    t2 = receiver.left;
    t3 = t1.get$left(other);
    if (t2 == null ? t3 == null : t2 === t3) {
      t2 = receiver.top;
      t3 = t1.get$top(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.width;
        t3 = t1.get$width(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.height;
          t1 = t1.get$height(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(receiver) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(receiver.left);
    t2 = J.get$hashCode$(receiver.top);
    t3 = J.get$hashCode$(receiver.width);
    t4 = J.get$hashCode$(receiver.height);
    return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
  },
  get$topLeft: function(receiver) {
    var t1 = new P.Point(receiver.left, receiver.top);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  get$topRight: function(receiver) {
    var t1, t2;
    t1 = receiver.left;
    t2 = receiver.width;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 + t2, receiver.top);
    H.setRuntimeTypeInfo(t2, [null]);
    return t2;
  },
  get$bottomRight: function(receiver) {
    var t1, t2, t3, t4;
    t1 = receiver.left;
    t2 = receiver.width;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t3 = receiver.top;
    t4 = receiver.height;
    if (typeof t3 !== "number")
      throw t3.$add();
    if (typeof t4 !== "number")
      throw H.iae(t4);
    t4 = new P.Point(t1 + t2, t3 + t4);
    H.setRuntimeTypeInfo(t4, [null]);
    return t4;
  },
  get$bottomLeft: function(receiver) {
    var t1, t2, t3;
    t1 = receiver.left;
    t2 = receiver.top;
    t3 = receiver.height;
    if (typeof t2 !== "number")
      throw t2.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t3 = new P.Point(t1, t2 + t3);
    H.setRuntimeTypeInfo(t3, [null]);
    return t3;
  },
  $isRectangle: true,
  $asRectangle: function() {
    return [null];
  },
  "%": "ClientRect|DOMRect"
},

_NamedNodeMap: {"": "Interceptor_ListMixin_ImmutableListMixin1;",
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    var t1 = receiver.length;
    if (index >>> 0 !== index || index >= t1)
      throw H.wrapException(P.RangeError$range(index, 0, t1));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
  },
  set$length: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
  },
  elementAt$1: function(receiver, index) {
    if (index >>> 0 !== index || index >= receiver.length)
      throw H.ioore(receiver, index);
    return receiver[index];
  },
  $asList: function() {
    return [W.Node];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "MozNamedAttrMap|NamedNodeMap"
},

Console: {"": "Object;",
  error$1: function(_, arg) {
    return typeof console != "undefined" ? console.error(arg) : null;
  },
  get$error: function(_receiver) {
    return new W.BoundClosure$i1(this, W.Console.prototype.error$1, _receiver, "error$1");
  },
  static: {
"": "Console__safeConsole",
}

},

Interceptor_CssStyleDeclarationBase: {"": "Interceptor+CssStyleDeclarationBase;"},

CssStyleDeclarationBase: {"": "Object;",
  set$backfaceVisibility: function(receiver, value) {
    this.setProperty$3(receiver, P.Device_cssPrefix() + "backface-visibility", value, "");
  },
  set$background: function(receiver, value) {
    this.setProperty$3(receiver, "background", value, "");
  },
  set$backgroundColor: function(receiver, value) {
    this.setProperty$3(receiver, "background-color", value, "");
  },
  set$border: function(receiver, value) {
    this.setProperty$3(receiver, "border", value, "");
  },
  set$borderBottomLeftRadius: function(receiver, value) {
    this.setProperty$3(receiver, "border-bottom-left-radius", value, "");
  },
  set$borderBottomRightRadius: function(receiver, value) {
    this.setProperty$3(receiver, "border-bottom-right-radius", value, "");
  },
  set$borderRadius: function(receiver, value) {
    this.setProperty$3(receiver, "border-radius", value, "");
  },
  set$borderTopLeftRadius: function(receiver, value) {
    this.setProperty$3(receiver, "border-top-left-radius", value, "");
  },
  set$borderTopRightRadius: function(receiver, value) {
    this.setProperty$3(receiver, "border-top-right-radius", value, "");
  },
  get$bottom: function(receiver) {
    return this.getPropertyValue$1(receiver, "bottom");
  },
  set$color: function(receiver, value) {
    this.setProperty$3(receiver, "color", value, "");
  },
  set$cursor: function(receiver, value) {
    this.setProperty$3(receiver, "cursor", value, "");
  },
  set$display: function(receiver, value) {
    this.setProperty$3(receiver, "display", value, "");
  },
  set$fontFamily: function(receiver, value) {
    this.setProperty$3(receiver, "font-family", value, "");
  },
  set$fontSize: function(receiver, value) {
    this.setProperty$3(receiver, "font-size", value, "");
  },
  set$fontWeight: function(receiver, value) {
    this.setProperty$3(receiver, "font-weight", value, "");
  },
  get$height: function(receiver) {
    return this.getPropertyValue$1(receiver, "height");
  },
  set$height: function(receiver, value) {
    this.setProperty$3(receiver, "height", value, "");
  },
  get$left: function(receiver) {
    return this.getPropertyValue$1(receiver, "left");
  },
  set$left: function(receiver, value) {
    this.setProperty$3(receiver, "left", value, "");
  },
  set$margin: function(receiver, value) {
    this.setProperty$3(receiver, "margin", value, "");
  },
  get$opacity: function(receiver) {
    return this.getPropertyValue$1(receiver, "opacity");
  },
  set$opacity: function(receiver, value) {
    this.setProperty$3(receiver, "opacity", value, "");
  },
  set$overflow: function(receiver, value) {
    this.setProperty$3(receiver, "overflow", value, "");
  },
  set$overflowX: function(receiver, value) {
    this.setProperty$3(receiver, "overflow-x", value, "");
  },
  set$overflowY: function(receiver, value) {
    this.setProperty$3(receiver, "overflow-y", value, "");
  },
  set$padding: function(receiver, value) {
    this.setProperty$3(receiver, "padding", value, "");
  },
  get$page: function(receiver) {
    return this.getPropertyValue$1(receiver, "page");
  },
  set$pointerEvents: function(receiver, value) {
    this.setProperty$3(receiver, "pointer-events", value, "");
  },
  set$position: function(receiver, value) {
    this.setProperty$3(receiver, "position", value, "");
  },
  get$right: function(receiver) {
    return this.getPropertyValue$1(receiver, "right");
  },
  set$textAlign: function(receiver, value) {
    this.setProperty$3(receiver, "text-align", value, "");
  },
  get$top: function(receiver) {
    return this.getPropertyValue$1(receiver, "top");
  },
  set$top: function(receiver, value) {
    this.setProperty$3(receiver, "top", value, "");
  },
  set$transform: function(receiver, value) {
    this.setProperty$3(receiver, P.Device_cssPrefix() + "transform", value, "");
  },
  set$userSelect: function(receiver, value) {
    this.setProperty$3(receiver, P.Device_cssPrefix() + "user-select", value, "");
  },
  set$visibility: function(receiver, value) {
    this.setProperty$3(receiver, "visibility", value, "");
  },
  get$width: function(receiver) {
    return this.getPropertyValue$1(receiver, "width");
  },
  set$width: function(receiver, value) {
    this.setProperty$3(receiver, "width", value, "");
  },
  set$wordWrap: function(receiver, value) {
    this.setProperty$3(receiver, "word-wrap", value, "");
  }
},

Element_Element$html_closure: {"": "Closure;",
  call$1: function(e) {
    var t1 = J.getInterceptor(e);
    return typeof e === "object" && e !== null && !!t1.$isElement;
  },
  $is_args1: true
},

_ChildNodeListLazy: {"": "ListBase;_this",
  get$last: function(_) {
    var result = this._this.lastChild;
    if (result == null)
      throw H.wrapException(P.StateError$("No elements"));
    return result;
  },
  get$single: function(_) {
    var t1, l;
    t1 = this._this;
    l = t1.childNodes.length;
    if (l === 0)
      throw H.wrapException(P.StateError$("No elements"));
    if (l > 1)
      throw H.wrapException(P.StateError$("More than one element"));
    return t1.firstChild;
  },
  add$1: function(_, value) {
    this._this.appendChild(value);
  },
  addAll$1: function(_, iterable) {
    var t1, t2, len, i;
    t1 = iterable._this;
    t2 = this._this;
    if (t1 !== t2)
      for (len = t1.childNodes.length, i = 0; i < len; ++i)
        t2.appendChild(t1.firstChild);
    return;
  },
  removeLast$0: function(_) {
    var result = this.get$last(this);
    if (result != null)
      this._this.removeChild(result);
    return result;
  },
  removeAt$1: function(_, index) {
    var t1, t2, result;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw H.ioore(t2, index);
    result = t2[index];
    t1.removeChild(result);
    return result;
  },
  $indexSet: function(_, index, value) {
    var t1, t2;
    t1 = this._this;
    t2 = t1.childNodes;
    if (index >>> 0 !== index || index >= t2.length)
      throw H.ioore(t2, index);
    t1.replaceChild(value, t2[index]);
  },
  get$iterator: function(_) {
    return C.NodeList_methods.get$iterator(this._this.childNodes);
  },
  setRange$4: function(_, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot setRange on Node list"));
  },
  get$length: function(_) {
    return this._this.childNodes.length;
  },
  set$length: function(_, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(_, index) {
    var t1 = this._this.childNodes;
    if (index >>> 0 !== index || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  $asList: function() {
    return [W.Node];
  }
},

Interceptor_ListMixin: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

Interceptor_ListMixin_ImmutableListMixin: {"": "Interceptor_ListMixin+ImmutableListMixin;", $asList: null, $isList: true, $isEfficientLength: true},

Interceptor_ListMixin0: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

Interceptor_ListMixin_ImmutableListMixin0: {"": "Interceptor_ListMixin0+ImmutableListMixin;", $asList: null, $isList: true, $isEfficientLength: true},

Interceptor_ListMixin1: {"": "Interceptor+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

Interceptor_ListMixin_ImmutableListMixin1: {"": "Interceptor_ListMixin1+ImmutableListMixin;", $asList: null, $isList: true, $isEfficientLength: true},

_AttributeMap: {"": "Object;",
  forEach$1: function(_, f) {
    var t1, key;
    for (t1 = this.get$keys(), t1 = new H.ListIterator(t1, t1.length, 0, null); t1.moveNext$0();) {
      key = t1._current;
      f.call$2(key, this.$index(this, key));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i, t1;
    attributes = this._element.attributes;
    keys = P.List_List(null, J.JSString);
    H.setRuntimeTypeInfo(keys, [J.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw H.ioore(attributes, i);
      t1 = attributes[i];
      if (this._matches$1(t1))
        keys.push(J.get$name$x(t1));
    }
    return keys;
  },
  get$values: function(_) {
    var attributes, values, len, i, t1;
    attributes = this._element.attributes;
    values = P.List_List(null, J.JSString);
    H.setRuntimeTypeInfo(values, [J.JSString]);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw H.ioore(attributes, i);
      t1 = attributes[i];
      if (this._matches$1(t1))
        values.push(J.get$value$x(t1));
    }
    return values;
  },
  $isMap: true,
  $asMap: function() {
    return [J.JSString, J.JSString];
  }
},

_ElementAttributeMap: {"": "_AttributeMap;_element",
  $index: function(_, key) {
    return this._element.getAttribute(key);
  },
  $indexSet: function(_, key, value) {
    this._element.setAttribute(key, value);
  },
  get$length: function(_) {
    return this.get$keys().length;
  },
  _matches$1: function(node) {
    return node.namespaceURI == null;
  }
},

EventStreamProvider: {"": "Object;_html$_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    var t1 = new W._EventStream(e, this._html$_eventType, useCapture);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  },
  forElement$2$useCapture: function(e, useCapture) {
    var t1 = new W._ElementEventStreamImpl(e, this._html$_eventType, useCapture);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  forElement$1: function(e) {
    return this.forElement$2$useCapture(e, false);
  }
},

_EventStream: {"": "Stream;_html$_target,_html$_eventType,_useCapture",
  listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
    var t1 = new W._EventStreamSubscription(0, this._html$_target, this._html$_eventType, W._wrapZone(onData), this._useCapture);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_EventStream", 0)]);
    t1._tryResume$0();
    return t1;
  },
  $asStream: null
},

_ElementEventStreamImpl: {"": "_EventStream;_html$_target,_html$_eventType,_useCapture", $as_EventStream: null},

_EventStreamSubscription: {"": "StreamSubscription;_pauseCount,_html$_target,_html$_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this._html$_target == null)
      return;
    this._unlisten$0();
    this._html$_target = null;
    this._onData = null;
  },
  _tryResume$0: function() {
    var t1 = this._onData;
    if (t1 != null && this._pauseCount <= 0)
      J.addEventListener$3$x(this._html$_target, this._html$_eventType, t1, this._useCapture);
  },
  _unlisten$0: function() {
    var t1 = this._onData;
    if (t1 != null)
      J.removeEventListener$3$x(this._html$_target, this._html$_eventType, t1, this._useCapture);
  },
  $asStreamSubscription: null
},

_CustomEventStreamProvider: {"": "Object;_eventTypeGetter",
  _eventTypeGetter$1: function(arg0) {
    return this._eventTypeGetter.call$1(arg0);
  },
  forTarget$2$useCapture: function(e, useCapture) {
    var t1 = new W._EventStream(e, this._eventTypeGetter$1(e), useCapture);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  },
  forElement$2$useCapture: function(e, useCapture) {
    var t1 = new W._ElementEventStreamImpl(e, this._eventTypeGetter$1(e), useCapture);
    H.setRuntimeTypeInfo(t1, [null]);
    return t1;
  },
  forElement$1: function(e) {
    return this.forElement$2$useCapture(e, false);
  }
},

_Html5NodeValidator: {"": "Object;uriPolicy<",
  allowsElement$1: function(element) {
    var t1 = $.get$_Html5NodeValidator__allowedElements();
    return t1.contains$1(t1, element.tagName);
  },
  allowsAttribute$3: function(element, attributeName, value) {
    var tagName, t1, validator;
    tagName = element.tagName;
    t1 = $.get$_Html5NodeValidator__attributeValidators();
    validator = t1.$index(t1, tagName + "::" + attributeName);
    if (validator == null) {
      t1 = $.get$_Html5NodeValidator__attributeValidators();
      validator = t1.$index(t1, "*::" + attributeName);
    }
    if (validator == null)
      return false;
    return validator.call$4(element, attributeName, value, this);
  },
  _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
    var t1, attr, t2;
    t1 = $.get$_Html5NodeValidator__attributeValidators();
    if (t1.get$isEmpty(t1)) {
      for (t1 = new H.ListIterator(C.List_1GN, 261, 0, null); t1.moveNext$0();) {
        attr = t1._current;
        t2 = $.get$_Html5NodeValidator__attributeValidators();
        t2.$indexSet(t2, attr, W._Html5NodeValidator__standardAttributeValidator$closure);
      }
      for (t1 = new H.ListIterator(C.List_yrN, 12, 0, null); t1.moveNext$0();) {
        attr = t1._current;
        t2 = $.get$_Html5NodeValidator__attributeValidators();
        t2.$indexSet(t2, attr, W._Html5NodeValidator__uriAttributeValidator$closure);
      }
    }
  },
  static: {
"": "_Html5NodeValidator__allowedElements,_Html5NodeValidator__standardAttributes,_Html5NodeValidator__uriAttributes,_Html5NodeValidator__attributeValidators",
_Html5NodeValidator$: function(uriPolicy) {
  var t1 = new W._SameOriginUriPolicy(W.AnchorElement_AnchorElement(null), C.Window_methods.get$location(window));
  t1 = new W._Html5NodeValidator(t1);
  t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
  return t1;
},

_Html5NodeValidator__standardAttributeValidator: function(element, attributeName, value, context) {
  return true;
},

_Html5NodeValidator__uriAttributeValidator: function(element, attributeName, value, context) {
  return context.get$uriPolicy().allowsUri$1(value);
}}

},

ImmutableListMixin: {"": "Object;",
  get$iterator: function(receiver) {
    return W.FixedSizeListIterator$(receiver);
  },
  add$1: function(receiver, value) {
    throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
  },
  removeAt$1: function(receiver, pos) {
    throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
  },
  setRange$4: function(receiver, start, end, iterable, skipCount) {
    throw H.wrapException(P.UnsupportedError$("Cannot setRange on immutable List."));
  },
  removeRange$2: function(receiver, start, end) {
    throw H.wrapException(P.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  $isList: true,
  $asList: null,
  $isEfficientLength: true
},

NodeValidatorBuilder: {"": "Object;_validators",
  add$1: function(_, validator) {
    this._validators.push(validator);
  },
  allowsElement$1: function(element) {
    return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
  },
  allowsAttribute$3: function(element, attributeName, value) {
    return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
  }
},

NodeValidatorBuilder_allowsElement_closure: {"": "Closure;element_0",
  call$1: function(v) {
    return v.allowsElement$1(this.element_0);
  },
  $is_args1: true
},

NodeValidatorBuilder_allowsAttribute_closure: {"": "Closure;element_0,attributeName_1,value_2",
  call$1: function(v) {
    return v.allowsAttribute$3(this.element_0, this.attributeName_1, this.value_2);
  },
  $is_args1: true
},

_SimpleNodeValidator: {"": "Object;uriPolicy<",
  allowsElement$1: function(element) {
    var t1 = this.allowedElements;
    return t1.contains$1(t1, element.tagName);
  },
  allowsAttribute$3: function(element, attributeName, value) {
    var tagName, t1;
    tagName = element.tagName;
    t1 = this.allowedUriAttributes;
    if (t1.contains$1(t1, tagName + "::" + attributeName))
      return this.uriPolicy.allowsUri$1(value);
    else if (t1.contains$1(t1, "*::" + attributeName))
      return this.uriPolicy.allowsUri$1(value);
    else {
      t1 = this.allowedAttributes;
      if (t1.contains$1(t1, tagName + "::" + attributeName))
        return true;
      else if (t1.contains$1(t1, "*::" + attributeName))
        return true;
      else if (t1.contains$1(t1, tagName + "::*"))
        return true;
      else if (t1.contains$1(t1, "*::*"))
        return true;
    }
    return false;
  }
},

_TemplatingNodeValidator: {"": "_SimpleNodeValidator;_templateAttrs,allowedElements,allowedAttributes,allowedUriAttributes,uriPolicy",
  allowsAttribute$3: function(element, attributeName, value) {
    var t1;
    if (W._SimpleNodeValidator.prototype.allowsAttribute$3.call(this, element, attributeName, value))
      return true;
    if (attributeName === "template" && value === "")
      return true;
    if (new W._ElementAttributeMap(element)._element.getAttribute("template") === "") {
      t1 = this._templateAttrs;
      return t1.contains$1(t1, attributeName);
    }
    return false;
  },
  static: {
"": "_TemplatingNodeValidator__TEMPLATE_ATTRS",
_TemplatingNodeValidator$: function() {
  var t1, t2, t3, t4;
  t1 = new H.MappedListIterable(C.List_wSV, new W._TemplatingNodeValidator_closure());
  H.setRuntimeTypeInfo(t1, [null, null]);
  t2 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t2.addAll$1(t2, ["TEMPLATE"]);
  t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t3.addAll$1(t3, t1);
  t1 = t3;
  t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
  t4.addAll$1(t4, C.List_wSV);
  return new W._TemplatingNodeValidator(t4, t2, t1, t3, null);
}}

},

_TemplatingNodeValidator_closure: {"": "Closure;",
  call$1: function(attr) {
    return "TEMPLATE::" + H.S(attr);
  },
  $is_args1: true
},

_SvgNodeValidator: {"": "Object;",
  allowsElement$1: function(element) {
    var t1 = J.getInterceptor(element);
    if (!!t1.$isScriptElement)
      return false;
    if (!!t1.$isSvgElement)
      return true;
    return false;
  },
  allowsAttribute$3: function(element, attributeName, value) {
    if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
      return false;
    return this.allowsElement$1(element);
  }
},

FixedSizeListIterator: {"": "Object;_array,_html$_length,_position,_html$_current",
  moveNext$0: function() {
    var nextPosition, t1;
    nextPosition = this._position + 1;
    t1 = this._html$_length;
    if (nextPosition < t1) {
      this._html$_current = J.$index$asx(this._array, nextPosition);
      this._position = nextPosition;
      return true;
    }
    this._html$_current = null;
    this._position = t1;
    return false;
  },
  get$current: function() {
    return this._html$_current;
  },
  static: {
FixedSizeListIterator$: function(array) {
  return new W.FixedSizeListIterator(array, J.get$length$asx(array), -1, null);
}}

},

_DOMWindowCrossFrame: {"": "Object;_window",
  get$location: function(_) {
    return W._LocationCrossFrame__createSafe(this._window.location);
  },
  get$parent: function(_) {
    return W._DOMWindowCrossFrame__createSafe(this._window.parent);
  },
  get$top: function(_) {
    return W._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  $isEventTarget: true,
  static: {
_DOMWindowCrossFrame__createSafe: function(w) {
  if (w === window)
    return w;
  else
    return new W._DOMWindowCrossFrame(w);
}}

},

_LocationCrossFrame: {"": "Object;_location", static: {
_LocationCrossFrame__createSafe: function($location) {
  if ($location === C.Window_methods.get$location(window))
    return $location;
  else
    return new W._LocationCrossFrame($location);
}}
},

_LocationWrapper: {"": "Object;_ptr",
  get$hostname: function(_) {
    return this._ptr.hostname;
  },
  get$port: function(_) {
    return this._ptr.port;
  },
  get$protocol: function(_) {
    return this._ptr.protocol;
  },
  toString$0: function(_) {
    return this._ptr.toString();
  },
  $isLocation: true
},

NodeValidator: {"": "Object;"},

_SameOriginUriPolicy: {"": "Object;_hiddenAnchor,_loc",
  allowsUri$1: function(uri) {
    var t1, t2, t3, t4, t5, t6;
    t1 = this._hiddenAnchor;
    t2 = J.getInterceptor$x(t1);
    t2.set$href(t1, uri);
    t3 = t2.get$hostname(t1);
    t4 = this._loc;
    t5 = J.getInterceptor$x(t4);
    t6 = t5.get$hostname(t4);
    if (t3 == null ? t6 == null : t3 === t6) {
      t3 = t2.get$port(t1);
      t6 = t5.get$port(t4);
      if (t3 == null ? t6 == null : t3 === t6) {
        t3 = t2.get$protocol(t1);
        t4 = t5.get$protocol(t4);
        t4 = t3 == null ? t4 == null : t3 === t4;
        t3 = t4;
      } else
        t3 = false;
    } else
      t3 = false;
    if (!t3)
      t1 = t2.get$hostname(t1) === "" && t2.get$port(t1) === "" && t2.get$protocol(t1) === ":";
    else
      t1 = true;
    return t1;
  }
},

_ValidatingTreeSanitizer: {"": "Object;validator",
  sanitizeTree$1: function(node) {
    new W._ValidatingTreeSanitizer_sanitizeTree_walk(this).call$1(node);
  },
  sanitizeNode$1: function(node) {
    var t1, attrs, t2, t3, isAttr, keys, i, $name, t4;
    t1 = J.getInterceptor$x(node);
    switch (t1.get$nodeType(node)) {
      case 1:
        attrs = t1.get$attributes(node);
        if (!this.validator.allowsElement$1(node)) {
          window;
          t2 = $.get$Console__safeConsole();
          t3 = "Removing disallowed element <" + node.tagName + ">";
          t2.toString;
          if (typeof console != "undefined")
            console.warn(t3);
          t1.remove$0(node);
          break;
        }
        t2 = attrs._element;
        isAttr = t2.getAttribute("is");
        if (isAttr != null)
          if (!this.validator.allowsAttribute$3(node, "is", isAttr)) {
            window;
            t2 = $.get$Console__safeConsole();
            t3 = "Removing disallowed type extension <" + node.tagName + " is=\"" + isAttr + "\">";
            t2.toString;
            if (typeof console != "undefined")
              console.warn(t3);
            t1.remove$0(node);
            break;
          }
        t3 = attrs.get$keys();
        keys = P.List_List$from(t3, true, H.getRuntimeTypeArgument(t3, "JSArray", 0));
        for (i = attrs.get$keys().length - 1; i >= 0; --i) {
          if (i >= keys.length)
            throw H.ioore(keys, i);
          $name = keys[i];
          if (!this.validator.allowsAttribute$3(node, J.toLowerCase$0$s($name), t2.getAttribute($name))) {
            window;
            t3 = $.get$Console__safeConsole();
            t4 = "Removing disallowed attribute <" + node.tagName + " " + $name + "=\"" + t2.getAttribute($name) + "\">";
            t3.toString;
            if (typeof console != "undefined")
              console.warn(t4);
            t2.getAttribute($name);
            t2.removeAttribute($name);
          }
        }
        if (typeof node === "object" && node !== null && !!t1.$isTemplateElement)
          this.sanitizeTree$1(node.content);
        break;
      case 8:
      case 11:
      case 3:
      case 4:
        break;
      default:
        t1.remove$0(node);
    }
  }
},

_ValidatingTreeSanitizer_sanitizeTree_walk: {"": "Closure;this_0",
  call$1: function(node) {
    var child, nextChild;
    this.this_0.sanitizeNode$1(node);
    child = J.get$lastChild$x(node);
    for (; child != null; child = nextChild) {
      nextChild = child.previousSibling;
      this.call$1(child);
    }
  },
  $is_args1: true
}}],
["dart.dom.svg", "dart:svg", , P, {
FEBlendElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEBlendElement"},

FEColorMatrixElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEColorMatrixElement"},

FEComponentTransferElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEComponentTransferElement"},

FECompositeElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFECompositeElement"},

FEConvolveMatrixElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEConvolveMatrixElement"},

FEDiffuseLightingElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEDiffuseLightingElement"},

FEDisplacementMapElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEDisplacementMapElement"},

FEFloodElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEFloodElement"},

FEGaussianBlurElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEGaussianBlurElement"},

FEImageElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEImageElement"},

FEMergeElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEMergeElement"},

FEMorphologyElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEMorphologyElement"},

FEOffsetElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFEOffsetElement"},

FEPointLightElement: {"": "SvgElement;x=,y=", "%": "SVGFEPointLightElement"},

FESpecularLightingElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFESpecularLightingElement"},

FESpotLightElement: {"": "SvgElement;x=,y=", "%": "SVGFESpotLightElement"},

FETileElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFETileElement"},

FETurbulenceElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFETurbulenceElement"},

FilterElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGFilterElement"},

ForeignObjectElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGForeignObjectElement"},

GraphicsElement: {"": "SvgElement;", "%": "SVGAElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGEllipseElement|SVGGElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement|SVGSwitchElement;SVGGraphicsElement"},

ImageElement0: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGImageElement"},

MaskElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGMaskElement"},

PatternElement: {"": "SvgElement;height=,width=,x=,y=", "%": "SVGPatternElement"},

RectElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGRectElement"},

ScriptElement: {"": "SvgElement;", $isScriptElement: true, "%": "SVGScriptElement"},

SvgElement: {"": "Element;",
  set$innerHtml: function(receiver, value) {
    receiver.textContent = null;
    receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, value, null, null));
  },
  createFragment$3$treeSanitizer$validator: function(receiver, svg, treeSanitizer, validator) {
    var t1, html, fragment, svgFragment, root;
    t1 = [];
    H.setRuntimeTypeInfo(t1, [W.NodeValidator]);
    validator = new W.NodeValidatorBuilder(t1);
    t1 = validator._validators;
    t1.push(W._Html5NodeValidator$(null));
    t1.push(W._TemplatingNodeValidator$());
    t1.push(new W._SvgNodeValidator());
    treeSanitizer = new W._ValidatingTreeSanitizer(validator);
    html = "<svg version=\"1.1\">" + H.S(svg) + "</svg>";
    fragment = J.createFragment$2$treeSanitizer$x(document.body, html, treeSanitizer);
    svgFragment = document.createDocumentFragment();
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    root = t1.get$single(t1);
    for (; t1 = root.firstChild, t1 != null;)
      svgFragment.appendChild(t1);
    return svgFragment;
  },
  $isSvgElement: true,
  "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDescElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGMissingGlyphElement|SVGRadialGradientElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGVKernElement|SVGViewElement;SVGElement"
},

SvgSvgElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGSVGElement"},

TextContentElement: {"": "GraphicsElement;", "%": "SVGTextPathElement;SVGTextContentElement"},

TextPositioningElement: {"": "TextContentElement;x=,y=", "%": "SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"},

UseElement: {"": "GraphicsElement;height=,width=,x=,y=", "%": "SVGUseElement"}}],
["dart.isolate", "dart:isolate", , P, {
ReceivePort: {"": "Object;"}}],
["dart.math", "dart:math", , P, {
_JenkinsSmiHash_combine0: function(hash, value) {
  hash = 536870911 & hash + value;
  hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
  return (hash ^ C.JSInt_methods.$shr(hash, 6)) >>> 0;
},

_JenkinsSmiHash_finish0: function(hash) {
  hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash = (hash ^ C.JSInt_methods.$shr(hash, 11)) >>> 0;
  return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
},

min: function(a, b) {
  if (a > b)
    return b;
  if (a < b)
    return a;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return (a + b) * a * b;
    if (a === 0 && C.JSInt_methods.get$isNegative(b) || isNaN(b))
      return b;
    return a;
  }
  return a;
},

max: function(a, b) {
  var t1;
  if (typeof a !== "number")
    throw H.wrapException(new P.ArgumentError(a));
  if (typeof b !== "number")
    throw H.wrapException(new P.ArgumentError(b));
  if (a > b)
    return a;
  if (a < b)
    return b;
  if (typeof b === "number") {
    if (typeof a === "number")
      if (a === 0)
        return a + b;
    if (C.JSNumber_methods.get$isNaN(b))
      return b;
    return a;
  }
  if (b === 0)
    t1 = a === 0 ? 1 / a < 0 : a < 0;
  else
    t1 = false;
  if (t1)
    return b;
  return a;
},

Point: {"": "Object;x>,y>",
  toString$0: function(_) {
    return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
  },
  $eq: function(_, other) {
    var t1, t2;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other !== "object" || other === null || !t1.$isPoint)
      return false;
    t1 = this.x;
    t2 = other.x;
    if (t1 == null ? t2 == null : t1 === t2) {
      t1 = this.y;
      t2 = other.y;
      t2 = t1 == null ? t2 == null : t1 === t2;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2;
    t1 = J.get$hashCode$(this.x);
    t2 = J.get$hashCode$(this.y);
    return P._JenkinsSmiHash_finish0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
  },
  $add: function(_, other) {
    var t1, t2, t3, t4;
    t1 = this.x;
    t2 = J.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = this.y;
    t2 = t2.get$y(other);
    if (typeof t4 !== "number")
      throw t4.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 + t3, t4 + t2);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $sub: function(_, other) {
    var t1, t2, t3, t4;
    t1 = this.x;
    t2 = J.getInterceptor$x(other);
    t3 = t2.get$x(other);
    if (typeof t1 !== "number")
      throw t1.$sub();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = this.y;
    t2 = t2.get$y(other);
    if (typeof t4 !== "number")
      throw t4.$sub();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 - t3, t4 - t2);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $mul: function(_, factor) {
    var t1, t2;
    t1 = this.x;
    if (typeof t1 !== "number")
      throw t1.$mul();
    if (typeof factor !== "number")
      throw H.iae(factor);
    t2 = this.y;
    if (typeof t2 !== "number")
      throw t2.$mul();
    t2 = new P.Point(t1 * factor, t2 * factor);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "Point", 0)]);
    return t2;
  },
  $isPoint: true
},

_RectangleBase: {"": "Object;",
  get$right: function(_) {
    var t1, t2;
    t1 = this.get$left(this);
    t2 = this.width;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    return t1 + t2;
  },
  get$bottom: function(_) {
    var t1, t2;
    t1 = this.get$top(this);
    t2 = this.height;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    return t1 + t2;
  },
  toString$0: function(_) {
    return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.top) + ") " + H.S(this.width) + " x " + H.S(this.height);
  },
  $eq: function(_, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    t1 = J.getInterceptor$x(other);
    if (typeof other !== "object" || other === null || !t1.$isRectangle)
      return false;
    t2 = this.get$left(this);
    t3 = t1.get$left(other);
    if (t2 == null ? t3 == null : t2 === t3) {
      t2 = this.top;
      t3 = t1.get$top(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = this.width;
        t3 = t1.get$width(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = this.height;
          t1 = t1.get$height(other);
          t1 = t2 == null ? t1 == null : t2 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode: function(_) {
    var t1, t2, t3, t4;
    t1 = J.get$hashCode$(this.get$left(this));
    t2 = J.get$hashCode$(this.top);
    t3 = J.get$hashCode$(this.width);
    t4 = J.get$hashCode$(this.height);
    return P._JenkinsSmiHash_finish0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
  },
  get$topLeft: function(_) {
    var t1 = this.get$left(this);
    t1 = new P.Point(t1, this.top);
    H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "_RectangleBase", 0)]);
    return t1;
  },
  get$topRight: function(_) {
    var t1, t2;
    t1 = this.get$left(this);
    t2 = this.width;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t2 = new P.Point(t1 + t2, this.top);
    H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(this, "_RectangleBase", 0)]);
    return t2;
  },
  get$bottomRight: function(_) {
    var t1, t2, t3, t4;
    t1 = this.get$left(this);
    t2 = this.width;
    if (typeof t1 !== "number")
      throw t1.$add();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    t3 = this.top;
    t4 = this.height;
    if (typeof t3 !== "number")
      throw t3.$add();
    if (typeof t4 !== "number")
      throw H.iae(t4);
    t4 = new P.Point(t1 + t2, t3 + t4);
    H.setRuntimeTypeInfo(t4, [H.getRuntimeTypeArgument(this, "_RectangleBase", 0)]);
    return t4;
  },
  get$bottomLeft: function(_) {
    var t1, t2, t3;
    t1 = this.get$left(this);
    t2 = this.top;
    t3 = this.height;
    if (typeof t2 !== "number")
      throw t2.$add();
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t3 = new P.Point(t1, t2 + t3);
    H.setRuntimeTypeInfo(t3, [H.getRuntimeTypeArgument(this, "_RectangleBase", 0)]);
    return t3;
  }
},

Rectangle: {"": "_RectangleBase;left>,top>,width>,height>", $isRectangle: true, $asRectangle: null, $as_RectangleBase: null}}],
["dart.typed_data", "dart:typed_data", , P, {
TypedData: {"": "Interceptor;",
  _invalidIndex$2: function(receiver, index, $length) {
    var t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$ge(index, $length))
      throw H.wrapException(P.RangeError$range(index, 0, $length));
    else
      throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
  },
  "%": "DataView;ArrayBufferView;TypedData_ListMixin|TypedData_ListMixin_FixedLengthListMixin|TypedData_ListMixin0|TypedData_ListMixin_FixedLengthListMixin0|TypedData_ListMixin1|TypedData_ListMixin_FixedLengthListMixin1|TypedData_ListMixin2|TypedData_ListMixin_FixedLengthListMixin2|TypedData_ListMixin3|TypedData_ListMixin_FixedLengthListMixin3|TypedData_ListMixin4|TypedData_ListMixin_FixedLengthListMixin4|TypedData_ListMixin5|TypedData_ListMixin_FixedLengthListMixin5|TypedData_ListMixin6|TypedData_ListMixin_FixedLengthListMixin6|TypedData_ListMixin7|TypedData_ListMixin_FixedLengthListMixin7|Int64List|Uint64List"
},

Float32List: {"": "TypedData_ListMixin_FixedLengthListMixin;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float32Array"
},

Float64List: {"": "TypedData_ListMixin_FixedLengthListMixin0;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSDouble];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Float64Array"
},

Int16List: {"": "TypedData_ListMixin_FixedLengthListMixin1;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int16Array"
},

Int32List: {"": "TypedData_ListMixin_FixedLengthListMixin2;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int32Array"
},

Int8List: {"": "TypedData_ListMixin_FixedLengthListMixin3;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Int8Array"
},

Uint16List: {"": "TypedData_ListMixin_FixedLengthListMixin4;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint16Array"
},

Uint32List: {"": "TypedData_ListMixin_FixedLengthListMixin5;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "Uint32Array"
},

Uint8ClampedList: {"": "TypedData_ListMixin_FixedLengthListMixin6;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": "CanvasPixelArray|Uint8ClampedArray"
},

Uint8List: {"": "TypedData_ListMixin_FixedLengthListMixin7;",
  get$length: function(receiver) {
    return C.JS_CONST_ZYJ(receiver);
  },
  $index: function(receiver, index) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    var t1 = C.JS_CONST_ZYJ(receiver);
    if (index >>> 0 != index || J.$ge$n(index, t1))
      this._invalidIndex$2(receiver, index, t1);
    receiver[index] = value;
  },
  $asList: function() {
    return [J.JSInt];
  },
  $isList: true,
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  "%": ";Uint8Array"
},

TypedData_ListMixin: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin: {"": "TypedData_ListMixin+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin0: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin0: {"": "TypedData_ListMixin0+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin1: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin1: {"": "TypedData_ListMixin1+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin2: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin2: {"": "TypedData_ListMixin2+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin3: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin3: {"": "TypedData_ListMixin3+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin4: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin4: {"": "TypedData_ListMixin4+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin5: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin5: {"": "TypedData_ListMixin5+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin6: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin6: {"": "TypedData_ListMixin6+FixedLengthListMixin;", $asList: null},

TypedData_ListMixin7: {"": "TypedData+ListMixin;", $isList: true, $asList: null, $isEfficientLength: true},

TypedData_ListMixin_FixedLengthListMixin7: {"": "TypedData_ListMixin7+FixedLengthListMixin;", $asList: null},

Int64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Int64List_BYTES_PER_ELEMENT",
}

},

Uint64List: {"": "TypedData;", $isList: true,
  $asList: function() {
    return [J.JSInt];
  },
  $isEfficientLength: true,
  $isJavaScriptIndexingBehavior: true,
  static: {
"": "Uint64List_BYTES_PER_ELEMENT",
}

}}],
["hellouxml", "hellouxml.dart", , U, {
main: function() {
  document.querySelector("#mainDiv");
  var app = new U.MainPage(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, false, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0, false, null, null, null, null);
  app.Application$0();
  app.init$0();
  app.initialize$1(window);
},

MainPage: {"": "Application;_host,_hostWidth,_hostHeight,_resources,_rootElement,_content,rootSurface,_scheduler,_mouseCaptureTarget,_modalElementStack,_modalLayoutHandler,_modalTint,_inputTs,_lastMouseMoveTime,_hasPendingMouseMove,_pendingEventDef,_pendingStageX,_pendingStageY,_pendingButtonDown,_pendingButton,_newMouseCursor,_newMouseSurface,_prevMouseSurface,_dragDropManager,_toolTips,_sharedMouseDownArgs,_sharedMouseArgs,_keyArgs,_mouseOverActiveList,_dragEnterList,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  init$0: function() {
    var label1 = new Q.Label(null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
    label1.UIElement$0();
    label1._cachedPadding = $.Margin_EMPTY;
    label1.setProperty$2(label1, $.UIElement_mouseEnabledProperty, false);
    label1.setProperty$2(label1, $.Label_textProperty, "hello World");
    this.set$content(this, label1);
  }
}},
1],
["html_common", "dart:html_common", , P, {
Device_isOpera: function() {
  if ($.Device__isOpera == null)
    $.Device__isOpera = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
  return $.Device__isOpera;
},

Device_isIE: function() {
  if ($.Device__isIE == null)
    $.Device__isIE = P.Device_isOpera() !== true && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
  return $.Device__isIE;
},

Device_isFirefox: function() {
  if ($.Device__isFirefox == null)
    $.Device__isFirefox = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0);
  return $.Device__isFirefox;
},

Device_isWebKit: function() {
  if ($.Device__isWebKit == null)
    $.Device__isWebKit = P.Device_isOpera() !== true && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
  return $.Device__isWebKit;
},

Device_cssPrefix: function() {
  if ($.Device__cachedCssPrefix == null)
    if (P.Device_isFirefox() === true)
      $.Device__cachedCssPrefix = "-moz-";
    else if (P.Device_isIE() === true)
      $.Device__cachedCssPrefix = "-ms-";
    else if (P.Device_isOpera() === true)
      $.Device__cachedCssPrefix = "-o-";
    else
      $.Device__cachedCssPrefix = "-webkit-";
  return $.Device__cachedCssPrefix;
}}],
["uxml", "package:uxml/uxml.dart", , Q, {
Action_getActiveActionList: function(element, property) {
  var t1, listMap;
  t1 = $.Action_activeActionMap;
  if (t1 == null)
    return;
  listMap = t1.$index(t1, element);
  if (listMap == null)
    return;
  return J.$index$asx(listMap, property);
},

Action_createActiveActionList: function(element, property) {
  var t1, listMap, activeActionList;
  if ($.Action_activeActionMap == null)
    $.Action_activeActionMap = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UxmlElement, [P.Map, Q.PropertyDefinition, Q.ActiveActionList]);
  t1 = $.Action_activeActionMap;
  listMap = t1.$index(t1, element);
  if (listMap == null) {
    listMap = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.PropertyDefinition, Q.ActiveActionList);
    t1 = $.Action_activeActionMap;
    t1.$indexSet(t1, element, listMap);
  }
  t1 = J.getInterceptor$asx(listMap);
  activeActionList = t1.$index(listMap, property);
  if (activeActionList == null) {
    activeActionList = Q.ActiveActionList$();
    t1.$indexSet(listMap, property, activeActionList);
  }
  return activeActionList;
},

Action_applyPropertyValue: function(action, element, property, value) {
  var activeActionList, t1;
  activeActionList = Q.Action_getActiveActionList(element, property);
  if (activeActionList == null)
    activeActionList = Q.Action_createActiveActionList(element, property);
  J.add$3$ax(activeActionList, action, element.getProperty$1(property), value);
  t1 = J.getInterceptor(value);
  if (typeof value === "object" && value !== null && !!t1.$isBrush)
    element.setProperty$2(element, property, null);
  element.setProperty$2(element, property, value);
},

Application_findResource: function(key, interfaceName) {
  var currentApp, t1;
  currentApp = $.Application__current;
  t1 = currentApp._resources._resources;
  return t1.$index(t1, key);
},

Application__registerApplication: function() {
  $.Application_mousePreviewEvent = new Q.EventDef("MousePreviewEvent", $.Route_DIRECT, null, null);
  $.Application_keyPreviewEvent = new Q.EventDef("KeyPreviewEvent", $.Route_DIRECT, null, null);
  $.CollectionChangedEvent_eventDef = new Q.EventDef("Changed", $.Route_DIRECT, null, null);
  $.ElementCollection_changedEvent = $.CollectionChangedEvent_eventDef;
  $.PropertyChangedEvent_changeEvent = new Q.EventDef("change", $.Route_DIRECT, null, null);
  Q.Color_initialize();
  $.Margin_EMPTY = new Q.Margin(0, 0, 0, 0);
  $.BorderRadius_EMPTY = Q.BorderRadius$uniform(0);
  $.Items_itemsChangedEvent = $.ElementCollection_changedEvent;
  Q.UxmlElement_registerElement();
  Q.Cursor_registerCursor();
  Q.FocusManager_registerFocusManager();
  Q.ClipboardData_registerClipboardData();
  Q.Controller_registerController();
  Q.Filter_registerFilter();
  Q.BevelFilter_registerBevelFilter();
  Q.DropShadowFilter_registerDropShadowFilter();
  Q.GlowFilter_registerGlowFilter();
  Q.UITransform_registerTransform();
  Q.UIElement_registerUIElement();
  Q.Shape_registerShape();
  Q.LineShape_registerLineShape();
  Q.RectShape_registerRectShape();
  $.EllipseShape_ellipseElementDef = Q.ElementRegistry_register("EllipseShape", $.Shape_shapeElementDef, null, null);
  Q.PathShape_registerPathShape();
  Q.Control_registerControl();
  Q.Label_registerLabel();
  Q.LabeledControl_registerLabeledControl();
  Q.Image_registerImage();
  Q.TextEdit_registerTextEdit();
  Q.TextBox_registerTextBox();
  Q.ContentContainer_registerContentContainer();
  Q.OverlayContainer_registerOverlayContainer();
  Q.Panel_registerPanel();
  Q.Popup_registerPopup();
  Q.Item_registerItem();
  Q.ItemsContainer_registerItemsContainer();
  Q.ValueRangeControl_registerValueRangeControl();
  Q.ProgressControl_registerProgressControl();
  Q.WaitIndicator_registerWaitIndicator();
  Q.Slider_registerSlider();
  Q.ScrollBar_registerScrollBar();
  Q.ScrollBox_registerScrollBox();
  Q.Button_registerButton();
  Q.CheckBox_registerCheckBox();
  Q.RadioButton_registerRadioButton();
  Q.DropDownButton_registerDropDownButton();
  Q.ListBase_registerListBase();
  $.ListBox_listboxElementDef = Q.ElementRegistry_register("ListBox", $.ListBase_listbaseElementDef, null, null);
  Q.ComboBox_registerComboBox();
  Q.TabControl_registerTabControl();
  $.UIElementContainer_uielementcontainerElementDef = Q.ElementRegistry_register("UIElementContainer", $.Control_controlElementDef, null, null);
  $.Group_groupElementDef = Q.ElementRegistry_register("Group", $.UIElementContainer_uielementcontainerElementDef, null, null);
  Q.PageControl_registerPageControl();
  Q.HBox_registerHBox();
  Q.VBox_registerVBox();
  Q.Canvas_registerCanvas();
  Q.DockBox_registerDockBox();
  Q.GridRow_registerGridRow();
  Q.GridColumn_registerGridColumn();
  Q.Grid_registerGrid();
  Q.SlideBox_registerSlideBox();
  Q.WrapBox_registerWrapBox();
  Q.DisclosureBox_registerDisclosureBox();
  Q.ToolTip_registerToolTip();
  Q.Command_registerCommand();
  $.Application_busyProperty = Q.ElementRegistry_registerProperty("busy", 4, 0, null, false);
  $.Application_applicationElementDef = Q.ElementRegistry_register("Application", null, [$.Application_busyProperty], [$.Application_mousePreviewEvent, $.Application_keyPreviewEvent]);
  Q.UpdateQueue_initialize();
},

BevelFilter_registerBevelFilter: function() {
  $.BevelFilter_alphaProperty = Q.ElementRegistry_registerProperty("alpha", 3, 0, null, 1);
  $.BevelFilter_angleProperty = Q.ElementRegistry_registerProperty("angle", 3, 0, null, 45);
  $.BevelFilter_blurXProperty = Q.ElementRegistry_registerProperty("blurX", 3, 0, null, 4);
  $.BevelFilter_blurYProperty = Q.ElementRegistry_registerProperty("blurY", 3, 0, null, 4);
  $.BevelFilter_distanceProperty = Q.ElementRegistry_registerProperty("distance", 3, 0, null, 4);
  $.BevelFilter_highlightColorProperty = Q.ElementRegistry_registerProperty("highlightColor", 6, 0, null, new Q.Color(4294967295, null));
  $.BevelFilter_shadowColorProperty = Q.ElementRegistry_registerProperty("shadowColor", 6, 0, null, new Q.Color(4278190080, null));
  $.BevelFilter_hideObjectProperty = Q.ElementRegistry_registerProperty("hideObject", 4, 0, null, false);
  $.BevelFilter_typeProperty = Q.ElementRegistry_registerProperty("type", 1, 0, null, "inner");
  $.BevelFilter_knockoutProperty = Q.ElementRegistry_registerProperty("knockout", 4, 0, null, false);
  $.BevelFilter_qualityProperty = Q.ElementRegistry_registerProperty("quality", 2, 0, null, 1);
  $.BevelFilter_strengthProperty = Q.ElementRegistry_registerProperty("strength", 3, 0, null, 1);
  $.BevelFilter_bevelfilterElementDef = Q.ElementRegistry_register("BevelFilter", $.Filter_filterElementDef, [$.BevelFilter_alphaProperty, $.BevelFilter_angleProperty, $.BevelFilter_blurXProperty, $.BevelFilter_blurYProperty, $.BevelFilter_distanceProperty, $.BevelFilter_highlightColorProperty, $.BevelFilter_shadowColorProperty, $.BevelFilter_typeProperty, $.BevelFilter_hideObjectProperty, $.BevelFilter_knockoutProperty, $.BevelFilter_qualityProperty, $.BevelFilter_strengthProperty], null);
},

Button_registerButton: function() {
  $.Button_isPressedProperty = Q.ElementRegistry_registerProperty("isPressed", 4, 0, null, false);
  $.Button_clickWhenPressedProperty = Q.ElementRegistry_registerProperty("clickWhenPressed", 4, 0, null, false);
  $.Button_updateFocusOnMouseDownProperty = Q.ElementRegistry_registerProperty("updateFocusOnMouseDown", 4, 0, null, true);
  $.Button_repeatRateProperty = Q.ElementRegistry_registerProperty("repeatRate", 2, 0, null, 0);
  $.Button_repeatDelayProperty = Q.ElementRegistry_registerProperty("repeatDelay", 2, 0, null, 250);
  $.Button_clickEvent = new Q.EventDef("Click", $.Route_DIRECT, null, null);
  $.Button_buttonElementDef = Q.ElementRegistry_register("Button", $.ContentContainer_contentcontainerElementDef, [$.Button_isPressedProperty, $.Button_clickWhenPressedProperty, $.Button_repeatRateProperty, $.Button_repeatDelayProperty], [$.Button_clickEvent]);
  $.Cursor_cursorProperty.overrideDefaultValue$2($.Button_buttonElementDef, $.Cursor_BUTTON);
},

CheckBox_registerCheckBox: function() {
  $.CheckBox_isCheckedProperty = Q.ElementRegistry_registerProperty("IsChecked", 4, 0, null, false);
  $.CheckBox_checkboxElementDef = Q.ElementRegistry_register("CheckBox", $.Button_buttonElementDef, [$.CheckBox_isCheckedProperty], null);
},

ClipboardData_registerClipboardData: function() {
  $.ClipboardData_loadDataEvent = new Q.EventDef("loaddata", $.Route_DIRECT, null, null);
  $.ClipboardData_clipboardElementDef = Q.ElementRegistry_register("ClipboardData", null, null, [$.ClipboardData_loadDataEvent]);
},

ComboBox__textChangeHandler: function(target, propDef, oldValue, newValue) {
  var i, t1, contentCont;
  target.get$items();
  for (i = 0; t1 = target.get$items(), C.JSInt_methods.$lt(i, t1.get$length(t1)); ++i) {
    t1 = target.get$items();
    t1.getItemAt$1(i);
    contentCont = t1.getItemAt$1(i);
    contentCont.get$content(contentCont);
  }
},

ComboBox__isOpenChangedHandler: function(target, propDef, oldValue, newValue) {
  target._updateText$1(target);
},

ComboBox_registerComboBox: function() {
  $.ComboBox_textProperty = Q.ElementRegistry_registerProperty("Text", 1, 8, Q.ComboBox__textChangeHandler$closure, "");
  $.ComboBox_isOpenProperty = Q.ElementRegistry_registerProperty("IsOpen", 4, 0, Q.ComboBox__isOpenChangedHandler$closure, false);
  $.ComboBox_editableProperty = Q.ElementRegistry_registerProperty("Editable", 4, 0, null, false);
  $.ComboBox_maxDropDownHeightProperty = Q.ElementRegistry_registerProperty("MaxDropDownHeight", 3, 0, null, 1024);
  $.ComboBox_comboboxElementDef = Q.ElementRegistry_register("ComboBox", $.ListBase_listbaseElementDef, [$.ComboBox_textProperty, $.ComboBox_isOpenProperty, $.ComboBox_editableProperty, $.ComboBox_maxDropDownHeightProperty], null);
  $.Cursor_cursorProperty.overrideDefaultValue$2($.ComboBox_comboboxElementDef, $.Cursor_BUTTON);
},

Command_registerCommand: function() {
  $.Command_commandEvent = new Q.EventDef("Command", $.Route_BUBBLE, null, null);
  $.Command_enabledProperty = Q.ElementRegistry_registerProperty("enabled", 4, 0, null, true);
  $.Command_commandElementDef = Q.ElementRegistry_register("Command", null, [$.Command_enabledProperty], [$.Command_commandEvent]);
},

ContentContainer__contentChangedHandler: function(target, property, oldValue, newValue) {
  target.updateContent$1(newValue);
},

ContentContainer_registerContentContainer: function() {
  $.ContentContainer_checkId = 100;
  $.ContentContainer_contentProperty = Q.ElementRegistry_registerProperty("content", 0, 0, Q.ContentContainer__contentChangedHandler$closure, null);
  $.ContentContainer_contentcontainerElementDef = Q.ElementRegistry_register("ContentContainer", $.Control_controlElementDef, [$.ContentContainer_contentProperty], null);
},

Control__borderRadiusChangedHandler: function(target, property, oldValue, newValue) {
  var surface = target.get$_hostSurface();
  if (surface != null)
    surface.setBorderRadius$1(newValue);
},

Control__paddingChangedHandler: function(target, property, oldValue, newValue) {
  target.set$_cachedPadding(J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT) ? null : newValue);
},

Control__fontChangedHandler: function(target, property, oldValue, newValue) {
  var t1 = J.getInterceptor(target);
  if (typeof target === "object" && target !== null && !!t1.$isControl)
    target.onFontChanged$0();
},

Control_registerControl: function() {
  $.Control_DEFAULT_TEXT_COLOR = new Q.Color(4278190080, null);
  $.Control_borderRadiusProperty = Q.ElementRegistry_registerProperty("borderRadius", 9, 4, Q.Control__borderRadiusChangedHandler$closure, null);
  $.Control_fontNameProperty = Q.ElementRegistry_registerProperty("fontName", 1, 9, Q.Control__fontChangedHandler$closure, "Helvetica");
  $.Control_backgroundProperty = Q.ElementRegistry_registerProperty("background", 7, 4, null, null);
  $.Control_fontSizeProperty = Q.ElementRegistry_registerProperty("fontSize", 3, 9, Q.Control__fontChangedHandler$closure, 10);
  $.Control_fontBoldProperty = Q.ElementRegistry_registerProperty("fontBold", 4, 9, Q.Control__fontChangedHandler$closure, false);
  $.Control_textColorProperty = Q.ElementRegistry_registerProperty("textColor", 6, 1, Q.Control__fontChangedHandler$closure, new Q.Color(4278190080, null));
  $.Control_linkColorProperty = Q.ElementRegistry_registerProperty("linkColor", 6, 1, Q.Control__fontChangedHandler$closure, new Q.Color(4278190284, null));
  $.Control_chromeProperty = Q.ElementRegistry_registerProperty("chrome", 10, 0, new Q.Control_registerControl_closure(), null);
  $.Control_paddingProperty = Q.ElementRegistry_registerProperty("padding", 9, 8, Q.Control__paddingChangedHandler$closure, $.Margin_EMPTY);
  $.Control_promptMessageProperty = Q.ElementRegistry_registerProperty("promptMessage", 1, 0, null, null);
  $.Control_errorMessageProperty = Q.ElementRegistry_registerProperty("errorMessage", 1, 0, null, null);
  $.Control_controlElementDef = Q.ElementRegistry_register("Control", $.UIElement_elementDef, [$.Control_backgroundProperty, $.Control_borderRadiusProperty, $.Control_fontNameProperty, $.Control_fontSizeProperty, $.Control_fontBoldProperty, $.Control_textColorProperty, $.Control_chromeProperty, $.Control_paddingProperty, $.Control_promptMessageProperty, $.Control_errorMessageProperty], null);
},

Controller_registerController: function() {
  $.Controller_controllerProperty = Q.ElementRegistry_registerProperty("controller", 0, 3, null, null);
  $.Controller_controllerElementDef = Q.ElementRegistry_register("Controller", $.UxmlElement_baseElementDef, [$.Controller_controllerProperty], null);
},

DisclosureBox__isOpenChangedHandler: function(target, propDef, oldValue, newValue) {
  target._isOpenChanged$1(newValue);
},

DisclosureBox__fadeChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  if (newValue === true)
    t1 = target.get$isOpen() ? 1 : 0;
  else
    t1 = 1;
  J.set$opacity$x(target, t1);
},

DisclosureBox__transitionChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  target.set$openTransition(newValue);
  t1 = target.get$transform(target);
  t1.set$scaleX(1);
  t1.set$scaleY(1);
  t1.set$translateY(0);
  target.invalidateSize$0();
},

DisclosureBox_registerDisclosureBox: function() {
  $.DisclosureBox_isOpenProperty = Q.ElementRegistry_registerProperty("IsOpen", 4, 0, Q.DisclosureBox__isOpenChangedHandler$closure, false);
  $.DisclosureBox_fadeProperty = Q.ElementRegistry_registerProperty("Fade", 4, 0, Q.DisclosureBox__fadeChangedHandler$closure, false);
  $.DisclosureBox_transitionProperty = Q.ElementRegistry_registerProperty("Transition", 2, 0, Q.DisclosureBox__transitionChangedHandler$closure, 1);
  $.DisclosureBox_durationProperty = Q.ElementRegistry_registerProperty("Duration", 2, 0, null, 150);
  $.DisclosureBox_disclosureboxElementDef = Q.ElementRegistry_register("DisclosureBox", $.UIElementContainer_uielementcontainerElementDef, [$.DisclosureBox_isOpenProperty, $.DisclosureBox_fadeProperty], null);
},

DockBox_registerDockBox: function() {
  $.DockBox_dockProperty = Q.ElementRegistry_registerProperty("Dock", 11, 18, null, 0);
  $.DockBox_dockboxElementDef = Q.ElementRegistry_register("DockBox", $.UIElementContainer_uielementcontainerElementDef, [$.DockBox_dockProperty], null);
},

DropDownButton__popupContentChanged: function(target, propDef, oldValue, newValue) {
},

DropDownButton_registerDropDownButton: function() {
  $.DropDownButton_isOpenProperty = Q.ElementRegistry_registerProperty("isOpen", 4, 0, null, false);
  $.DropDownButton_popupProperty = Q.ElementRegistry_registerProperty("popup", 5, 0, Q.DropDownButton__popupContentChanged$closure, null);
  $.DropDownButton_dropdownbuttonElementDef = Q.ElementRegistry_register("DropDownButton", $.Button_buttonElementDef, [$.DropDownButton_isOpenProperty, $.DropDownButton_popupProperty], null);
},

DropShadowFilter_registerDropShadowFilter: function() {
  $.DropShadowFilter_alphaProperty = Q.ElementRegistry_registerProperty("alpha", 3, 0, null, 1);
  $.DropShadowFilter_angleProperty = Q.ElementRegistry_registerProperty("angle", 3, 0, null, 45);
  $.DropShadowFilter_blurXProperty = Q.ElementRegistry_registerProperty("blurX", 3, 0, null, 4);
  $.DropShadowFilter_blurYProperty = Q.ElementRegistry_registerProperty("blurY", 3, 0, null, 4);
  $.DropShadowFilter_distanceProperty = Q.ElementRegistry_registerProperty("distance", 3, 0, null, 4);
  $.DropShadowFilter_colorProperty = Q.ElementRegistry_registerProperty("color", 6, 0, null, new Q.Color(4278190080, null));
  $.DropShadowFilter_hideObjectProperty = Q.ElementRegistry_registerProperty("hideObject", 4, 0, null, false);
  $.DropShadowFilter_innerProperty = Q.ElementRegistry_registerProperty("inner", 4, 0, null, false);
  $.DropShadowFilter_knockoutProperty = Q.ElementRegistry_registerProperty("knockout", 4, 0, null, false);
  $.DropShadowFilter_qualityProperty = Q.ElementRegistry_registerProperty("quality", 2, 0, null, 1);
  $.DropShadowFilter_strengthProperty = Q.ElementRegistry_registerProperty("strength", 3, 0, null, 1);
  $.DropShadowFilter_dropshadowfilterElementDef = Q.ElementRegistry_register("DropShadowFilter", $.Filter_filterElementDef, [$.DropShadowFilter_alphaProperty, $.DropShadowFilter_angleProperty, $.DropShadowFilter_blurXProperty, $.DropShadowFilter_blurYProperty, $.DropShadowFilter_distanceProperty, $.DropShadowFilter_colorProperty, $.DropShadowFilter_innerProperty, $.DropShadowFilter_hideObjectProperty, $.DropShadowFilter_knockoutProperty, $.DropShadowFilter_qualityProperty, $.DropShadowFilter_strengthProperty], null);
},

ElementRegistry_register: function(elementName, parentElement, properties, eventList) {
  var def, p, e, t1, t2;
  if ($.ElementRegistry__elements == null) {
    Q.Route__initRoute();
    Q.PropertyDefaults__initDefaults();
    Q.PropertyCache__registerPropertyCache();
    $.ElementRegistry__elements = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, Q.ElementDef);
  }
  def = new Q.ElementDef(null, null, null, null);
  def.name = elementName;
  def.parentDef = parentElement;
  if (properties != null)
    for (p = 0; p < properties.length; ++p)
      def.addProperty$1(properties[p]);
  if (eventList != null)
    for (e = 0; e < eventList.length; ++e) {
      t1 = eventList[e];
      if (def._events == null) {
        t2 = [];
        t2.$builtinTypeInfo = [Q.EventDef];
        def._events = t2;
      }
      def._events.push(t1);
    }
  t1 = $.ElementRegistry__elements;
  t1.$indexSet(t1, elementName, def);
  return def;
},

ElementRegistry_registerProperty: function($name, dataType, propertyFlags, handler, defaultValue) {
  var propDef = Q.PropertyDefinition$($name, dataType, propertyFlags, handler, defaultValue);
  if ((propertyFlags & 2) !== 0)
    $.UxmlElement_baseElementDef.addProperty$1(propDef);
  return propDef;
},

PropertyDefaults__initDefaults: function() {
  if ($.PropertyDefaults_NO_DEFAULT == null) {
    $.PropertyDefaults_NO_DEFAULT = [];
    $.PropertyDefaults_NULL_VALUE = [];
  }
},

Filter_registerFilter: function() {
  $.Filter_changedEvent = new Q.EventDef("Changed", $.Route_DIRECT, null, null);
  $.Filter_filterElementDef = Q.ElementRegistry_register("Filter", $.UxmlElement_baseElementDef, null, [$.Filter_changedEvent]);
},

Grid__childLocationChangedHandler: function(target, property, oldValue, newValue) {
  target.get$visualParent();
},

Grid_registerGrid: function() {
  $.Grid_rowProperty = Q.ElementRegistry_registerProperty("row", 2, 2, Q.Grid__childLocationChangedHandler$closure, 0);
  $.Grid_columnProperty = Q.ElementRegistry_registerProperty("column", 2, 2, Q.Grid__childLocationChangedHandler$closure, 0);
  $.Grid_cellPaddingProperty = Q.ElementRegistry_registerProperty("cellPadding", 3, 24, null, 0);
  $.Grid_gridElementDef = Q.ElementRegistry_register("Grid", $.UIElementContainer_uielementcontainerElementDef, [$.Grid_rowProperty, $.Grid_columnProperty, $.Grid_cellPaddingProperty], null);
},

GridColumn__widthChangedHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT))
    target.set$lengthDefined(false);
  else {
    target.set$_uxml$_length(newValue);
    target.set$lengthDefined(true);
  }
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridColumn__maxWidthChangedHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT))
    target.set$maxLengthDefined(false);
  else
    J.set$maxLength$x(target, newValue);
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridColumn__minWidthChangedHandler: function(target, property, oldValue, newValue) {
  var t1;
  target.set$minLength(J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT) ? 0 : newValue);
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridColumn_registerGridColumn: function() {
  $.GridColumn_minWidthProperty = Q.ElementRegistry_registerProperty("minWidth", 3, 0, Q.GridColumn__minWidthChangedHandler$closure, 0);
  $.GridColumn_maxWidthProperty = Q.ElementRegistry_registerProperty("maxWidth", 3, 0, Q.GridColumn__maxWidthChangedHandler$closure, 0);
  $.GridColumn_widthProperty = Q.ElementRegistry_registerProperty("width", 3, 0, Q.GridColumn__widthChangedHandler$closure, 0);
  $.GridColumn_gridcolumnElementDef = Q.ElementRegistry_register("GridColumn", $.UxmlElement_baseElementDef, [$.GridColumn_minWidthProperty, $.GridColumn_maxWidthProperty, $.GridColumn_widthProperty], null);
},

GridRow__heightChangeHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT))
    target.set$lengthDefined(false);
  else
    J.set$length$asx(target, newValue);
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridRow__maxHeightChangeHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT))
    target.set$maxLengthDefined(false);
  else
    J.set$maxLength$x(target, newValue);
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridRow__minHeightChangeHandler: function(target, property, oldValue, newValue) {
  var t1;
  target.set$minLength(J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT) ? 0 : newValue);
  t1 = target.get$owner();
  t1._gridDefChanged$0();
},

GridRow_registerGridRow: function() {
  $.GridRow_minHeightProperty = Q.ElementRegistry_registerProperty("minHeight", 3, 0, Q.GridRow__minHeightChangeHandler$closure, 0);
  $.GridRow_maxHeightProperty = Q.ElementRegistry_registerProperty("maxHeight", 3, 0, Q.GridRow__maxHeightChangeHandler$closure, 0);
  $.GridRow_heightProperty = Q.ElementRegistry_registerProperty("height", 3, 0, Q.GridRow__heightChangeHandler$closure, 0);
  $.GridRow_gridrowElementDef = Q.ElementRegistry_register("GridRow", $.UxmlElement_baseElementDef, [$.GridRow_minHeightProperty, $.GridRow_maxHeightProperty, $.GridRow_heightProperty], null);
},

HBox_registerHBox: function() {
  $.HBox_spacingProperty = Q.ElementRegistry_registerProperty("spacing", 3, 24, null, 0);
  $.HBox_hBoxElementDef = Q.ElementRegistry_register("HBox", $.UIElementContainer_uielementcontainerElementDef, [$.HBox_spacingProperty], null);
},

HtmlSanitizer_sanitize: function(html, useWhiteList) {
  var t1, t2, sanitized, segments, i, segment, tagEnd, tagStart, tag, isValidTag, str;
  t1 = J.getInterceptor$asx(html);
  if (t1.indexOf$1(html, "<") === -1)
    return html;
  if ($.HtmlSanitizer_TAG_WHITELIST_SET == null) {
    t2 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
    t2.addAll$1(t2, C.List_Qa6);
    $.HtmlSanitizer_TAG_WHITELIST_SET = t2;
  }
  sanitized = new P.StringBuffer("");
  sanitized._contents = "";
  segments = t1.split$1(html, "<");
  for (i = 0; i < segments.length; ++i) {
    segment = segments[i];
    if (i === 0) {
      t1 = Q.HtmlSanitizer__htmlEscapeAllowEntities(segment);
      sanitized._contents = sanitized._contents + t1;
      continue;
    }
    t1 = J.getInterceptor$asx(segment);
    tagEnd = t1.indexOf$1(segment, ">");
    if (tagEnd > 0) {
      tagStart = J.$eq(t1.$index(segment, 0), "/") ? 1 : 0;
      tag = t1.substring$2(segment, tagStart, tagEnd);
      if (useWhiteList) {
        t2 = $.HtmlSanitizer_TAG_WHITELIST_SET;
        t2 = t2.contains$1(t2, tag);
      } else
        t2 = false;
      isValidTag = t2 && true;
    } else {
      tagStart = 0;
      tag = null;
      isValidTag = false;
    }
    if (isValidTag) {
      if (tagStart === 0)
        sanitized._contents = sanitized._contents + "<";
      else
        sanitized._contents = sanitized._contents + "</";
      str = typeof tag === "string" ? tag : tag;
      sanitized._contents = sanitized._contents + str;
      sanitized._contents = sanitized._contents + ">";
      t1 = Q.HtmlSanitizer__htmlEscapeAllowEntities(t1.substring$1(segment, tagEnd + 1));
      sanitized._contents = sanitized._contents + t1;
    } else {
      sanitized._contents = sanitized._contents + "&lt;";
      t1 = Q.HtmlSanitizer__htmlEscapeAllowEntities(segment);
      sanitized._contents = sanitized._contents + t1;
    }
  }
  return sanitized._contents;
},

HtmlSanitizer__htmlEscapeAllowEntities: function(text) {
  var escaped, segments, i, segment, t1, entityEnd, t2, t3;
  escaped = new P.StringBuffer("");
  escaped._contents = "";
  segments = J.split$1$s(text, "&");
  for (i = 0; i < segments.length; ++i) {
    segment = segments[i];
    if (i === 0) {
      t1 = J.replaceAll$2$s(segment, "&", "&amp;");
      t1 = H.stringReplaceAllUnchecked(t1, "<", "&lt;");
      t1 = H.stringReplaceAllUnchecked(t1, ">", "&gt;");
      t1 = H.stringReplaceAllUnchecked(t1, "\"", "&quot;");
      t1 = H.stringReplaceAllUnchecked(t1, "'", "&apos;");
      escaped._contents = escaped._contents + t1;
      continue;
    }
    t1 = J.getInterceptor$asx(segment);
    entityEnd = t1.indexOf$1(segment, ";");
    if (entityEnd > 0) {
      t2 = $.get$HtmlSanitizer_HTML_ENTITY_REGEX();
      t3 = t1.substring$2(segment, 0, entityEnd);
      t2 = t2._nativeRegExp;
      t2 = t2.test(t3);
    } else
      t2 = false;
    if (t2) {
      escaped._contents = escaped._contents + "&";
      t2 = entityEnd + 1;
      t1 = t1.substring$2(segment, 0, t2);
      escaped._contents = escaped._contents + t1;
      t1 = C.JSString_methods.replaceAll$2(C.JSString_methods.substring$1(segment, t2), "&", "&amp;");
      t1 = H.stringReplaceAllUnchecked(t1, "<", "&lt;");
      t1 = H.stringReplaceAllUnchecked(t1, ">", "&gt;");
      t1 = H.stringReplaceAllUnchecked(t1, "\"", "&quot;");
      t1 = H.stringReplaceAllUnchecked(t1, "'", "&apos;");
      escaped._contents = escaped._contents + t1;
    } else {
      escaped._contents = escaped._contents + "&amp;";
      t1 = t1.replaceAll$2(segment, "&", "&amp;");
      t1 = H.stringReplaceAllUnchecked(t1, "<", "&lt;");
      t1 = H.stringReplaceAllUnchecked(t1, ">", "&gt;");
      t1 = H.stringReplaceAllUnchecked(t1, "\"", "&quot;");
      t1 = H.stringReplaceAllUnchecked(t1, "'", "&apos;");
      escaped._contents = escaped._contents + t1;
    }
  }
  return escaped._contents;
},

Image__imageSourceChangeHandler: function(target, property, oldValue, newValue) {
  if (target.get$_hostSurface() != null)
    target._loadImageFromSource$2(newValue, false);
},

Image_registerImage: function() {
  $.Image_sourceProperty = Q.ElementRegistry_registerProperty("source", 0, 0, Q.Image__imageSourceChangeHandler$closure, null);
  $.Image_scaleModeProperty = Q.ElementRegistry_registerProperty("scaleMode", 12, 4, null, 0);
  $.Image_loadedProperty = Q.ElementRegistry_registerProperty("loaded", 4, 0, null, false);
  $.Image_tileProperty = Q.ElementRegistry_registerProperty("tile", 4, 4, null, false);
  $.Image_monoChromeProperty = Q.ElementRegistry_registerProperty("monoChrome", 6, 4, null, null);
  $.Image_loadCompletedEvent = new Q.EventDef("loadCompleted", $.Route_BUBBLE, null, null);
  $.Image_loadErrorEvent = new Q.EventDef("loadError", $.Route_BUBBLE, null, null);
  $.Image_imageElementDef = Q.ElementRegistry_register("Image", $.Control_controlElementDef, [$.Image_sourceProperty, $.Image_scaleModeProperty, $.Image_loadedProperty, $.Image_tileProperty, $.Image_monoChromeProperty], [$.Image_loadCompletedEvent]);
},

Item_registerItem: function() {
  $.Item_isPressedProperty = Q.ElementRegistry_registerProperty("isPressed", 4, 0, null, false);
  $.Item_itemElementDef = Q.ElementRegistry_register("Item", $.ContentContainer_contentcontainerElementDef, [$.Item_isPressedProperty], null);
},

ItemsContainer__itemsChangedHandler: function(target, property, oldValue, newValue) {
  target._setSource$1(newValue);
},

ItemsContainer__itemChromeChangedHandler: function(target, property, oldValue, newValue) {
  target._onItemChromeChanged$1(newValue);
},

ItemsContainer__containerChromeChangeHandler: function(target, property, oldValue, newValue) {
  target._onContainerChromeChanged$1(newValue);
},

ItemsContainer_registerItemsContainer: function() {
  $.ItemsContainer_itemsProperty = Q.ElementRegistry_registerProperty("items", 0, 0, Q.ItemsContainer__itemsChangedHandler$closure, null);
  $.ItemsContainer_isFirstProperty = Q.ElementRegistry_registerProperty("isFirst", 4, 2, null, false);
  $.ItemsContainer_isLastProperty = Q.ElementRegistry_registerProperty("isLast", 4, 2, null, false);
  $.ItemsContainer_containerChromeProperty = Q.ElementRegistry_registerProperty("containerChrome", 10, 0, Q.ItemsContainer__containerChromeChangeHandler$closure, null);
  $.ItemsContainer_itemChromeProperty = Q.ElementRegistry_registerProperty("itemChrome", 10, 0, Q.ItemsContainer__itemChromeChangedHandler$closure, null);
  $.ItemsContainer_isAlternateRowProperty = Q.ElementRegistry_registerProperty("isAlternateRow", 4, 2, null, false);
  $.ItemsContainer_itemsContainerElementDef = Q.ElementRegistry_register("ItemsContainer", $.Control_controlElementDef, [$.ItemsContainer_itemsProperty, $.ItemsContainer_isFirstProperty, $.ItemsContainer_isLastProperty, $.ItemsContainer_containerChromeProperty, $.ItemsContainer_itemChromeProperty, $.ItemsContainer_isAlternateRowProperty], []);
},

LabeledControl_registerLabeledControl: function() {
  $.LabeledControl_labelProperty = Q.ElementRegistry_registerProperty("label", 0, 0, null, null);
  $.LabeledControl_contentProperty = Q.ElementRegistry_registerProperty("content", 0, 0, null, null);
  $.LabeledControl_pictureProperty = Q.ElementRegistry_registerProperty("picture", 5, 0, null, null);
  $.LabeledControl_labeledcontrolElementDef = Q.ElementRegistry_register("LabeledControl", $.Control_controlElementDef, [$.LabeledControl_contentProperty, $.LabeledControl_labelProperty, $.LabeledControl_pictureProperty], null);
},

LineShape_registerLineShape: function() {
  $.LineShape_xFromProperty = Q.ElementRegistry_registerProperty("XFrom", 3, 12, null, 0);
  $.LineShape_yFromProperty = Q.ElementRegistry_registerProperty("YFrom", 3, 12, null, 0);
  $.LineShape_xToProperty = Q.ElementRegistry_registerProperty("XTo", 3, 12, null, 0);
  $.LineShape_yToProperty = Q.ElementRegistry_registerProperty("YTo", 3, 12, null, 0);
  $.LineShape_lineShapeElementDef = Q.ElementRegistry_register("LineShape", $.Shape_shapeElementDef, [$.LineShape_xFromProperty, $.LineShape_yFromProperty, $.LineShape_xToProperty, $.LineShape_yToProperty], null);
},

ListBase__itemsChangedHandler: function(target, property, oldValue, newValue) {
  target._itemsChanged$1(newValue);
},

ListBase__selectedIndexChangedHandler: function(target, property, oldValue, newValue) {
  target._onSelectedIndexChanged$2(oldValue, newValue);
},

ListBase__selectedItemChangedHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (newValue == null)
    J.set$selectedIndex$x(target, -1);
  else {
    t1 = target.get$items();
    target.set$selectedIndex(target, t1.indexOf$1(t1, newValue));
  }
},

ListBase__sourceChangedHandler: function(target, property, oldValue, newValue) {
  var t1, old, i, t2, t3, m, l;
  t1 = J.getInterceptor$asx(oldValue);
  if ((typeof oldValue !== "object" || oldValue === null || !t1.$isModel) && oldValue != null) {
    old = new Q.Model(null, null, null, false, false, "");
    old._properties = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Object);
    i = 0;
    while (true) {
      t2 = t1.get$length(oldValue);
      if (typeof t2 !== "number")
        throw H.iae(t2);
      if (!(i < t2))
        break;
      t2 = t1.$index(oldValue, i);
      if (old._children == null)
        old._children = [];
      old._children.push(t2);
      old._raiseChangedEvent$3(old._children.length - 1, 1, 1);
      ++i;
    }
    oldValue = old;
  }
  t1 = J.getInterceptor$x(target);
  t2 = t1.get$source(target);
  t3 = J.getInterceptor(t2);
  if (typeof t2 === "object" && t2 !== null && !!t3.$isModel)
    target._refreshItemsFromModel$2(oldValue, t1.get$source(target));
  else {
    t2 = t1.get$source(target);
    t3 = J.getInterceptor(t2);
    if (typeof t2 === "object" && t2 !== null && (t2.constructor === Array || !!t3.$isList)) {
      P.print("! Warning: setting list.source to List<T> deprecated");
      P.print(target);
      m = new Q.Model(null, null, null, false, false, "");
      m._properties = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Object);
      l = t1.get$source(target);
      t1 = J.getInterceptor$asx(l);
      i = 0;
      while (true) {
        t2 = t1.get$length(l);
        if (typeof t2 !== "number")
          throw H.iae(t2);
        if (!(i < t2))
          break;
        t2 = t1.$index(l, i);
        if (m._children == null)
          m._children = [];
        m._children.push(t2);
        m._raiseChangedEvent$3(m._children.length - 1, 1, 1);
        ++i;
      }
      target._refreshItemsFromModel$2(oldValue, m);
    }
  }
},

ListBase__listDataChangedHandler: function(target, property, oldValue, newValue) {
  if (target.overridesProperty$1($.UxmlElement_dataProperty))
    target._refreshItemsFromModel$2(oldValue, target.get$data(target));
},

ListBase__selectedPropChangedHandler: function(target, property, oldValue, newValue) {
  Q.ListBase_containerFromChild(target);
},

ListBase_containerFromChild: function(element) {
  for (; element != null;)
    element = J.get$parent$x(element);
  return;
},

ListBase_registerListBase: function() {
  $.ListBase_itemsProperty = Q.ElementRegistry_registerProperty("items", 0, 0, Q.ListBase__itemsChangedHandler$closure, null);
  $.ListBase_selectedItemsProperty = Q.ElementRegistry_registerProperty("selectedItems", 0, 0, null, null);
  $.ListBase_sourceProperty = Q.ElementRegistry_registerProperty("source", 0, 0, Q.ListBase__sourceChangedHandler$closure, null);
  $.ListBase_multiSelectProperty = Q.ElementRegistry_registerProperty("multiSelect", 4, 0, null, false);
  $.ListBase_itemChromeProperty = Q.ElementRegistry_registerProperty("itemChrome", 10, 0, null, null);
  $.ListBase_containerChromeProperty = Q.ElementRegistry_registerProperty("containerChrome", 10, 0, null, null);
  $.ListBase_selectedProperty = Q.ElementRegistry_registerProperty("selected", 4, 2, Q.ListBase__selectedPropChangedHandler$closure, false);
  $.ListBase_selectedItemProperty = Q.ElementRegistry_registerProperty("selectedItem", 0, 0, Q.ListBase__selectedItemChangedHandler$closure, null);
  $.ListBase_selectedIndexProperty = Q.ElementRegistry_registerProperty("selectedIndex", 2, 0, Q.ListBase__selectedIndexChangedHandler$closure, -1);
  $.ListBase_selectionChangedEvent = new Q.EventDef("selectionChanged", $.Route_BUBBLE, null, null);
  $.ListBase_listbaseElementDef = Q.ElementRegistry_register("ListBase", $.Control_controlElementDef, [$.ListBase_itemsProperty, $.ListBase_sourceProperty, $.ListBase_multiSelectProperty, $.ListBase_itemChromeProperty, $.ListBase_containerChromeProperty, $.ListBase_selectedProperty, $.ListBase_selectedItemProperty, $.ListBase_selectedItemsProperty, $.ListBase_selectedIndexProperty], [$.ListBase_selectionChangedEvent]);
  $.UxmlElement_dataProperty.overrideCallback$2($.ListBase_listbaseElementDef, Q.ListBase__listDataChangedHandler$closure);
},

PageControl__currentPageChangedHandler: function(target, property, oldValue, newValue) {
  target.onPageChanged$1(newValue);
},

PageControl__pageKeyChangedHandler: function(target, property, oldValue, newValue) {
  var element, t1;
  for (element = target; t1 = element == null, !t1;)
    element = J.get$parent$x(element);
  if (t1)
    return;
},

PageControl_registerPageControl: function() {
  $.PageControl_currentPageProperty = Q.ElementRegistry_registerProperty("currentPage", 1, 0, Q.PageControl__currentPageChangedHandler$closure, "");
  $.PageControl_transitionProperty = Q.ElementRegistry_registerProperty("transition", 2, 0, null, "default");
  $.PageControl_pageKeyProperty = Q.ElementRegistry_registerProperty("pageKey", 1, 0, Q.PageControl__pageKeyChangedHandler$closure, "");
  $.PageControl_pageActiveProperty = Q.ElementRegistry_registerProperty("pageActive", 4, 2, null, false);
  $.PageControl_pageChangingEvent = new Q.EventDef("PageChanging", $.Route_DIRECT, null, null);
  $.PageControl_pageChangedEvent = new Q.EventDef("PageChanged", $.Route_DIRECT, null, null);
  $.PageControl_pagecontrolElementDef = Q.ElementRegistry_register("PageControl", $.Group_groupElementDef, [$.PageControl_currentPageProperty, $.PageControl_transitionProperty, $.PageControl_pageKeyProperty, $.PageControl_pageActiveProperty], [$.PageControl_pageChangingEvent, $.PageControl_pageChangedEvent]);
},

Panel__maxMinEnabledChanged: function(target, property, oldValue, newValue) {
  var element = target.getElement$1("maximizePanelButton");
  if (element != null)
    element.set$visible(target.get$maximizeEnabled());
  element = target.getElement$1("minimizePanelButton");
  if (element != null)
    element.set$visible(target.get$minimizeEnabled());
},

Panel_registerPanel: function() {
  $.Panel_titleProperty = Q.ElementRegistry_registerProperty("Title", 1, 0, null, "");
  $.Panel_viewStateProperty = Q.ElementRegistry_registerProperty("ViewState", 2, 0, null, 0);
  $.Panel_maximizeEnabledProperty = Q.ElementRegistry_registerProperty("MaximizeEnabled", 4, 0, Q.Panel__maxMinEnabledChanged$closure, true);
  $.Panel_minimizeEnabledProperty = Q.ElementRegistry_registerProperty("MinimizeEnabled", 4, 0, Q.Panel__maxMinEnabledChanged$closure, true);
  $.Panel_moveEnabledProperty = Q.ElementRegistry_registerProperty("moveEnabled", 4, 0, null, false);
  $.Panel_movedEvent = new Q.EventDef("Moved", $.Route_DIRECT, null, null);
  $.Panel_panelElementDef = Q.ElementRegistry_register("Panel", $.ContentContainer_contentcontainerElementDef, [$.Panel_titleProperty, $.Panel_viewStateProperty, $.Panel_maximizeEnabledProperty, $.Panel_minimizeEnabledProperty, $.Panel_moveEnabledProperty], [$.Panel_movedEvent]);
  $.UIElement_isFocusGroupProperty.overrideDefaultValue$2($.Panel_panelElementDef, true);
},

PathShape_registerPathShape: function() {
  $.PathShape_contentProperty = Q.ElementRegistry_registerProperty("content", 0, 12, null, null);
  $.PathShape_nineSliceProperty = Q.ElementRegistry_registerProperty("nineSlice", 9, 4, null, null);
  $.PathShape_pathShapeElementDef = Q.ElementRegistry_register("PathShape", $.Shape_shapeElementDef, [$.PathShape_contentProperty, $.PathShape_nineSliceProperty], null);
},

UIPlatform_applyBrush: function(element, brush) {
  var type, t1, t2;
  type = brush.get$_type();
  if (type === 0) {
    t1 = J.get$style$x(element);
    t2 = brush.get$_color();
    J.set$backgroundColor$x(t1, t2.toString$0(t2));
  } else if (type === 1)
    Q.UIPlatform__applyLinearGradient(element, brush);
},

UIPlatform__applyLinearGradient: function(element, br) {
  var stops, start, end, backStyle, i, $stop, t1, str, version, t2;
  stops = br.get$stops();
  start = br.get$start(br);
  end = br.end;
  backStyle = P.StringBuffer$("");
  if (stops.length >= 2)
    if ($.Application_isWebKit) {
      backStyle.write$1("-webkit-gradient(linear, ");
      backStyle.write$1(J.ceil$0$n(J.$mul$n(br.start.x, 100)));
      backStyle.write$1("%");
      backStyle.write$1(J.ceil$0$n(J.$mul$n(br.start.y, 100)));
      backStyle.write$1("%,");
      backStyle.write$1(J.ceil$0$n(J.$mul$n(br.end.x, 100)));
      backStyle.write$1("%");
      backStyle.write$1(J.ceil$0$n(J.$mul$n(br.end.y, 100)));
      backStyle.write$1("%,");
      for (i = 0; i < stops.length; ++i) {
        if (i !== 0)
          backStyle._contents = backStyle._contents + ",";
        if (i >= stops.length)
          throw H.ioore(stops, i);
        $stop = stops[i];
        backStyle._contents = backStyle._contents + " color-stop(";
        t1 = $stop.offset;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        t1 = C.JSNumber_methods.toString$0(C.JSNumber_methods.$tdiv(100 * t1, 100));
        backStyle._contents = backStyle._contents + t1;
        backStyle._contents = backStyle._contents + ",";
        str = J.toString$0($stop.color);
        str = typeof str === "string" ? str : str;
        backStyle._contents = backStyle._contents + str;
        backStyle._contents = backStyle._contents + ")";
      }
      backStyle.write$1(")");
      J.set$background$x(J.get$style$x(element), backStyle._contents);
    } else if ($.Application_isFF) {
      backStyle.write$1("-moz-linear-gradient(");
      backStyle.write$1(J.$eq(start.x, end.x) ? "top" : "left");
      for (i = 0; i < stops.length; ++i) {
        backStyle._contents = backStyle._contents + ",";
        if (i >= stops.length)
          throw H.ioore(stops, i);
        str = J.toString$0(stops[i].color);
        str = typeof str === "string" ? str : str;
        backStyle._contents = backStyle._contents + str;
        backStyle._contents = backStyle._contents + " ";
        if (i >= stops.length)
          throw H.ioore(stops, i);
        t1 = stops[i].offset;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        t1 = C.JSInt_methods.toString$0(C.JSNumber_methods.toInt$0(100 * t1));
        backStyle._contents = backStyle._contents + t1;
        backStyle._contents = backStyle._contents + "%";
      }
      J.set$background$x(J.get$style$x(element), backStyle._contents);
    } else if ($.Application_isIE) {
      version = $.Application_uaVersion;
      if (typeof version !== "number")
        throw version.$ge();
      if (version >= 100) {
        backStyle.write$1("-ms-linear-gradient(");
        backStyle.write$1(J.$eq(start.x, end.x) ? "top" : "left");
        for (i = 0; i < stops.length; ++i) {
          backStyle._contents = backStyle._contents + ",";
          if (i >= stops.length)
            throw H.ioore(stops, i);
          str = J.toString$0(stops[i].color);
          str = typeof str === "string" ? str : str;
          backStyle._contents = backStyle._contents + str;
          backStyle._contents = backStyle._contents + " ";
          if (i >= stops.length)
            throw H.ioore(stops, i);
          t1 = stops[i].offset;
          if (typeof t1 !== "number")
            throw H.iae(t1);
          t1 = C.JSInt_methods.toString$0(C.JSNumber_methods.toInt$0(100 * t1));
          backStyle._contents = backStyle._contents + t1;
          backStyle._contents = backStyle._contents + "%";
        }
        J.set$background$x(J.get$style$x(element), backStyle._contents);
      } else if (version >= 60) {
        backStyle.write$1("progid:DXImageTransform.Microsoft.gradient(GradientType=");
        backStyle.write$1(J.$eq(end.x, start.x) ? "0," : "1,");
        backStyle.write$1("startColorstr='");
        if (0 >= stops.length)
          throw H.ioore(stops, 0);
        backStyle.write$1(J.toString$0(stops[0].color));
        backStyle.write$1("', endColorstr='");
        t1 = stops.length;
        t2 = t1 - 1;
        if (t2 < 0)
          throw H.ioore(stops, t2);
        backStyle.write$1(J.toString$0(stops[t2].color));
        backStyle.write$1("'");
        backStyle.write$1(")");
        t2 = J.get$style$x(element);
        t1 = version >= 80 ? "-ms-filter" : "filter";
        J.setProperty$2$x(t2, t1, backStyle._contents);
      }
    }
},

UIPlatform_detectBrowser: function() {
  var t1, ua, i;
  t1 = window.navigator.userAgent;
  t1.toString;
  ua = t1.toLowerCase();
  $.Application_isMobile = false;
  for ($.get$UIPlatform__androidAgentList(), i = 0; i >= 0; --i)
    if (C.JSString_methods.indexOf$1(ua, $.get$UIPlatform__androidAgentList()[i]) !== -1) {
      $.Application_isAndroid = true;
      break;
    }
  for ($.get$UIPlatform__iosAgentList(), i = 2; i >= 0; --i)
    if (C.JSString_methods.indexOf$1(ua, $.get$UIPlatform__iosAgentList()[i]) !== -1) {
      $.Application_isIos = true;
      break;
    }
  if ($.Application_isAndroid || $.Application_isIos)
    $.Application_isMobile = true;
  $.Application_uaVersion = Q.UIPlatform_parseUA("Chrome/", false, false);
  if ($.Application_uaVersion !== -1) {
    $.Application_isChrome = true;
    $.Application_isWebKit = true;
    return;
  }
  $.Application_uaVersion = Q.UIPlatform_parseUA("Firefox/", false, false);
  if ($.Application_uaVersion !== -1) {
    $.Application_isFF = true;
    return;
  }
  $.Application_uaVersion = Q.UIPlatform_parseUA("MSIE", false, true);
  if ($.Application_uaVersion !== -1) {
    $.Application_isIE = true;
    return;
  }
  $.Application_uaVersion = Q.UIPlatform_parseUA("Safari", true, false);
  if ($.Application_uaVersion !== -1) {
    $.Application_isSafari = true;
    $.Application_isWebKit = true;
  }
  $.Application_uaVersion = Q.UIPlatform_parseUA("AppleWebKit", true, false);
  if ($.Application_uaVersion !== -1) {
    $.Application_isSafari = true;
    $.Application_isWebKit = true;
  }
  $.Application_screenPixelRatio = window.devicePixelRatio;
},

UIPlatform_parseUA: function($name, parseVersion, semiColonEnd) {
  var pos, endPos, userAgent, vStr, dotPos, nextPos, t1, exception, t2;
  pos = null;
  endPos = null;
  userAgent = window.navigator.userAgent;
  pos = J.indexOf$1$asx(userAgent, $name);
  if (J.$eq(pos, -1))
    return -1;
  if (parseVersion) {
    $name = "Version/";
    pos = J.indexOf$1$asx(userAgent, $name);
    if (J.$eq(pos, -1))
      return 0;
  }
  if (semiColonEnd)
    endPos = J.indexOf$2$asx(userAgent, ";", J.$add$ns(pos, J.get$length$asx($name)));
  else
    endPos = J.indexOf$2$asx(userAgent, " ", J.$add$ns(pos, J.get$length$asx($name)));
  if (J.$eq(endPos, -1))
    if (J.$eq(endPos, -1))
      endPos = J.get$length$asx(userAgent);
  try {
    vStr = J.substring$2$s(userAgent, J.$add$ns(pos, J.get$length$asx($name)), J.$sub$n(endPos, 1));
    dotPos = J.indexOf$1$asx(vStr, ".");
    if (!J.$eq(dotPos, -1)) {
      nextPos = C.JSString_methods.indexOf$1(J.substring$1$s(vStr, J.$add$ns(dotPos, 1)), ".");
      if (!J.$eq(nextPos, -1))
        vStr = J.substring$2$s(vStr, 0, J.$add$ns(nextPos, dotPos) + 1);
    }
    t1 = J.toInt$0$n(J.$mul$n(H.Primitives_parseDouble(vStr, null), 10));
    return t1;
  } catch (exception) {
    t1 = H.unwrapException(exception);
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isFormatException)
      return 0;
    else
      throw exception;
  }

},

UIPlatform_scheduleEnterFrame: function(app) {
  var animCallbackHandler, t1, exception, t2;
  if ($.UIPlatform_inAnimFrameCallback) {
    $.UIPlatform_pendingEnterFrame = true;
    return;
  }
  animCallbackHandler = new Q.UIPlatform_scheduleEnterFrame_closure(app);
  try {
    t1 = window;
    C.Window_methods._ensureRequestAnimationFrame$0(t1);
    C.Window_methods._requestAnimationFrame$1(t1, W._wrapZone(animCallbackHandler));
    $.UIPlatform__isUsingRequestFrame = true;
  } catch (exception) {
    t1 = H.unwrapException(exception);
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError)
      P.Timer_Timer(P.Duration$(0, 0, 0, 20, 0, 0), new Q.UIPlatform_scheduleEnterFrame_closure0(animCallbackHandler));
    else
      throw exception;
  }

},

UIPlatform_initializeAppEvents: function(app) {
  var resizeHandler, t1, t2, width, height;
  resizeHandler = new Q.UIPlatform_initializeAppEvents_closure(app);
  t1 = C.EventStreamProvider_resize.forTarget$1(window);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(resizeHandler), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__resizeSub = t2;
  t2 = C.EventStreamProvider_deviceorientation.forTarget$1(window);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(resizeHandler), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  $.UIPlatform__orientationSub = t1;
  t1 = C.EventStreamProvider_keydown.forTarget$1(window);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure0(app)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__keyDownSub = t2;
  t2 = C.EventStreamProvider_keypress.forTarget$1(window);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure1(app)), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  $.UIPlatform__keyPressSub = t1;
  t1 = C.EventStreamProvider_keyup.forTarget$1(window);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure2(app)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__keyUpSub = t2;
  t2 = C.EventStreamProvider_mouseout.forTarget$1(document);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure3(app)), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  $.UIPlatform__mouseOutSub = t1;
  t1 = C.EventStreamProvider_mousedown.forTarget$1(document);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure4(app)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__mouseDownSub = t2;
  t2 = C.EventStreamProvider_mouseup.forTarget$1(document);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure5(app)), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  $.UIPlatform__mouseUpSub = t1;
  t1 = C.EventStreamProvider_mousemove.forTarget$1(document);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure6(app)), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__mouseMoveSub = t2;
  t2 = C.EventStreamProvider_touchstart.forTarget$1(document);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeAppEvents_closure7()), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  Q.UIPlatform_initializeTouchEvents(app);
  t1 = C._CustomEventStreamProvider__determineMouseWheelEventType.forTarget$1(document);
  t2 = new W._EventStreamSubscription(0, t1._html$_target, t1._html$_eventType, W._wrapZone(Q.UIPlatform__mouseWheelHandler$closure), t1._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t1, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__mouseWheelSub = t2;
  width = window.innerWidth;
  height = window.innerHeight;
  app._hostWidth = width;
  app._hostHeight = height;
  app.relayoutRoot$0();
  Q.UIPlatform_scheduleEnterFrame(app);
},

UIPlatform__mouseWheelHandler: function($event) {
  var delta, t1, exception, t2;
  delta = 0;
  try {
    delta = J.get$deltaY$x($event);
    if (!(J.$lt$n(delta, 30) && J.$gt$n(delta, -30))) {
      t1 = J.get$deltaY$x($event);
      if (typeof t1 !== "number")
        throw t1.$div();
      delta = t1 / 30;
    }
  } catch (exception) {
    t1 = H.unwrapException(exception);
    t2 = J.getInterceptor(t1);
    if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError)
      ;
    else
      throw exception;
  }

  if (!J.$eq(delta, 0)) {
    if ($.Application__current._routeMouseWheelEvent$1(J.toInt$0$n(delta)))
      J.preventDefault$0$x($event);
    Q.UpdateQueue_flush();
  }
},

UIPlatform_initializeTouchEvents: function(app) {
  var t1, t2, t3;
  t1 = {};
  t1.pageX_0 = null;
  t1.pageY_1 = null;
  t2 = C.EventStreamProvider_touchstart.forTarget$1(document);
  t3 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeTouchEvents_closure(t1, app)), t2._useCapture);
  H.setRuntimeTypeInfo(t3, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t3._tryResume$0();
  $.UIPlatform__touchStartSub = t3;
  t3 = C.EventStreamProvider_touchmove.forTarget$1(document);
  t2 = new W._EventStreamSubscription(0, t3._html$_target, t3._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeTouchEvents_closure0(t1, app)), t3._useCapture);
  H.setRuntimeTypeInfo(t2, [H.getRuntimeTypeArgument(t3, "_EventStream", 0)]);
  t2._tryResume$0();
  $.UIPlatform__touchMoveSub = t2;
  t2 = C.EventStreamProvider_touchend.forTarget$1(document);
  t1 = new W._EventStreamSubscription(0, t2._html$_target, t2._html$_eventType, W._wrapZone(new Q.UIPlatform_initializeTouchEvents_closure1(t1, app)), t2._useCapture);
  H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(t2, "_EventStream", 0)]);
  t1._tryResume$0();
  $.UIPlatform__touchEndSub = t1;
},

UIPlatform__buttonFromEvent: function($event) {
  var t1, button;
  t1 = J.getInterceptor$x($event);
  if (t1.get$which($event) == null) {
    t1 = t1.get$button($event);
    if (typeof t1 !== "number")
      throw t1.$lt();
    if (t1 < 2)
      button = 1;
    else
      button = $event.button === 4 ? 4 : 2;
  } else {
    t1 = $event.which;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 0)
      if (t1 < 2)
        button = 1;
      else
        button = t1 === 2 ? 4 : 2;
    else
      button = 0;
  }
  return button;
},

UIPlatform__updateChildLocations: function(surface) {
  var t1, c;
  t1 = surface.rawChildren;
  for (c = (t1 != null ? t1.length : 0) - 1; c >= 0; --c) {
    t1 = surface.rawChildren;
    if (c >= t1.length)
      throw H.ioore(t1, c);
    Q.UIPlatform__updateLocations(t1[c]);
  }
},

UIPlatform__updateLocations: function(s) {
  var t1, c;
  if (s.hostElement != null) {
    s._updateLocation$0();
    return;
  } else {
    t1 = s.rawChildren;
    for (c = (t1 != null ? t1.length : 0) - 1; c >= 0; --c) {
      t1 = s.rawChildren;
      if (c >= t1.length)
        throw H.ioore(t1, c);
      Q.UIPlatform__updateLocations(t1[c]);
    }
  }
},

Popup__isOpenChangedHandler: function(target, propDef, oldValue, newValue) {
  target.isOpenChanged$1(newValue);
},

Popup_registerPopup: function() {
  var t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.Popup]);
  $.Popup__activePopups = t1;
  $.Popup_isOpenProperty = Q.ElementRegistry_registerProperty("isOpen", 4, 0, Q.Popup__isOpenChangedHandler$closure, false);
  $.Popup_autoFocusProperty = Q.ElementRegistry_registerProperty("autoFocus", 4, 0, null, true);
  $.Popup_locationProperty = Q.ElementRegistry_registerProperty("Location", 14, 0, null, 0);
  $.Popup_finalLocationProperty = $.OverlayContainer_finalLocationProperty;
  $.Popup_popupElementDef = Q.ElementRegistry_register("Popup", $.ContentContainer_contentcontainerElementDef, [$.Popup_isOpenProperty, $.Popup_autoFocusProperty, $.Popup_locationProperty, $.Popup_finalLocationProperty], null);
},

ProgressControl__cycleChangeHandler: function(target, property, oldValue, newValue) {
  if (target.get$hasSurface())
    if (newValue === true)
      target._start$0();
    else
      target._stop$0();
},

ProgressControl_registerProgressControl: function() {
  $.ProgressControl_percentCompleteProperty = Q.ElementRegistry_registerProperty("percentComplete", 3, 0, null, 0);
  $.ProgressControl_percentRemainingProperty = Q.ElementRegistry_registerProperty("percentRemaining", 3, 0, null, 100);
  $.ProgressControl_percentFormatProperty = Q.ElementRegistry_registerProperty("PercentFormat", 1, 0, null, "%{0}");
  $.ProgressControl_percentTextProperty = Q.ElementRegistry_registerProperty("PercentText", 1, 0, null, "");
  $.ProgressControl_cycleProperty = Q.ElementRegistry_registerProperty("Cycle", 4, 0, Q.ProgressControl__cycleChangeHandler$closure, false);
  $.ProgressControl_cycleDelayProperty = Q.ElementRegistry_registerProperty("CycleDelay", 2, 0, null, 0);
  $.ProgressControl_cycleTimeProperty = Q.ElementRegistry_registerProperty("CycleTime", 2, 0, null, 1000);
  $.ProgressControl_stepsProperty = Q.ElementRegistry_registerProperty("Steps", 2, 0, null, 0);
  $.ProgressControl_isAnimatingProperty = Q.ElementRegistry_registerProperty("IsAnimating", 4, 0, null, false);
  $.ProgressControl_progresscontrolElementDef = Q.ElementRegistry_register("ProgressControl", $.ValueRangeControl_valuerangecontrolElementDef, [$.ProgressControl_percentCompleteProperty, $.ProgressControl_percentRemainingProperty, $.ProgressControl_percentFormatProperty, $.ProgressControl_percentTextProperty, $.ProgressControl_cycleProperty, $.ProgressControl_cycleDelayProperty, $.ProgressControl_cycleTimeProperty, $.ProgressControl_stepsProperty, $.ProgressControl_isAnimatingProperty], null);
},

PropertyCache_clearCache: function(ownerClass) {
  var t1, clsName, delList, i;
  t1 = $.PropertyCache_classCache;
  if (t1 == null || !t1.containsKey$1(ownerClass))
    return;
  clsName = ownerClass.name;
  delList = [];
  t1 = $.PropertyCache_propDefCache;
  t1.forEach$1(t1, new Q.PropertyCache_clearCache_closure(clsName, delList));
  for (i = delList.length - 1; i >= 0; --i) {
    t1 = $.PropertyCache_propDefCache;
    if (i >= delList.length)
      throw H.ioore(delList, i);
    t1.remove$1(t1, delList[i]);
  }
  t1 = $.PropertyCache_classCache;
  t1.remove$1(t1, ownerClass);
},

PropertyCache__registerPropertyCache: function() {
  $.PropertyCache_classCache = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.ElementDef, [J.JSArray, Q.PropertyDefinition]);
  $.PropertyCache_propDefCache = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, Q.PropertyDefinition);
},

RadioButton__isCheckedChangeHandler: function(target, property, oldValue, newValue) {
  target._updateSharedGroupState$1(newValue);
},

RadioButton__groupChangeHandler: function(target, property, oldValue, newValue) {
  target._updateSharedGroupState$1(target.get$isChecked());
},

RadioButton_registerRadioButton: function() {
  $.RadioButton__activeGroups = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, Q.RadioButton);
  $.RadioButton_isCheckedProperty = Q.ElementRegistry_registerProperty("isChecked", 4, 0, Q.RadioButton__isCheckedChangeHandler$closure, false);
  $.RadioButton_groupProperty = Q.ElementRegistry_registerProperty("group", 1, 0, Q.RadioButton__groupChangeHandler$closure, "default");
  $.RadioButton_radiobuttonElementDef = Q.ElementRegistry_register("RadioButton", $.Button_buttonElementDef, [$.RadioButton_isCheckedProperty, $.RadioButton_groupProperty], null);
},

ScrollBar__valueChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  if ($.ScrollBar__valueChangedArg == null) {
    t1 = new Q.EventArgs(null, null, null, null, false);
    t1.source = null;
    t1.currentSource = null;
    t1.handled = false;
    $.ScrollBar__valueChangedArg = t1;
  }
  t1 = $.ScrollBar__valueChangedArg;
  t1.source = target;
  target.notifyListeners$2($.ScrollBar_valueChangedEvent, t1);
},

ScrollBar_registerScrollBar: function() {
  $.ScrollBar_orientationProperty = Q.ElementRegistry_registerProperty("Orientation", 13, 24, null, 1);
  $.ScrollBar_valueProperty = Q.ElementRegistry_registerProperty("Value", 3, 16, Q.ScrollBar__valueChangedHandler$closure, 0);
  $.ScrollBar_minValueProperty = Q.ElementRegistry_registerProperty("MinValue", 3, 0, null, 0);
  $.ScrollBar_maxValueProperty = Q.ElementRegistry_registerProperty("MaxValue", 3, 0, null, 100);
  $.ScrollBar_valueChangedEvent = new Q.EventDef("ValueChanged", $.Route_DIRECT, null, null);
  $.ScrollBar_scrollbarElementDef = Q.ElementRegistry_register("ScrollBar", $.Control_controlElementDef, [$.ScrollBar_orientationProperty, $.ScrollBar_valueProperty, $.ScrollBar_minValueProperty, $.ScrollBar_maxValueProperty], [$.ScrollBar_valueChangedEvent]);
},

ScrollBox__scrollPointChangedHandler: function(target, propDef, oldValue, newValue) {
  target.scrollPointChanged$0();
},

ScrollBox__scrollChildHandler: function(target, e) {
  target._scrollChildIntoView$1(J.get$source$x(e));
},

ScrollBox_registerScrollBox: function() {
  $.ScrollBox_horizontalScrollEnabledProperty = Q.ElementRegistry_registerProperty("horizontalScrollEnabled", 4, 0, null, true);
  $.ScrollBox_verticalScrollEnabledProperty = Q.ElementRegistry_registerProperty("verticalScrollEnabled", 4, 0, null, true);
  $.ScrollBox_panningEnabledProperty = Q.ElementRegistry_registerProperty("panningEnabled", 4, 0, null, false);
  $.ScrollBox_scrollPointXProperty = Q.ElementRegistry_registerProperty("scrollPointX", 3, 0, Q.ScrollBox__scrollPointChangedHandler$closure, 0);
  $.ScrollBox_scrollPointYProperty = Q.ElementRegistry_registerProperty("scrollPointY", 3, 0, Q.ScrollBox__scrollPointChangedHandler$closure, 0);
  $.ScrollBox_scrollboxElementDef = Q.ElementRegistry_register("ScrollBox", $.ContentContainer_contentcontainerElementDef, [$.ScrollBox_horizontalScrollEnabledProperty, $.ScrollBox_panningEnabledProperty, $.ScrollBox_verticalScrollEnabledProperty, $.ScrollBox_scrollPointXProperty, $.ScrollBox_scrollPointYProperty], null);
  $.UIElement_scrollIntoViewEvent.addHandler$2($.ScrollBox_scrollboxElementDef, Q.ScrollBox__scrollChildHandler$closure);
},

Shape_registerShape: function() {
  $.Shape_fillProperty = Q.ElementRegistry_registerProperty("fill", 7, 4, null, null);
  $.Shape_strokeProperty = Q.ElementRegistry_registerProperty("stroke", 8, 4, null, null);
  $.Shape_scaleModeProperty = Q.ElementRegistry_registerProperty("scaleMode", 12, 4, null, 0);
  $.Shape_shapeElementDef = Q.ElementRegistry_register("Shape", $.UIElement_elementDef, [$.Shape_fillProperty, $.Shape_strokeProperty, $.Shape_scaleModeProperty], null);
},

SlideBox_registerSlideBox: function() {
  $.SlideBox_viewPortCapacityProperty = Q.ElementRegistry_registerProperty("viewPortCapacity", 2, 24, null, 3);
  $.SlideBox_viewPortMarginProperty = Q.ElementRegistry_registerProperty("viewPortMargin", 3, 24, null, 30);
  $.SlideBox_selectedIndexProperty = Q.ElementRegistry_registerProperty("selectedIndex", 2, 0, null, 0);
  $.SlideBox_slideboxElementDef = Q.ElementRegistry_register("SlideBox", $.UIElementContainer_uielementcontainerElementDef, [$.SlideBox_viewPortCapacityProperty, $.SlideBox_viewPortMarginProperty, $.SlideBox_selectedIndexProperty], null);
},

Slider__thumbChangedHandler: function(target, propDef, oldValue, newValue) {
  target._thumbChanged$2(oldValue, newValue);
},

Slider__ticksChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  if (!J.$eq(newValue, 0)) {
    t1 = $.Cursor_BUTTON;
    J.setProperty$2$x(target, $.Cursor_cursorProperty, t1);
  }
},

Slider_registerSlider: function() {
  $.Slider_orientationProperty = Q.ElementRegistry_registerProperty("Orientation", 13, 24, null, 0);
  $.Slider_ticksProperty = Q.ElementRegistry_registerProperty("Ticks", 2, 0, Q.Slider__ticksChangedHandler$closure, 0);
  $.Slider_thumbProperty = Q.ElementRegistry_registerProperty("Thumb", 5, 0, Q.Slider__thumbChangedHandler$closure, null);
  $.Slider_thumbPressedProperty = Q.ElementRegistry_registerProperty("isPressed", 4, 0, null, false);
  $.Slider_sliderElementDef = Q.ElementRegistry_register("Slider", $.ValueRangeControl_valuerangecontrolElementDef, [$.Slider_orientationProperty, $.Slider_ticksProperty, $.Slider_thumbProperty, $.Slider_thumbPressedProperty], null);
},

TabControl_registerTabControl: function() {
  $.TabControl_tabcontrolElementDef = Q.ElementRegistry_register("TabControl", $.ListBase_listbaseElementDef, null, null);
  $.Cursor_cursorProperty.overrideDefaultValue$2($.TabControl_tabcontrolElementDef, $.Cursor_BUTTON);
},

TextEdit__htmlEnabledChangeHandler: function(target, propDef, oldValue, newValue) {
  var editSurface = target.get$_hostSurface();
  if (editSurface != null)
    if (target.get$htmlEnabled() === true) {
      editSurface.set$htmlText("");
      editSurface.set$htmlText(target.get$text(target));
    } else {
      editSurface.set$text(editSurface, "");
      editSurface.set$text(editSurface, target.get$text(target));
    }
},

TextEdit__maxCharsChangedHandler: function(target, propDef, oldValue, newValue) {
  var editSurface = target.get$_hostSurface();
  if (editSurface != null)
    editSurface.set$maxChars(target.get$maxChars());
},

TextEdit__lineStyleChangeHandler: function(target, propDef, oldValue, newValue) {
  var editSurface = target.get$_hostSurface();
  if (editSurface != null) {
    editSurface.set$multiline(target.get$multiline());
    editSurface.set$wordWrap(editSurface, target.getProperty$1($.Label_wordWrapProperty));
  }
},

TextEdit__textChangeHandler: function(target, propDef, oldValue, newValue) {
  target._updateTextSurface$0();
},

TextEdit_registerTextEdit: function() {
  $.TextEdit_textProperty = Q.ElementRegistry_registerProperty("text", 1, 8, Q.TextEdit__textChangeHandler$closure, "");
  $.TextEdit_wordWrapProperty = Q.ElementRegistry_registerProperty("wordWrap", 4, 8, Q.TextEdit__lineStyleChangeHandler$closure, false);
  $.TextEdit_htmlEnabledProperty = Q.ElementRegistry_registerProperty("htmlEnabled", 4, 8, Q.TextEdit__htmlEnabledChangeHandler$closure, false);
  $.TextEdit_multilineProperty = Q.ElementRegistry_registerProperty("multiline", 4, 8, Q.TextEdit__lineStyleChangeHandler$closure, false);
  $.TextEdit_displayAsPasswordProperty = Q.ElementRegistry_registerProperty("displayAsPassword", 4, 0, null, false);
  $.TextEdit_readOnlyProperty = Q.ElementRegistry_registerProperty("readOnly", 4, 0, null, false);
  $.TextEdit_maxCharsProperty = Q.ElementRegistry_registerProperty("maxChars", 2, 0, Q.TextEdit__maxCharsChangedHandler$closure, 0);
  $.TextEdit_linkClickEvent = new Q.EventDef("LinkClick", $.Route_DIRECT, null, null);
  $.TextEdit_texteditElementDef = Q.ElementRegistry_register("TextEdit", $.Control_controlElementDef, [$.TextEdit_textProperty, $.TextEdit_wordWrapProperty, $.TextEdit_htmlEnabledProperty, $.TextEdit_multilineProperty, $.TextEdit_displayAsPasswordProperty, $.TextEdit_readOnlyProperty, $.TextEdit_maxCharsProperty], [$.TextEdit_linkClickEvent]);
  $.Cursor_cursorProperty.overrideDefaultValue$2($.TextEdit_texteditElementDef, $.Cursor_IBEAM);
},

TextBox__maxCharsChangedHandler: function(target, propDef, oldValue, newValue) {
  target._updateCharsRemaining$0();
},

TextBox__textChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  if (newValue != null)
    C.JSNull_methods.$gt(target.get$maxChars(), 0);
  t1 = $.TextBox__changeEventArgs;
  t1.source = target;
  target.notifyListeners$2($.TextBox_textChangedEvent, t1);
},

TextBox_registerTextBox: function() {
  $.TextBox_textProperty = Q.ElementRegistry_registerProperty("text", 1, 8, Q.TextBox__textChangedHandler$closure, "");
  $.TextBox_wordWrapProperty = Q.ElementRegistry_registerProperty("wordWrap", 4, 8, null, false);
  $.TextBox_htmlEnabledProperty = Q.ElementRegistry_registerProperty("htmlEnabled", 4, 8, null, false);
  $.TextBox_multilineProperty = Q.ElementRegistry_registerProperty("multiline", 4, 8, null, false);
  $.TextBox_displayAsPasswordProperty = Q.ElementRegistry_registerProperty("displayAsPassword", 4, 0, null, false);
  $.TextBox_readOnlyProperty = Q.ElementRegistry_registerProperty("ReadOnly", 4, 0, null, false);
  $.TextBox_isEmptyProperty = Q.ElementRegistry_registerProperty("IsEmpty", 4, 0, null, true);
  $.TextBox_maxCharsProperty = Q.ElementRegistry_registerProperty("MaxChars", 2, 0, Q.TextBox__maxCharsChangedHandler$closure, 0);
  $.TextBox_charsRemainingProperty = Q.ElementRegistry_registerProperty("CharsRemaining", 2, 0, null, 2147483647);
  $.TextBox_textChangedEvent = new Q.EventDef("TextChanged", $.Route_DIRECT, null, null);
  $.TextBox_textboxElementDef = Q.ElementRegistry_register("TextBox", $.Control_controlElementDef, [$.TextBox_textProperty, $.TextBox_wordWrapProperty, $.TextBox_htmlEnabledProperty, $.TextBox_isEmptyProperty, $.TextBox_multilineProperty, $.TextBox_displayAsPasswordProperty, $.TextBox_readOnlyProperty, $.TextBox_maxCharsProperty, $.TextBox_charsRemainingProperty], null);
  $.Cursor_cursorProperty.overrideDefaultValue$2($.TextBox_textboxElementDef, $.Cursor_IBEAM);
  var t1 = new Q.EventArgs(null, null, null, null, false);
  t1.source = null;
  t1.currentSource = null;
  t1.handled = false;
  $.TextBox__changeEventArgs = t1;
},

ToolTip_registerToolTip: function() {
  $.ToolTip_locationProperty = Q.ElementRegistry_registerProperty("Location", 14, 0, null, 0);
  $.ToolTip_finalLocationProperty = $.OverlayContainer_finalLocationProperty;
  $.ToolTip_tooltipElementDef = Q.ElementRegistry_register("ToolTip", $.ContentContainer_contentcontainerElementDef, [$.ToolTip_locationProperty, $.ToolTip_finalLocationProperty], null);
},

UIElement__widthChangedHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT);
  t2 = target.get$_layoutFlags();
  if (t1) {
    target._layoutFlags = (t2 & 4294965247) >>> 0;
    target._internalWidth = 0;
  } else {
    target._layoutFlags = (t2 | 2048) >>> 0;
    target._internalWidth = newValue;
  }
},

UIElement__heightChangedHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = J.$eq(newValue, $.PropertyDefaults_NO_DEFAULT);
  t2 = target.get$_layoutFlags();
  if (t1) {
    target._layoutFlags = (t2 & 4294963199) >>> 0;
    target._internalHeight = 0;
  } else {
    target._layoutFlags = (t2 | 4096) >>> 0;
    target._internalHeight = newValue;
  }
},

UIElement__filtersChangeHandler: function(target, property, oldValue, newValue) {
  if (newValue != null)
    target.setElementFlag$2(64, true);
  target._invalidateFilters$0();
},

UIElement__processEffectPropertyChange: function(effectsColl, e) {
  var t1, i;
  J.get$source$x(e).getProperty$1(e.get$property());
  for (t1 = effectsColl.length, i = 0; i < t1; ++i)
    effectsColl[i].get$property();
},

UIElement__visibleChangedHandler: function(target, property, oldValue, newValue) {
  var surface, t1;
  target.setElementFlag$2(1, newValue);
  surface = target._hostSurface;
  if (surface != null) {
    surface.set$visible(newValue);
    if (newValue === true) {
      target.invalidateSize$0();
      if (target.get$visualParent() != null) {
        target.get$visualParent().invalidateSizeForChild$1(target);
        t1 = target.get$visualParent();
        t1._layoutFlags = (t1._layoutFlags | 4) >>> 0;
        Q.UpdateQueue_updateLayout(t1);
      }
      target._layoutFlags = (target._layoutFlags | 2) >>> 0;
      Q.UpdateQueue_updateDrawing(target);
    }
  }
},

UIElement__opacityChangeHandler: function(target, property, oldValue, newValue) {
  var surface = target.get$_hostSurface();
  if (surface != null)
    surface.set$opacity(surface, newValue);
},

UIElement__stateChangeHandler: function(target, property, oldValue, newValue) {
  var stateEvent;
  if (target.hasListener$1($.UIElement_stateChangedEvent) === true) {
    stateEvent = new Q.EventArgs(null, null, null, null, false);
    stateEvent.source = target;
    stateEvent.currentSource = target;
    stateEvent.handled = false;
    stateEvent.event = $.UIElement_stateChangedEvent;
    target.routeEvent$1(stateEvent);
  }
},

UIElement__marginsChangeHandler: function(target, property, oldValue, newValue) {
  target.set$_margins(newValue);
},

UIElement__maskChangeHandler: function(target, property, oldValue, newValue) {
  target.set$_mask(newValue);
  target._invalidateMask$0();
},

UIElement__minWidthConstraintChangeHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.overridesProperty$1($.UIElement_minWidthProperty);
  t2 = target.get$_layoutFlags();
  if (t1)
    target._layoutFlags = (t2 | 128) >>> 0;
  else
    target._layoutFlags = (t2 & 4294967167) >>> 0;
},

UIElement__maxWidthConstraintChangeHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.overridesProperty$1($.UIElement_maxWidthProperty);
  t2 = target.get$_layoutFlags();
  if (t1)
    target._layoutFlags = (t2 | 256) >>> 0;
  else
    target._layoutFlags = (t2 & 4294967039) >>> 0;
},

UIElement__minHeightConstraintChangeHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.overridesProperty$1($.UIElement_minHeightProperty);
  t2 = target.get$_layoutFlags();
  if (t1)
    target._layoutFlags = (t2 | 512) >>> 0;
  else
    target._layoutFlags = (t2 & 4294966783) >>> 0;
},

UIElement__maxHeightConstraintChangeHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.overridesProperty$1($.UIElement_maxHeightProperty);
  t2 = target.get$_layoutFlags();
  if (t1)
    target._layoutFlags = (t2 | 1024) >>> 0;
  else
    target._layoutFlags = (t2 & 4294966271) >>> 0;
},

UIElement__transformChangeHandler: function(target, property, oldValue, newValue) {
  var t1;
  if (newValue != null) {
    t1 = J.getInterceptor(newValue);
    t1 = typeof newValue === "object" && newValue !== null && !!t1.$isUITransform;
  } else
    t1 = false;
  if (t1) {
    newValue.set$_targetElement(target);
    if (target != null)
      target.onTransformChanged$1(newValue);
  }
},

UIElement__tooltipChangedHandler: function(target, property, oldValue, newValue) {
  var t1 = $.Application__current;
  if (newValue == null) {
    t1 = t1.get$_toolTipManager();
    t1.remove$1(t1, target);
  } else {
    t1 = t1.get$_toolTipManager();
    t1.add$1(t1, target);
  }
},

UIElement__clipChildrenChangeHandler: function(target, property, oldValue, newValue) {
  var t1;
  target.setElementFlag$2(8, newValue);
  t1 = target._hostSurface;
  if (t1 != null)
    t1.set$clipChildren(true);
},

UIElement__layoutVisibleChangedHandler: function(target, property, oldValue, newValue) {
  target.setElementFlag$2(2, newValue);
},

UIElement__keyEventHandler: function(element, args) {
  switch (J.get$eventType$x(args)) {
    case 0:
      J.onKeyDown$1$x(element, args);
      break;
    case 1:
      J.onKeyUp$1$x(element, args);
      break;
    default:
  }
},

UIElement__elementFocusChangedHandler: function(target, property, oldValue, newValue) {
  $.Application_focusManager._focusChangedHandler$4(target, property, oldValue, newValue);
  target.focusChanged$0();
},

UIElement_registerUIElement: function() {
  $.UIElement_visibleProperty = Q.ElementRegistry_registerProperty("visible", 4, 8, Q.UIElement__visibleChangedHandler$closure, true);
  $.UIElement_clipChildrenProperty = Q.ElementRegistry_registerProperty("clipChildren", 4, 0, Q.UIElement__clipChildrenChangeHandler$closure, false);
  $.UIElement_opacityProperty = Q.ElementRegistry_registerProperty("Opacity", 3, 0, Q.UIElement__opacityChangeHandler$closure, 1);
  $.UIElement_widthProperty = Q.ElementRegistry_registerProperty("width", 3, 8, Q.UIElement__widthChangedHandler$closure, $.PropertyDefaults_NO_DEFAULT);
  $.UIElement_heightProperty = Q.ElementRegistry_registerProperty("height", 3, 8, Q.UIElement__heightChangedHandler$closure, $.PropertyDefaults_NO_DEFAULT);
  $.UIElement_hAlignProperty = Q.ElementRegistry_registerProperty("hAlign", 2, 80, null, 0);
  $.UIElement_vAlignProperty = Q.ElementRegistry_registerProperty("vAlign", 2, 80, null, 0);
  $.UIElement_minWidthProperty = Q.ElementRegistry_registerProperty("minWidth", 3, 8, Q.UIElement__minWidthConstraintChangeHandler$closure, 0);
  $.UIElement_maxWidthProperty = Q.ElementRegistry_registerProperty("maxWidth", 3, 8, Q.UIElement__maxWidthConstraintChangeHandler$closure, $.PropertyDefaults_NO_DEFAULT);
  $.UIElement_minHeightProperty = Q.ElementRegistry_registerProperty("minHeight", 3, 8, Q.UIElement__minHeightConstraintChangeHandler$closure, 0);
  $.UIElement_maxHeightProperty = Q.ElementRegistry_registerProperty("maxHeight", 3, 8, Q.UIElement__maxHeightConstraintChangeHandler$closure, $.PropertyDefaults_NO_DEFAULT);
  $.UIElement_marginsProperty = Q.ElementRegistry_registerProperty("margins", 9, 8, Q.UIElement__marginsChangeHandler$closure, $.Margin_EMPTY);
  $.UIElement_maskProperty = Q.ElementRegistry_registerProperty("mask", 5, 4, Q.UIElement__maskChangeHandler$closure, null);
  $.UIElement_stateProperty = Q.ElementRegistry_registerProperty("state", 1, 1, Q.UIElement__stateChangeHandler$closure, "");
  $.UIElement_tooltipProperty = Q.ElementRegistry_registerProperty("tooltip", 0, 0, Q.UIElement__tooltipChangedHandler$closure, null);
  $.UIElement_filtersProperty = Q.ElementRegistry_registerProperty("Filters", 0, 256, Q.UIElement__filtersChangeHandler$closure, null);
  $.UIElement_isFocusGroupProperty = Q.ElementRegistry_registerProperty("isFocusGroup", 4, 0, null, false);
  $.UIElement_isFocusedProperty = Q.ElementRegistry_registerProperty("isFocused", 4, 0, Q.UIElement__elementFocusChangedHandler$closure, false);
  $.UIElement_transformProperty = Q.ElementRegistry_registerProperty("transform", 0, 256, Q.UIElement__transformChangeHandler$closure, null);
  $.UIElement_layoutVisibleProperty = Q.ElementRegistry_registerProperty("layoutVisible", 4, 64, Q.UIElement__layoutVisibleChangedHandler$closure, true);
  $.UIElement_mouseEnabledProperty = Q.ElementRegistry_registerProperty("mouseEnabled", 4, 0, new Q.UIElement_registerUIElement_closure(), true);
  $.UIElement_enabledProperty = Q.ElementRegistry_registerProperty("enabled", 4, 0, new Q.UIElement_registerUIElement_closure0(), true);
  $.UIElement_isMouseOverProperty = Q.ElementRegistry_registerProperty("isMouseOver", 4, 0, null, false);
  $.UIElement_focusChromeProperty = Q.ElementRegistry_registerProperty("focusChrome", 10, 0, null, null);
  $.UIElement_closedEvent = new Q.EventDef("Closed", $.Route_DIRECT, null, null);
  $.UIElement_mouseDownEvent = new Q.EventDef("MouseDown", $.Route_BUBBLE, null, null);
  $.UIElement_mouseUpEvent = new Q.EventDef("MouseUp", $.Route_BUBBLE, null, null);
  $.UIElement_mouseMoveEvent = new Q.EventDef("MouseMove", $.Route_BUBBLE, null, null);
  $.UIElement_mouseEnterEvent = new Q.EventDef("MouseEnter", $.Route_BUBBLE, null, null);
  $.UIElement_mouseExitEvent = new Q.EventDef("MouseExit", $.Route_BUBBLE, null, null);
  $.UIElement_mouseWheelEvent = new Q.EventDef("MouseWheel", $.Route_BUBBLE, null, null);
  $.UIElement_dragStartEvent = new Q.EventDef("DragStart", $.Route_BUBBLE, null, null);
  $.UIElement_dragEvent = new Q.EventDef("Drag", $.Route_BUBBLE, null, null);
  $.UIElement_dragEndEvent = new Q.EventDef("DragEnd", $.Route_BUBBLE, null, null);
  $.UIElement_dragEnterEvent = new Q.EventDef("DragEnter", $.Route_BUBBLE, null, null);
  $.UIElement_dragOverEvent = new Q.EventDef("DragOver", $.Route_BUBBLE, null, null);
  $.UIElement_dragLeaveEvent = new Q.EventDef("DragLeave", $.Route_BUBBLE, null, null);
  $.UIElement_dropEvent = new Q.EventDef("Drop", $.Route_BUBBLE, null, null);
  $.UIElement_layoutChangedEvent = new Q.EventDef("LayoutChanged", $.Route_DIRECT, null, null);
  $.UIElement_transformChangedEvent = new Q.EventDef("TransformChanged", $.Route_DIRECT, null, null);
  $.UIElement_keyDownEvent = new Q.EventDef("KeyDown", $.Route_BUBBLE, null, null);
  $.UIElement_keyUpEvent = new Q.EventDef("KeyUp", $.Route_BUBBLE, null, null);
  $.UIElement_scrollIntoViewEvent = new Q.EventDef("ScrollIntoView", $.Route_BUBBLE, null, null);
  $.UIElement_stateChangedEvent = new Q.EventDef("StateChanged", $.Route_DIRECT, null, null);
  $.UIElement_elementDef = Q.ElementRegistry_register("UIElement", $.UxmlElement_baseElementDef, [$.UIElement_visibleProperty, $.UIElement_clipChildrenProperty, $.UIElement_widthProperty, $.UIElement_heightProperty, $.UIElement_hAlignProperty, $.UIElement_vAlignProperty, $.UIElement_minWidthProperty, $.UIElement_minHeightProperty, $.UIElement_maxWidthProperty, $.UIElement_maxHeightProperty, $.UIElement_filtersProperty, $.UIElement_isFocusGroupProperty, $.UIElement_isFocusedProperty, $.UIElement_transformProperty, $.UIElement_layoutVisibleProperty, $.UIElement_mouseEnabledProperty, $.UIElement_isMouseOverProperty, $.UIElement_enabledProperty, $.UIElement_opacityProperty, $.UIElement_marginsProperty, $.UIElement_stateProperty], [$.UIElement_closedEvent, $.UIElement_mouseDownEvent, $.UIElement_mouseUpEvent, $.UIElement_mouseMoveEvent, $.UIElement_mouseEnterEvent, $.UIElement_mouseExitEvent, $.UIElement_mouseWheelEvent, $.UIElement_keyDownEvent, $.UIElement_keyUpEvent, $.UIElement_dragStartEvent, $.UIElement_dragEvent, $.UIElement_dragEndEvent, $.UIElement_dragEnterEvent, $.UIElement_dragOverEvent, $.UIElement_dragLeaveEvent, $.UIElement_transformChangedEvent, $.UIElement_layoutChangedEvent, $.UIElement_scrollIntoViewEvent, $.UIElement_stateChangedEvent]);
  $.UIElement_mouseDownEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_mouseUpEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_mouseMoveEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_mouseEnterEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_mouseExitEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_mouseWheelEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__mouseEventHandler$closure);
  $.UIElement_dragEnterEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__dragEventHandler$closure);
  $.UIElement_dragOverEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__dragEventHandler$closure);
  $.UIElement_dragLeaveEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__dragEventHandler$closure);
  $.UIElement_dropEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__dragEventHandler$closure);
  $.UIElement_keyDownEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__keyEventHandler$closure);
  $.UIElement_keyUpEvent.addHandler$2($.UIElement_elementDef, Q.UIElement__keyEventHandler$closure);
},

UIElement__mouseEventHandler: function(element, args) {
  if (!element.get$enabled())
    return;
  if ((element._elementFlags & 4) === 0)
    return;
  switch (J.get$eventType$x(args)) {
    case 0:
      element.onMouseDown$1(element, args);
      break;
    case 1:
      break;
    case 2:
      break;
    case 3:
      args.handled = true;
      break;
    case 4:
      args.handled = true;
      break;
    case 5:
      break;
    default:
  }
},

UIElement__dragEventHandler: function(target, args) {
  var t1, t2;
  if (!target.get$enabled())
    return;
  switch (J.get$eventType$x(args)) {
    case 2:
      break;
    case 3:
      args.handled = true;
      break;
    case 4:
      args.handled = true;
      break;
    default:
  }
  t1 = args.event;
  t2 = $.UIElement_dropEvent;
  if (t1 == null ? t2 == null : t1 === t2)
    ;
},

UpdateQueue_initialize: function() {
  if ($.UpdateQueue_measureUpdates != null)
    return;
  $.UpdateQueue_locationUpdates = [];
  var t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UIElement]);
  $.UpdateQueue_measureUpdates = t1;
  $.UpdateQueue_measureSet = P.LinkedHashSet_LinkedHashSet(null, null, null, Q.UIElement);
  t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UIElement]);
  $.UpdateQueue_layoutUpdates = t1;
  $.UpdateQueue_layoutSet = P.LinkedHashSet_LinkedHashSet(null, null, null, Q.UIElement);
  t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UIElement]);
  $.UpdateQueue_renderUpdates = t1;
  $.UpdateQueue_renderSet = P.LinkedHashSet_LinkedHashSet(null, null, null, Q.UIElement);
  t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UISurface]);
  $.UpdateQueue__childLocationUpdates = t1;
  $.UpdateQueue__childLocationSet = P.LinkedHashSet_LinkedHashSet(null, null, null, Q.UISurface);
  t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UIElement]);
  $.UpdateQueue_filterUpdates = t1;
  t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.QueueCallbackData]);
  $.UpdateQueue_callbacks = t1;
  $.UpdateQueue_callbackActive = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, J.JSBool);
  $.UpdateQueue_blockDoLater = false;
},

UpdateQueue_updateMeasure: function(element) {
  var t1, t2;
  t1 = $.UpdateQueue_measureSet;
  if (!t1.contains$1(t1, element)) {
    t1 = element.parent;
    if (t1 != null) {
      t2 = $.UpdateQueue_measureSet;
      t1 = !t2.contains$1(t2, t1);
    } else
      t1 = true;
    if (t1) {
      $.UpdateQueue_measureUpdates.push(element);
      t1 = $.UpdateQueue_measureSet;
      t1.add$1(t1, element);
      Q.UpdateQueue__requestAnimationFrame();
    }
  }
},

UpdateQueue_updateLayout: function(element) {
  var t1 = $.UpdateQueue_layoutSet;
  if (!t1.contains$1(t1, element)) {
    $.UpdateQueue_layoutUpdates.push(element);
    t1 = $.UpdateQueue_layoutSet;
    t1.add$1(t1, element);
    Q.UpdateQueue__requestAnimationFrame();
  }
},

UpdateQueue_updateDrawing: function(element) {
  var t1 = $.UpdateQueue_renderSet;
  if (!t1.contains$1(t1, element)) {
    $.UpdateQueue_renderUpdates.push(element);
    t1 = $.UpdateQueue_renderSet;
    t1.add$1(t1, element);
    Q.UpdateQueue__requestAnimationFrame();
  }
},

UpdateQueue_updateFilters: function(element) {
  var t1 = $.UpdateQueue_filterUpdates;
  if (H.Arrays_indexOf(t1, element, 0, t1.length) === -1) {
    $.UpdateQueue_filterUpdates.push(element);
    Q.UpdateQueue__requestAnimationFrame();
  }
},

UpdateQueue_doLater: function(callback, key, data) {
  var t1, t2;
  if ($.UpdateQueue_blockDoLater) {
    t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.QueueCallbackData]);
    $.UpdateQueue_callbacks = t1;
    $.UpdateQueue_blockDoLater = false;
  }
  if ($.UpdateQueue_callbackActive.containsKey$1(key)) {
    t1 = $.UpdateQueue_callbackActive;
    if (!J.$eq(t1.$index(t1, key), true))
      return;
    t1 = $.UpdateQueue_callbackActive;
    t1.$indexSet(t1, key, true);
  }
  t1 = $.UpdateQueue_callbacks;
  t2 = new Q.QueueCallbackData(null, null, null);
  t2._handler = callback;
  t2._key = key;
  t2._data = data;
  t1.push(t2);
  Q.UpdateQueue__requestAnimationFrame();
},

UpdateQueue_flush: function() {
  var currentCallbacks, nElem, c, callbackData, key, e, element, phase, t1, exception, t2, line, delayedMeasures, measureIndex, updateCount, l, item, u;
  $.UpdateQueue__requestFrameInFlight = false;
  if ($.Application__current == null)
    return;
  if ($.UpdateQueue_busy)
    return;
  $.UpdateQueue_busy = true;
  for (element = null, phase = 0; phase < 2; ++phase) {
    try {
      currentCallbacks = $.UpdateQueue_callbacks;
      $.UpdateQueue_blockDoLater = true;
      nElem = J.get$length$asx(currentCallbacks);
      for (c = 0; J.$lt$n(c, nElem); c = J.$add$ns(c, 1)) {
        callbackData = J.$index$asx(currentCallbacks, 0);
        J.removeRange$2$ax(currentCallbacks, 0, 1);
        key = callbackData.get$_key();
        if (key != null) {
          t1 = $.UpdateQueue_callbackActive;
          t1.remove$1(t1, key);
        }
        t1 = callbackData;
        t1._handler$1(t1.get$_data());
      }
    } catch (exception) {
      t1 = H.unwrapException(exception);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isException) {
        e = t1;
        t1 = $.Application__current;
        line = "callback failure " + J.toString$0(e);
        t1.toString;
        H.printToConsole(line);
      } else
        throw exception;
    }

    $.UpdateQueue_blockDoLater = false;
    for (delayedMeasures = null, measureIndex = 0; t1 = $.UpdateQueue_measureUpdates, measureIndex < t1.length; ++measureIndex) {
      element = t1[measureIndex];
      if ((element._layoutFlags & 1) !== 0)
        if (!element._remeasure$0()) {
          if (delayedMeasures == null) {
            delayedMeasures = [];
            delayedMeasures.$builtinTypeInfo = [Q.UIElement];
          }
          delayedMeasures.push(element);
        } else {
          t1 = $.UpdateQueue_measureSet;
          t1.remove$1(t1, element);
        }
      else {
        t1 = $.UpdateQueue_measureSet;
        t1.remove$1(t1, element);
      }
    }
    if (delayedMeasures != null)
      $.UpdateQueue_measureUpdates = delayedMeasures;
    else
      J.set$length$asx(t1, 0);
    updateCount = $.UpdateQueue_layoutUpdates.length;
    for (; updateCount > 0;) {
      --updateCount;
      t1 = $.UpdateQueue_layoutUpdates;
      if (0 >= t1.length)
        throw H.ioore(t1, 0);
      element = t1.pop();
      t1 = $.UpdateQueue_layoutSet;
      t1.remove$1(t1, element);
      t1 = element._elementFlags;
      if ((t1 & 1) !== 0 || (t1 & 2) !== 0) {
        if ((element._layoutFlags & 1) !== 0)
          element._remeasure$0();
        if ((element._layoutFlags & 8) === 0)
          element.layout$4(element._prevLayoutX, element._prevLayoutY, element._prevLayoutWidth, element._prevLayoutHeight);
      }
    }
    updateCount = $.UpdateQueue_filterUpdates.length;
    for (; updateCount > 0;) {
      --updateCount;
      t1 = $.UpdateQueue_filterUpdates;
      if (0 >= t1.length)
        throw H.ioore(t1, 0);
      element = t1.pop();
      if ((element._layoutFlags & 16) !== 0) {
        t1 = element._hostSurface;
        if (t1 != null && (element._elementFlags & 64) !== 0)
          t1.applyFilters$1(element.get$filters());
      }
    }
    for (t1 = $.UpdateQueue_locationUpdates, t1.length, l = 0; false; ++l) {
      t1.length;
      if (l >= 0)
        throw H.ioore(t1, l);
      item = t1[l];
      item.$index(item, 0).setLocation$4(item.$index(item, 1), item.$index(item, 2), item.$index(item, 3), item.$index(item, 4));
    }
    $.UpdateQueue_locationUpdates = [];
    updateCount = $.UpdateQueue_renderUpdates.length;
    for (u = 0; t1 = $.UpdateQueue_renderUpdates, u < updateCount; ++u) {
      if (u >= t1.length)
        throw H.ioore(t1, u);
      element = t1[u];
      if ((element._elementFlags & 1) !== 0)
        element._redraw$0();
    }
    J.set$length$asx(t1, 0);
    t1 = $.UpdateQueue_renderSet;
    t1.clear$0(t1);
    updateCount = $.UpdateQueue__childLocationUpdates.length;
    for (u = 0; t1 = $.UpdateQueue__childLocationUpdates, u < updateCount; ++u) {
      if (u >= t1.length)
        throw H.ioore(t1, u);
      Q.UIPlatform__updateChildLocations(t1[u]);
    }
    J.set$length$asx(t1, 0);
    t1 = $.UpdateQueue__childLocationSet;
    t1.clear$0(t1);
  }
  $.UpdateQueue_busy = false;
  if ($.UpdateQueue__requestFrameInFlight)
    Q.UIPlatform_scheduleEnterFrame($.Application__current);
},

UpdateQueue__requestAnimationFrame: function() {
  if (!$.UpdateQueue__requestFrameInFlight) {
    $.UpdateQueue__requestFrameInFlight = true;
    if (!$.UpdateQueue_busy)
      Q.UIPlatform_scheduleEnterFrame($.Application__current);
  }
},

UxmlElement_registerElement: function() {
  if ($.UxmlElement_baseElementDef != null)
    return;
  Q.PropertyDefaults__initDefaults();
  $.UxmlElement__nullValue = $.PropertyDefaults_NULL_VALUE;
  $.UxmlElement_dataProperty = Q.ElementRegistry_registerProperty("data", 15, 1, null, null);
  $.UxmlElement_baseElementDef = Q.ElementRegistry_register("UxmlElement", null, [$.UxmlElement_dataProperty], null);
},

ValueRangeControl__valueChangedHandler: function(target, propDef, oldValue, newValue) {
  var t1;
  target.onValueChanged$1(newValue);
  if ($.ValueRangeControl__valueChangedArg == null) {
    t1 = new Q.EventArgs(null, null, null, null, false);
    t1.source = target;
    t1.currentSource = target;
    t1.handled = false;
    $.ValueRangeControl__valueChangedArg = t1;
  }
  t1 = $.ValueRangeControl__valueChangedArg;
  t1.source = target;
  target.notifyListeners$2($.ValueRangeControl_valueChangedEvent, t1);
},

ValueRangeControl__constraintValueChangedHandler: function(target, propDef, oldValue, newValue) {
  target._applyConstraints$0();
},

ValueRangeControl_registerValueRangeControl: function() {
  $.ValueRangeControl_minValueProperty = Q.ElementRegistry_registerProperty("minvalue", 3, 0, Q.ValueRangeControl__constraintValueChangedHandler$closure, 0);
  $.ValueRangeControl_maxValueProperty = Q.ElementRegistry_registerProperty("maxvalue", 3, 0, Q.ValueRangeControl__constraintValueChangedHandler$closure, 100);
  $.ValueRangeControl_valueProperty = Q.ElementRegistry_registerProperty("value", 3, 0, Q.ValueRangeControl__valueChangedHandler$closure, 0);
  $.ValueRangeControl_valueChangedEvent = new Q.EventDef("ValueChanged", $.Route_DIRECT, null, null);
  $.ValueRangeControl_valuerangecontrolElementDef = Q.ElementRegistry_register("ValueRangeControl", $.Control_controlElementDef, [$.ValueRangeControl_valueProperty, $.ValueRangeControl_minValueProperty, $.ValueRangeControl_maxValueProperty], [$.ValueRangeControl_valueChangedEvent]);
},

VBox_registerVBox: function() {
  $.VBox_spacingProperty = Q.ElementRegistry_registerProperty("spacing", 3, 24, null, 0);
  $.VBox_vBoxElementDef = Q.ElementRegistry_register("VBox", $.UIElementContainer_uielementcontainerElementDef, [$.VBox_spacingProperty], null);
},

WaitIndicator_registerWaitIndicator: function() {
  $.WaitIndicator_colorProperty = Q.ElementRegistry_registerProperty("Color", 6, 4, null, new Q.Color(4294967295, null));
  $.WaitIndicator_waitIndicatorElementDef = Q.ElementRegistry_register("WaitIndicator", $.ProgressControl_progresscontrolElementDef, [$.WaitIndicator_colorProperty], null);
},

WrapBox_registerWrapBox: function() {
  $.WrapBox_uniformWidthProperty = Q.ElementRegistry_registerProperty("uniformWidth", 4, 8, null, false);
  $.WrapBox_uniformHeightProperty = Q.ElementRegistry_registerProperty("uniformHeight", 4, 8, null, false);
  $.WrapBox_tileChildrenProperty = Q.ElementRegistry_registerProperty("tileChildren", 4, 8, null, false);
  $.WrapBox_directionProperty = Q.ElementRegistry_registerProperty("direction", 13, 8, null, 0);
  $.WrapBox_wrapboxElementDef = Q.ElementRegistry_register("WrapBox", $.UIElementContainer_uielementcontainerElementDef, [$.WrapBox_uniformWidthProperty, $.WrapBox_uniformHeightProperty, $.WrapBox_tileChildrenProperty, $.WrapBox_directionProperty], null);
},

Action: {"": "Object;",
  getActionData$1: function(control) {
    var t1, data;
    if (this.dataMap == null)
      this.dataMap = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UxmlElement, Q.ActionData);
    t1 = this.dataMap;
    data = t1.$index(t1, control);
    if (data == null) {
      data = new Q.ActionData(null, null, 0, null, null, null);
      t1 = this.dataMap;
      t1.$indexSet(t1, control, data);
    }
    return data;
  }
},

ActiveActionList: {"": "Object;_actionList,_valueList",
  add$3: function(_, action, oldValue, newValue) {
    var t1, index, t2;
    t1 = this._actionList;
    index = H.Arrays_indexOf(t1, action, 0, t1.length);
    if (index === -1) {
      this._actionList.push(action);
      t1 = this._valueList;
      t2 = new Q.ActionValues(null, null);
      t2.oldValue = oldValue;
      t2.newValue = newValue;
      t1.push(t2);
    } else {
      t1 = this._valueList;
      if (index >>> 0 !== index || index >= t1.length)
        throw H.ioore(t1, index);
      t1[index].newValue = newValue;
    }
  },
  ActiveActionList$0: function() {
    var t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.Action]);
    this._actionList = t1;
    t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.ActionValues]);
    this._valueList = t1;
  },
  static: {
ActiveActionList$: function() {
  var t1 = new Q.ActiveActionList(null, null);
  t1.ActiveActionList$0();
  return t1;
}}

},

ActionValues: {"": "Object;oldValue,newValue"},

ActionData: {"": "Object;startValue<,targetElement,actionState<,task,isUndefinedValue,tweener", static: {
"": "ActionData_ACTION_IDLE,ActionData_ACTION_ACTIVE,ActionData_ACTION_REVERSE",
}
},

AnimateAction: {"": "Action;target,targetValue,property,fromValue,toValue,duration,delay,easing,startElement,completeCallback,reversible,dataMap",
  completeCallback$2: function(arg0, arg1) {
    return this.completeCallback.call$2(arg0, arg1);
  },
  start$2: function(_, chromeRoot, control) {
    var data, t1, t2, currentTween;
    data = this.getActionData$1(control);
    if (data.get$actionState() === 0) {
      data.targetElement = control;
      t1 = data.targetElement;
      if (t1 == null) {
        P.print("severe: could not resolve target element " + H.S(this.target));
        return;
      }
      data.startValue = t1.getProperty$1(this.property);
      if (J.$eq(data.startValue, $.PropertyDefaults_NO_DEFAULT))
        data.startValue = null;
      t1 = data.startValue;
      if (typeof t1 === "number")
        if (J.get$isNaN$n(t1)) {
          t1 = this.property;
          t2 = $.UIElement_widthProperty;
          if (t1 == null ? t2 == null : t1 === t2) {
            data.isUndefinedValue = true;
            t1 = data.targetElement;
            t2 = J.getInterceptor(t1);
            if (typeof t1 === "object" && t1 !== null && !!t2.$isUIElement)
              data.startValue = t1.get$layoutWidth();
          } else {
            t2 = $.UIElement_heightProperty;
            if (t1 == null ? t2 == null : t1 === t2) {
              data.isUndefinedValue = true;
              t1 = data.targetElement;
              t2 = J.getInterceptor(t1);
              if (typeof t1 === "object" && t1 !== null && !!t2.$isUIElement)
                data.startValue = t1.get$layoutHeight();
            }
          }
        }
      data.actionState = 1;
      t1 = this.fromValue;
      if (t1 != null)
        Q.Action_applyPropertyValue(this, data.targetElement, this.property, t1);
      data.task = $.Application__current.get$scheduler().scheduleInRange$7(this.delay, this.duration, this.get$updateAnimation(), this, control, 0, 1);
    } else if (data.actionState === 2) {
      t1 = data.task;
      if (t1 != null) {
        currentTween = t1._currentTween;
        $.Application__current.get$scheduler().cancel$1(data.task);
        data.task = null;
      } else
        currentTween = 1;
      data.task = $.Application__current.get$scheduler().scheduleInRange$7(0, (1 - currentTween) * this.duration, this.get$updateAnimation(), this, control, currentTween, 1);
      data.task._currentTween = currentTween;
      data.actionState = 1;
    }
    this.startElement = data.targetElement;
  },
  updateAnimation$2: function(tweenValue, tag) {
    var data = this.getActionData$1(tag);
    if (data.get$actionState() === 1)
      Q.Action_applyPropertyValue(this, data.targetElement, this.property, this.getTweenValue$2(data, tweenValue));
    if (data.task._taskCompleted) {
      if (this.completeCallback != null)
        this.completeCallback$2(this, tag);
      if (!this.reversible)
        data.actionState = 0;
    }
  },
  get$updateAnimation: function() {
    return new Q.BoundClosure$20(this, Q.AnimateAction.prototype.updateAnimation$2, null, "updateAnimation$2");
  },
  getTweenValue$2: function(data, tween) {
    var t1, startNumber;
    t1 = this.toValue;
    if (typeof t1 === "number") {
      startNumber = data.get$startValue() == null ? 0 : data.startValue;
      if (typeof t1 !== "number")
        throw t1.$sub();
      if (typeof startNumber !== "number")
        throw H.iae(startNumber);
      t1 = J.$mul$n(tween, t1 - startNumber);
      if (typeof t1 !== "number")
        throw H.iae(t1);
      return startNumber + t1;
    }
    return;
  },
  static: {
"": "AnimateAction_DEFAULT_DURATION",
}

},

AnimationScheduler: {"": "Object;_tasks,_frameTimeStampValue,speedFactor",
  scheduleInRange$7: function(delay, duration, callback, target, tag, tweenStart, tweenEnd) {
    var task;
    this._frameTimeStampValue = P.DateTime$_now().millisecondsSinceEpoch;
    task = Q.ScheduledTask$(this._frameTimeStampValue, C.JSInt_methods.toInt$0(delay), C.JSNumber_methods.toInt$0(duration), callback, target, tag);
    task.tweenStart = tweenStart;
    task.tweenEnd = tweenEnd;
    this._tasks.push(task);
    Q.UpdateQueue__requestAnimationFrame();
    return task;
  },
  cancel$1: function(task) {
    var t1, index;
    if (!task._taskCompleted) {
      task._taskCompleted = true;
      t1 = this._tasks;
      index = H.Arrays_indexOf(t1, task, 0, t1.length);
      if (index !== -1)
        C.JSArray_methods.removeAt$1(this._tasks, index);
    }
  },
  enterFrame$0: function() {
    var taskCount, taskIndex, task, timeDelta, t1, t2, t3, exception;
    this._frameTimeStampValue = P.DateTime$_now().millisecondsSinceEpoch;
    taskCount = this._tasks.length;
    for (taskIndex = 0, t1 = this.speedFactor; J.$lt$n(taskIndex, taskCount); taskIndex = J.$add$ns(taskIndex, 1)) {
      t2 = this._tasks;
      t3 = taskIndex;
      if (t3 >>> 0 !== t3 || t3 >= t2.length)
        throw H.ioore(t2, t3);
      task = t2[t3];
      if (task == null) {
        C.JSArray_methods.removeAt$1(t2, taskIndex);
        taskIndex = J.$sub$n(taskIndex, 1);
        taskCount = J.$sub$n(taskCount, 1);
        continue;
      }
      timeDelta = this._frameTimeStampValue - task.get$_startTime();
      if (J.$ge$n(timeDelta, task.get$_delay()))
        if (J.$lt$n(timeDelta, task.get$_delay() + task.get$_uxml$_duration() / t1))
          try {
            t2 = task;
            t3 = task.get$tweenStart() + (task.get$tweenEnd() - task.get$tweenStart()) * (J.$sub$n(timeDelta, task.get$_delay()) / (task.get$_uxml$_duration() / t1));
            t2.set$_currentTween(t3);
            t2._callback$2(t3, t2._tag);
          } catch (exception) {
            t2 = H.unwrapException(exception);
            t3 = J.getInterceptor(t2);
            if (typeof t2 === "object" && t2 !== null && !!t3.$isError) {
              C.JSArray_methods.removeAt$1(this._tasks, taskIndex);
              taskIndex = J.$sub$n(taskIndex, 1);
              taskCount = J.$sub$n(taskCount, 1);
            } else
              throw exception;
          }

        else {
          task.set$_taskCompleted(true);
          C.JSArray_methods.removeAt$1(this._tasks, taskIndex);
          taskCount = J.$sub$n(taskCount, 1);
          taskIndex = J.$sub$n(taskIndex, 1);
          t2 = task;
          t3 = task.get$tweenEnd();
          t2.set$_currentTween(t3);
          t2._callback$2(t3, t2._tag);
          task.get$completionCallback();
        }
    }
  },
  AnimationScheduler$0: function() {
    this._frameTimeStampValue = P.DateTime$_now().millisecondsSinceEpoch;
    var t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.ScheduledTask]);
    this._tasks = t1;
  },
  static: {
AnimationScheduler$: function() {
  var t1 = new Q.AnimationScheduler(null, null, 1);
  t1.AnimationScheduler$0();
  return t1;
}}

},

Application: {"": "UxmlElement;",
  initialize$1: function(win) {
    var t1;
    $.Application__current = this;
    this._host = win;
    this._sharedMouseDownArgs = Q.MouseEventArgs$(0, 1, new Q.Coord(0, 0));
    this._sharedMouseArgs = Q.MouseEventArgs$(0, 1, new Q.Coord(0, 0));
    t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.UIElement]);
    this._mouseOverActiveList = t1;
    t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.UIElement]);
    this._dragEnterList = t1;
    $.Application_focusManager = new Q.FocusManager(null, null, null, null, null, null, 0, false, null, null, null, null);
    this.rootSurface = Q.RootSurface$(this, win);
    Q.UIPlatform_initializeAppEvents(this);
    if (this._content != null)
      this.hostContent$0();
    Q.UIPlatform_scheduleEnterFrame(this);
    return this;
  },
  _routeMouseEvent$4: function(pageX, pageY, button, mouseEventType) {
    var eventDef, t1, now, t2, targetSurface, targetElement, resEvent;
    switch (mouseEventType) {
      case 0:
        eventDef = $.UIElement_mouseDownEvent;
        this.set$busy(true);
        break;
      case 1:
        eventDef = $.UIElement_mouseUpEvent;
        break;
      case 2:
        eventDef = $.UIElement_mouseMoveEvent;
        break;
      default:
        return;
    }
    if (this.rootSurface == null)
      return;
    t1 = mouseEventType === 0;
    if (t1 && !$.Application_isMobile)
      this._mouseCaptureTarget = null;
    now = P.DateTime$_now().millisecondsSinceEpoch;
    t2 = mouseEventType === 2;
    if (!t2 && this._hasPendingMouseMove)
      this._processPendingMouseMoveEvent$0();
    if (t2 && !$.Application_isMobile) {
      if (now - this._lastMouseMoveTime < 16) {
        this._hasPendingMouseMove = true;
        this._pendingStageX = pageX;
        this._pendingStageY = pageY;
        this._pendingButtonDown = t1;
        this._pendingButton = button;
        this._pendingEventDef = eventDef;
        return;
      }
      this._lastMouseMoveTime = now;
    }
    targetSurface = this.rootSurface.hitTest$2(pageX, pageY);
    if ($.KeyboardEventArgs_ctrlKey === true)
      $.KeyboardEventArgs_ctrlKey = false;
    targetElement = targetSurface != null ? targetSurface._surfaceTarget : this._mouseCaptureTarget;
    resEvent = this._routeMouseEventToElement$7(targetElement, pageX, pageY, mouseEventType, button, button !== 0, eventDef);
    if (targetElement != null) {
      this._newMouseSurface = targetElement._hostSurface;
      this._newMouseCursor = Q.Cursor_getElementCursor(targetElement);
    } else
      this._newMouseCursor = $.Cursor_ARROW;
    if ($.Application_isIE)
      this._updateCursor$0();
    return resEvent;
  },
  _processPendingMouseMoveEvent$0: function() {
    var targetSurface, targetElement;
    this._hasPendingMouseMove = false;
    targetSurface = this.rootSurface.hitTest$2(this._pendingStageX, this._pendingStageY);
    if (targetSurface != null) {
      targetElement = targetSurface._surfaceTarget;
      if (targetElement != null) {
        this._routeMouseEventToElement$7(targetElement, this._pendingStageX, this._pendingStageY, 2, this._pendingButton, this._pendingButtonDown, this._pendingEventDef);
        this._newMouseSurface = targetSurface;
        this._newMouseCursor = Q.Cursor_getElementCursor(targetElement);
      }
      this._lastMouseMoveTime = P.DateTime$_now().millisecondsSinceEpoch;
    }
  },
  _routeMouseWheelEvent$1: function(delta) {
    var targetElement, t1;
    targetElement = this.elementAt$2(this, this._sharedMouseArgs.getMousePosition$1(null).x, this._sharedMouseArgs.getMousePosition$1(null).y);
    if (targetElement != null) {
      t1 = this._sharedMouseArgs;
      t1.handled = false;
      t1._forceDefault = false;
      this._sharedMouseArgs.event = $.UIElement_mouseWheelEvent;
      this._sharedMouseArgs._button = 0;
      this._sharedMouseArgs._eventType = 5;
      this._sharedMouseArgs.deltaY = delta;
      this._sharedMouseArgs.source = targetElement;
      this.notifyListeners$2($.Application_mousePreviewEvent, this._sharedMouseArgs);
      t1 = this._sharedMouseArgs;
      if (!t1.handled)
        targetElement.routeEvent$1(t1);
      return this._sharedMouseArgs.handled;
    }
    return false;
  },
  _keyDownEventHandler$1: function(e) {
    var t1, $back;
    this.set$busy(true);
    $.Application__cancelTextInput = false;
    if (this._sendDomKeyboardEvent$3(e, 0, $.UIElement_keyDownEvent))
      $.Application__cancelTextInput = true;
    else {
      t1 = J.getInterceptor$x(e);
      if (t1.get$keyCode(e) === 9) {
        if ($.Application_isFF)
          e.set$handled(true);
        $back = t1.get$shiftKey(e);
        $.Application_focusManager.processTabKey$1($back);
        $.Application__cancelTextInput = true;
      }
    }
    Q.UpdateQueue_flush();
    return $.Application__cancelTextInput;
  },
  _keyPressEventHandler$1: function(e) {
    var t1, $back;
    $.Application__cancelTextInput = false;
    if (this._sendDomKeyboardEvent$3(e, 0, $.UIElement_keyDownEvent))
      $.Application__cancelTextInput = true;
    else {
      t1 = J.getInterceptor$x(e);
      if (t1.get$keyCode(e) === 9) {
        $back = t1.get$shiftKey(e);
        $.Application_focusManager.processTabKey$1($back);
        $.Application__cancelTextInput = true;
      }
    }
    Q.UpdateQueue_flush();
    return $.Application__cancelTextInput;
  },
  _keyUpEventHandler$1: function(e) {
    $.Application__cancelTextInput = false;
    if (this._sendDomKeyboardEvent$3(e, 1, $.UIElement_keyUpEvent))
      $.Application__cancelTextInput = true;
    Q.UpdateQueue_flush();
    return $.Application__cancelTextInput;
  },
  _sendDomKeyboardEvent$3: function(domEvent, eventType, eventDef) {
    var t1 = J.getInterceptor$x(domEvent);
    $.KeyboardEventArgs_shiftKey = t1.get$shiftKey(domEvent);
    $.KeyboardEventArgs_ctrlKey = t1.get$ctrlKey(domEvent);
    $.KeyboardEventArgs_altKey = t1.get$altKey(domEvent);
    $.KeyboardEventArgs_metaKey = t1.get$metaKey(domEvent);
    return this.sendKeyboardEvent$4(t1.get$keyCode(domEvent), domEvent.charCode, eventType, eventDef);
  },
  sendKeyboardEvent$4: function(keyCode, charCode, eventType, eventDef) {
    var targetElement, t1;
    if (this.rootSurface == null)
      ;
    targetElement = this._content;
    if (this.hasListener$1($.Application_keyPreviewEvent)) {
      t1 = this._keyArgs;
      t1.handled = false;
      t1._forceDefault = false;
      this._keyArgs.event = eventDef;
      this._keyArgs._eventType = eventType;
      this._keyArgs.keyCode = keyCode;
      this._keyArgs.charCode = charCode;
      this._keyArgs.source = targetElement;
      this.notifyListeners$2($.Application_keyPreviewEvent, this._keyArgs);
      if (this._keyArgs.handled)
        return true;
    }
    t1 = $.Application_focusManager._focusTarget;
    if (t1 != null)
      if (this._routeKeyboardEventToElement$5(t1, keyCode, charCode, eventType, eventDef))
        return true;
    t1 = this._content;
    if (t1 != null)
      return this._routeKeyboardEventToElement$5(t1, keyCode, charCode, eventType, eventDef);
    return false;
  },
  _routeKeyboardEventToElement$5: function(targetElement, keyCode, charCode, keyEventType, eventDef) {
    var t1;
    if (targetElement != null) {
      t1 = this._keyArgs;
      t1.handled = false;
      t1._forceDefault = false;
      this._keyArgs.event = eventDef;
      this._keyArgs._eventType = keyEventType;
      this._keyArgs.keyCode = keyCode;
      this._keyArgs.charCode = charCode;
      this._keyArgs.source = targetElement;
      targetElement.routeEvent$1(this._keyArgs);
    }
    return this._keyArgs.handled;
  },
  elementAt$2: function(_, mouseX, mouseY) {
    var targetSurface = this.rootSurface.hitTest$2(mouseX, mouseY);
    return targetSurface != null ? targetSurface._surfaceTarget : null;
  },
  _routeMouseEventToElement$7: function(targetElement, mouseX, mouseY, mouseEventType, button, buttonDown, eventDef) {
    var t1, mouseEventArgs, mouseOverList, m, item, t2, movedOut, targetSurface, elementUnderMouse, t3, hitTestResult, element, t4;
    t1 = this._dragDropManager;
    if (t1 != null && t1._dragActive)
      mouseEventArgs = this.get$dragDropManager().mouseEventArgs;
    else
      mouseEventArgs = mouseEventType === 0 ? this._sharedMouseDownArgs : this._sharedMouseArgs;
    t1 = this._dragDropManager;
    mouseOverList = t1 != null && t1._dragActive ? this._dragEnterList : this._mouseOverActiveList;
    for (m = mouseOverList.length - 1, t1 = buttonDown === true; m >= 0; --m) {
      if (m >= mouseOverList.length)
        throw H.ioore(mouseOverList, m);
      item = mouseOverList[m];
      if (item._hostSurface != null) {
        mouseX.toString;
        mouseY.toString;
        t2 = !item.hitTestBoundingBox$2(mouseX, mouseY);
      } else
        t2 = true;
      movedOut = t2 && true;
      if (!movedOut) {
        targetSurface = this.rootSurface.hitTest$2(mouseX, mouseY);
        elementUnderMouse = targetSurface != null ? targetSurface._surfaceTarget : null;
        movedOut = elementUnderMouse != null && !item.isVisualChild$1(elementUnderMouse) && (item == null ? elementUnderMouse != null : item !== elementUnderMouse) && !item.get$overlayContainer().isVisualChild$1(elementUnderMouse) && true;
      }
      if (movedOut) {
        mouseEventArgs.handled = false;
        mouseEventArgs._forceDefault = false;
        mouseEventArgs.event = $.UIElement_mouseExitEvent;
        mouseEventArgs._button = t1 ? 1 : 0;
        mouseEventArgs._eventType = 4;
        mouseEventArgs.posX = mouseX;
        mouseEventArgs.posY = mouseY;
        mouseEventArgs.source = item;
        t2 = this._dragDropManager;
        t3 = t2 == null;
        if (!t3 && t2._dragActive) {
          if (t3) {
            t2 = new Q.DragDropManager(false, null, null, null, null, 0.5, null);
            t3 = new Q.DragEventArgs(null, null, null, null, null, null, null, null, null, null, null, null, false);
            t3.source = null;
            t3.currentSource = null;
            t3.handled = false;
            t3.MouseEventArgs$3(0, 1, new Q.Coord(0, 0));
            t2.mouseEventArgs = t3;
            $.DragDropManager_dropIndicators = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q.UIElement);
            this._dragDropManager = t2;
            this._dragEnterList = [];
          }
          this._dragDropManager.routeEvent$1(mouseEventArgs);
        } else {
          item.routeEvent$1(mouseEventArgs);
          if (mouseEventArgs.handled)
            item.setProperty$2(item, $.UIElement_isMouseOverProperty, false);
        }
        C.JSArray_methods.removeAt$1(mouseOverList, m);
      }
    }
    t2 = targetElement == null;
    hitTestResult = t2 ? false : targetElement.hitTestBoundingBox$2(mouseX, mouseY);
    if (hitTestResult)
      for (element = targetElement; element != null;) {
        if (H.Arrays_indexOf(mouseOverList, element, 0, mouseOverList.length) === -1) {
          mouseOverList.push(element);
          mouseEventArgs.handled = false;
          mouseEventArgs._forceDefault = false;
          mouseEventArgs.event = $.UIElement_mouseEnterEvent;
          mouseEventArgs._button = t1 ? 1 : 0;
          mouseEventArgs._eventType = 3;
          mouseEventArgs.posX = mouseX;
          mouseEventArgs.posY = mouseY;
          mouseEventArgs.source = element;
          t3 = this._dragDropManager;
          t4 = t3 == null;
          if (!t4 && t3._dragActive) {
            if (t4) {
              t3 = new Q.DragDropManager(false, null, null, null, null, 0.5, null);
              t4 = new Q.DragEventArgs(null, null, null, null, null, null, null, null, null, null, null, null, false);
              t4.source = null;
              t4.currentSource = null;
              t4.handled = false;
              t4.MouseEventArgs$3(0, 1, new Q.Coord(0, 0));
              t3.mouseEventArgs = t4;
              $.DragDropManager_dropIndicators = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q.UIElement);
              this._dragDropManager = t3;
              this._dragEnterList = [];
            }
            this._dragDropManager.routeEvent$1(mouseEventArgs);
          } else {
            element.routeEvent$1(mouseEventArgs);
            if (mouseEventArgs.handled)
              element.setProperty$2(element, $.UIElement_isMouseOverProperty, true);
          }
        }
        t3 = element.get$visualParent();
        element = element.parent;
        if (t3 == null ? element != null : t3 !== element)
          break;
      }
    if (!t2)
      if (!hitTestResult) {
        t2 = this._mouseCaptureTarget;
        t2 = targetElement == null ? t2 == null : targetElement === t2;
      } else
        t2 = true;
    else
      t2 = false;
    if (t2) {
      if (mouseEventType === 0)
        $.Application__mouseDownTarget = null;
      mouseEventArgs.handled = false;
      mouseEventArgs._forceDefault = false;
      mouseEventArgs.event = eventDef;
      mouseEventArgs._button = t1 ? 1 : 0;
      mouseEventArgs._eventType = mouseEventType;
      mouseEventArgs.posX = mouseX;
      mouseEventArgs.posY = mouseY;
      mouseEventArgs.source = targetElement;
      t1 = this._dragDropManager;
      if (t1 != null && t1._dragActive)
        this.get$dragDropManager().routeEvent$1(mouseEventArgs);
      else {
        this.notifyListeners$2($.Application_mousePreviewEvent, mouseEventArgs);
        if (!mouseEventArgs.handled)
          targetElement.routeEvent$1(mouseEventArgs);
      }
    } else
      this.notifyListeners$2($.Application_mousePreviewEvent, mouseEventArgs);
    return mouseEventArgs;
  },
  _enterFrame$1: function(time) {
    var now, t1;
    now = P.DateTime$_now().millisecondsSinceEpoch;
    t1 = this._inputTs;
    if (now - t1 > 4000 || now < t1)
      t1 = true;
    else
      t1 = false;
    if (t1)
      this.setProperty$2(this, $.Application_busyProperty, false);
    if (this._hasPendingMouseMove && this.rootSurface != null)
      if (P.DateTime$_now().millisecondsSinceEpoch - this._lastMouseMoveTime > 16)
        this._processPendingMouseMoveEvent$0();
    t1 = this._scheduler;
    if (t1 != null)
      t1.enterFrame$0();
    Q.UpdateQueue_flush();
    this._updateCursor$0();
    t1 = this._scheduler;
    if (t1 != null && t1._tasks.length !== 0)
      Q.UIPlatform_scheduleEnterFrame(this);
  },
  _updateCursor$0: function() {
    if (this._newMouseCursor != null) {
      var t1 = this._prevMouseSurface;
      if (t1 != null) {
        t1.cursorChanged$1(null);
        this._prevMouseSurface = null;
      }
      Q.Cursor_setCursor(this._newMouseCursor);
      t1 = this._newMouseSurface;
      if (t1 != null) {
        t1.cursorChanged$1(this._newMouseCursor);
        this._prevMouseSurface = this._newMouseSurface;
      }
      this._newMouseCursor = null;
    }
  },
  hostContent$0: function() {
    var t1, overlayCont, t2, t3;
    if (this.rootSurface == null)
      return;
    t1 = this._rootElement;
    if (t1 == null) {
      overlayCont = Q.OverlayContainer$();
      this._rootElement = overlayCont;
      t1 = this._content;
      t2 = $.ContentContainer_checkId;
      if (typeof t2 !== "number")
        throw t2.$add();
      $.ContentContainer_checkId = t2 + 1;
      overlayCont.setProperty$2(overlayCont, $.ContentContainer_contentProperty, t1);
      this._rootElement.initSurface$1(this.rootSurface);
    } else {
      t2 = this._content;
      t1.toString;
      t3 = $.ContentContainer_checkId;
      if (typeof t3 !== "number")
        throw t3.$add();
      $.ContentContainer_checkId = t3 + 1;
      t1.setProperty$2(t1, $.ContentContainer_contentProperty, t2);
    }
    if (this._content != null) {
      this.relayoutRoot$0();
      Q.UpdateQueue_flush();
    }
  },
  set$content: function(_, value) {
    if (this._content !== value) {
      this._content = value;
      this.hostContent$0();
    }
  },
  relayoutRoot$0: function() {
    var t1, w, h, disableScrollBars;
    t1 = this._rootElement;
    if (t1 == null)
      return;
    t1.measure$2(this._hostWidth, this._hostHeight);
    t1 = this._rootElement;
    w = t1.measuredWidth;
    h = t1.measuredHeight;
    disableScrollBars = J.$le$n(h, this._hostHeight) && J.$le$n(w, this._hostWidth);
    this._rootElement.measuredWidth = P.max(this._hostWidth, w);
    this._rootElement.measuredHeight = P.max(this._hostHeight, h);
    this.rootSurface.onRelayoutRoot$1(disableScrollBars);
    t1 = this._rootElement;
    t1.layout$4(0, 0, t1.measuredWidth, t1.measuredHeight);
  },
  error$1: function(_, message) {
    P.print(message);
  },
  get$error: function(_receiver) {
    return new W.BoundClosure$i1(this, Q.Application.prototype.error$1, _receiver, "error$1");
  },
  get$scheduler: function() {
    if (this._scheduler == null)
      this._scheduler = Q.AnimationScheduler$();
    return this._scheduler;
  },
  get$dragDropManager: function() {
    var t1, t2;
    if (this._dragDropManager == null) {
      t1 = new Q.DragDropManager(false, null, null, null, null, 0.5, null);
      t2 = new Q.DragEventArgs(null, null, null, null, null, null, null, null, null, null, null, null, false);
      t2.source = null;
      t2.currentSource = null;
      t2.handled = false;
      t2.MouseEventArgs$3(0, 1, new Q.Coord(0, 0));
      t1.mouseEventArgs = t2;
      $.DragDropManager_dropIndicators = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q.UIElement);
      this._dragDropManager = t1;
      this._dragEnterList = [];
    }
    return this._dragDropManager;
  },
  getMousePosition$1: function(element) {
    return this._sharedMouseArgs.getMousePosition$1(element);
  },
  get$_toolTipManager: function() {
    if (this._toolTips == null)
      this._toolTips = Q._ToolTipManager$();
    return this._toolTips;
  },
  get$_modalElement: function() {
    return;
  },
  set$busy: function(value) {
    if (value)
      this._inputTs = P.DateTime$_now().millisecondsSinceEpoch;
    this.setProperty$2(this, $.Application_busyProperty, value);
  },
  getDefinition$0: function() {
    return $.Application_applicationElementDef;
  },
  Application$0: function() {
    if (!$.Application__registered) {
      $.Application__registered = true;
      Q.Application__registerApplication();
      Q.UIPlatform_detectBrowser();
    }
    $.Application__current = this;
    var t1 = new Q.Resources(null, null);
    t1.clear$0(t1);
    this._resources = t1;
    t1 = new Q.KeyboardEventArgs(null, null, null, null, null, null, null, false);
    t1.source = null;
    t1.currentSource = null;
    t1.handled = false;
    t1._eventType = 0;
    t1.keyCode = 0;
    t1.charCode = 0;
    this._keyArgs = t1;
  }
},

BorderRadius: {"": "Object;topLeft>,topRight>,bottomRight>,bottomLeft>",
  isUniform$0: function() {
    var t1, t2;
    t1 = this.topLeft;
    if (t1 === this.topRight) {
      t2 = this.bottomLeft;
      t1 = t2 === this.bottomRight && t1 === t2;
    } else
      t1 = false;
    return t1;
  },
  BorderRadius$uniform$1: function(size) {
    this.topLeft = size;
    this.topRight = size;
    this.bottomLeft = size;
    this.bottomRight = size;
  },
  static: {
"": "BorderRadius_EMPTY",
BorderRadius$uniform: function(size) {
  var t1 = new Q.BorderRadius(null, null, null, null);
  t1.BorderRadius$uniform$1(size);
  return t1;
}}

},

Button: {"": "ContentContainer;"},

Canvas: {"": "UIElementContainer;sizeToContent,forceMeasureEmpty,childElements,_cachedPadding,chromeTree,_chromeDirty,_elementFlags,_hostSurface,app,measuredWidth,measuredHeight,layoutX,layoutY,layoutWidth,layoutHeight,_layoutFlags,_prevLayoutWidth,_prevLayoutHeight,_prevLayoutX,_prevLayoutY,_prevMeasureAvailableWidth,_prevMeasureAvailableHeight,_internalWidth,_internalHeight,_margins,_effects,_mask,sharedP,_resources,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  onMeasure$2: function(availableWidth, availableHeight) {
    var t1, maxX, maxY, relayoutRequired, i, t2, child, prevMeasuredW, prevMeasuredH, val;
    t1 = this.childElements;
    for (maxX = 0, maxY = 0, relayoutRequired = false, i = 0; i < (t1 == null ? 0 : t1.length); ++i) {
      t2 = this.childElements;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      child = t2[i];
      prevMeasuredW = child.get$measuredWidth();
      prevMeasuredH = child.get$measuredHeight();
      child.measure$2(availableWidth, availableHeight);
      if (!J.$eq(prevMeasuredW, child.measuredWidth) || !J.$eq(prevMeasuredH, child.measuredHeight))
        relayoutRequired = true;
      val = J.$add$ns(child.getProperty$1($.Canvas_leftProperty), child.measuredWidth);
      if (J.$gt$n(val, maxX))
        maxX = val;
      val = J.$add$ns(child.getProperty$1($.Canvas_topProperty), child.measuredHeight);
      if (J.$gt$n(val, maxY))
        maxY = val;
    }
    if (this.forceMeasureEmpty) {
      maxX = 0;
      maxY = 0;
    }
    this.measuredWidth = maxX;
    this.measuredHeight = maxY;
    return relayoutRequired;
  },
  invalidateSizeForChild$1: function(child) {
    if (this.sizeToContent)
      Q.UIElement.prototype.invalidateSizeForChild$1.call(this, child);
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
    var t1, numChildren, childIndex, element;
    t1 = this.childElements;
    numChildren = t1 == null ? 0 : t1.length;
    for (childIndex = 0; childIndex < numChildren; ++childIndex) {
      t1 = this.childElements;
      if (childIndex >= t1.length)
        throw H.ioore(t1, childIndex);
      element = t1[childIndex];
      element.layout$4(element.getProperty$1($.Canvas_leftProperty), element.getProperty$1($.Canvas_topProperty), element.measuredWidth, element.measuredHeight);
    }
  },
  getDefinition$0: function() {
    return $.Canvas__canvasElementDef;
  },
  $isCanvas: true,
  static: {
"": "Canvas_leftProperty,Canvas_topProperty,Canvas__canvasElementDef",
Canvas__leftChangedHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.get$visualParent();
  t2 = J.getInterceptor(t1);
  if (typeof t1 === "object" && t1 !== null && !!t2.$isCanvas)
    if (target._hasPrevLayoutData$0())
      target.layout$4(newValue, target._prevLayoutY, target._prevLayoutWidth, target._prevLayoutHeight);
},

Canvas__topChangedHandler: function(target, property, oldValue, newValue) {
  var t1, t2;
  t1 = target.get$visualParent();
  t2 = J.getInterceptor(t1);
  if (typeof t1 === "object" && t1 !== null && !!t2.$isCanvas)
    if (target._hasPrevLayoutData$0())
      target.layout$4(target._prevLayoutX, newValue, target._prevLayoutWidth, target._prevLayoutHeight);
},

Canvas_registerCanvas: function() {
  $.Canvas_leftProperty = Q.ElementRegistry_registerProperty("Left", 3, 2, Q.Canvas__leftChangedHandler$closure, 0);
  $.Canvas_topProperty = Q.ElementRegistry_registerProperty("Top", 3, 2, Q.Canvas__topChangedHandler$closure, 0);
  $.Canvas__canvasElementDef = Q.ElementRegistry_register("Canvas", $.UIElementContainer_uielementcontainerElementDef, [$.Canvas_leftProperty, $.Canvas_topProperty], null);
}}

},

CollectionChangedEvent: {"": "EventArgs;type,index,count,event,handled,source,currentSource,_forceDefault", static: {
"": "CollectionChangedEvent_CHANGETYPE_ADD,CollectionChangedEvent_CHANGETYPE_REMOVING,CollectionChangedEvent_CHANGETYPE_REMOVE,CollectionChangedEvent_CHANGETYPE_MODIFY,CollectionChangedEvent__objectPool,CollectionChangedEvent_eventDef",
CollectionChangedEvent_create: function(source, type, index, count) {
  var t1, cEvent;
  t1 = $.CollectionChangedEvent__objectPool;
  if (t1 == null || t1.length === 0) {
    t1 = new Q.CollectionChangedEvent(null, null, null, null, null, null, null, false);
    t1.source = source;
    t1.currentSource = source;
    t1.handled = false;
    t1.type = type;
    t1.index = index;
    t1.count = count;
    return t1;
  }
  if (0 >= t1.length)
    throw H.ioore(t1, 0);
  cEvent = t1.pop();
  cEvent.source = source;
  cEvent.type = type;
  cEvent.index = index;
  cEvent.count = count;
  return cEvent;
},

CollectionChangedEvent_release: function(e) {
  var t1;
  if ($.CollectionChangedEvent__objectPool == null) {
    t1 = [];
    H.setRuntimeTypeInfo(t1, [Q.CollectionChangedEvent]);
    $.CollectionChangedEvent__objectPool = t1;
  }
  $.CollectionChangedEvent__objectPool.push(e);
}}
},

Color: {"": "Object;color,_colorText",
  get$hashCode: function(_) {
    return this.color;
  },
  $eq: function(_, other) {
    var t1;
    if (other == null)
      return false;
    t1 = J.getInterceptor(other);
    if (typeof other === "object" && other !== null && !!t1.$isColor)
      return other.color === this.color;
    return false;
  },
  pad$1: function(input) {
    var t1 = input.length;
    if (t1 === 0)
      return "00";
    if (t1 === 1)
      return "0" + input;
    return input;
  },
  toString$0: function(_) {
    var sb;
    if (this._colorText == null) {
      sb = P.StringBuffer$("");
      if ((C.JSInt_methods.$shr(this.color, 24) & 255) !== 255) {
        sb.write$1("rgba(");
        sb.write$1(C.JSInt_methods.toString$0(C.JSInt_methods.$shr(this.color, 16) & 255));
        sb.write$1(",");
        sb.write$1(C.JSInt_methods.toString$0(C.JSInt_methods.$shr(this.color, 8) & 255));
        sb.write$1(",");
        sb.write$1(C.JSInt_methods.toString$0(this.color & 255));
        sb.write$1(",");
        sb.write$1(C.JSInt_methods.toString$0((C.JSInt_methods.$shr(this.color, 24) & 255) / 255));
        sb.write$1(")");
      } else {
        sb.write$1("#");
        sb.write$1(this.pad$1(C.JSInt_methods.toRadixString$1(C.JSInt_methods.$shr(this.color, 16) & 255, 16)));
        sb.write$1(this.pad$1(C.JSInt_methods.toRadixString$1(C.JSInt_methods.$shr(this.color, 8) & 255, 16)));
        sb.write$1(this.pad$1(C.JSInt_methods.toRadixString$1(this.color & 255, 16)));
      }
      this._colorText = sb._contents;
    }
    return this._colorText;
  },
  $isColor: true,
  static: {
"": "Color_EMPTY,Color_BLACK,Color_BLUE,Color_CYAN,Color_DARK_GRAY,Color_GRAY,Color_GREEN,Color_LIGHT_GRAY,Color_MAGENTA,Color_ORANGE,Color_PINK,Color_RED,Color_WHITE,Color_YELLOW",
Color_initialize: function() {
  $.Color_EMPTY = new Q.Color(0, null);
  $.Color_BLACK = new Q.Color(4278190080, null);
  $.Color_BLUE = new Q.Color(4278190335, null);
  $.Color_CYAN = new Q.Color(4278255615, null);
  $.Color_DARK_GRAY = new Q.Color(4282400832, null);
  $.Color_GRAY = new Q.Color(4286611584, null);
  $.Color_GREEN = new Q.Color(4278255360, null);
  $.Color_LIGHT_GRAY = new Q.Color(4290822336, null);
  $.Color_MAGENTA = new Q.Color(4294902015, null);
  $.Color_ORANGE = new Q.Color(4294952960, null);
  $.Color_PINK = new Q.Color(4294946735, null);
  $.Color_RED = new Q.Color(4294901760, null);
  $.Color_WHITE = new Q.Color(4294967295, null);
  $.Color_YELLOW = new Q.Color(4294967040, null);
}}

},

ContentContainer: {"": "Control;",
  updateContent$1: function(newContent) {
    var t1;
    if (this.getProperty$1($.Control_chromeProperty) == null) {
      t1 = this._cachedContent;
      if (t1 != null)
        this.removeRawChild$1(t1);
      if (newContent != null) {
        this._cachedContent = this.createControlFromContent$1(newContent);
        t1 = this._cachedContent;
        if (t1 != null)
          this.insertRawChild$2(t1, -1);
      } else
        this._cachedContent = null;
    }
  },
  createControlFromContent$1: function($content) {
    var label, t1;
    if (typeof $content === "string") {
      label = new Q.Label(null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
      label.UIElement$0();
      label._cachedPadding = $.Margin_EMPTY;
      label.setProperty$2(label, $.UIElement_mouseEnabledProperty, false);
      label.setProperty$2(label, $.Label_textProperty, $content);
      return label;
    } else if (typeof $content === "number" || typeof $content === "number" && Math.floor($content) === $content) {
      label = new Q.Label(null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
      label.UIElement$0();
      label._cachedPadding = $.Margin_EMPTY;
      label.setProperty$2(label, $.UIElement_mouseEnabledProperty, false);
      t1 = J.toString$0($content);
      label.setProperty$2(label, $.Label_textProperty, t1);
      return label;
    } else {
      t1 = J.getInterceptor($content);
      if (typeof $content === "object" && $content !== null && !!t1.$isUIElement)
        return $content;
    }
    return;
  },
  getRawChildCount$0: function() {
    return this._cachedContent == null ? 0 : 1;
  },
  getRawChild$1: function(index) {
    return this._cachedContent;
  },
  onMeasure$2: function(availableWidth, availableHeight) {
    var pw, ph, t1, maxWidth, maxHeight, t2;
    pw = J.$add$ns(J.get$left$x(this._cachedPadding), J.get$right$x(this._cachedPadding));
    ph = J.$add$ns(J.get$top$x(this._cachedPadding), J.get$bottom$x(this._cachedPadding));
    t1 = this._cachedContent;
    if (t1 != null) {
      t1.measure$2(J.$sub$n(availableWidth, pw), J.$sub$n(availableHeight, ph));
      t1 = this._cachedContent;
      maxWidth = t1.measuredWidth;
      maxHeight = t1.measuredHeight;
    } else {
      maxWidth = 0;
      maxHeight = 0;
    }
    t1 = J.$add$ns(maxWidth, pw);
    t2 = J.$add$ns(maxHeight, ph);
    this.measuredWidth = t1;
    this.measuredHeight = t2;
    return false;
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
    var pw, ph, t1;
    pw = J.$add$ns(J.get$left$x(this._cachedPadding), J.get$right$x(this._cachedPadding));
    ph = J.$add$ns(J.get$top$x(this._cachedPadding), J.get$bottom$x(this._cachedPadding));
    t1 = this._cachedContent;
    if (t1 != null)
      t1.layout$4(J.get$left$x(this._cachedPadding), J.get$top$x(this._cachedPadding), J.$sub$n(targetWidth, pw), J.$sub$n(targetHeight, ph));
  },
  getDefinition$0: function() {
    return $.ContentContainer_contentcontainerElementDef;
  }
},

Control: {"": "UIElement;_cachedPadding?",
  initSurface$2: function(parentSurface, index) {
    var res;
    if (this.getProperty$1($.Control_chromeProperty) == null) {
      res = this.findResource$1(this.getDefinition$0());
      if (res != null)
        this.setProperty$2(this, $.Control_chromeProperty, res);
    }
    if (this._chromeDirty) {
      this._generateChromeTree$0();
      this.applyEffects$0();
    }
    Q.UIElement.prototype.initSurface$2.call(this, parentSurface, index);
    if (this.getProperty$1($.Control_borderRadiusProperty) != null && this._hostSurface != null)
      this._hostSurface.setBorderRadius$1(this.getProperty$1($.Control_borderRadiusProperty));
  },
  initSurface$1: function(parentSurface) {
    return this.initSurface$2(parentSurface, -1);
  },
  _generateChromeTree$0: function() {
    var t1, t2, prevController, newController;
    this._chromeDirty = false;
    t1 = $.Controller_controllerProperty;
    t2 = this._propBag;
    prevController = t2 != null && t2.containsKey$1(t1) ? this.getProperty$1($.Controller_controllerProperty) : null;
    if (this.getProperty$1($.Control_chromeProperty) != null) {
      this.chromeTree = this.getProperty$1($.Control_chromeProperty).applyToTarget$1(this);
      t1 = $.Controller_controllerProperty;
      t2 = this._propBag;
      if (t2 != null && t2.containsKey$1(t1)) {
        newController = this.getProperty$1($.Controller_controllerProperty);
        if (!J.$eq(prevController, newController))
          newController.initCompleted$0();
      }
    }
  },
  getRawChildCount$0: function() {
    return 0;
  },
  getRawChild$1: function(index) {
    return this.chromeTree;
  },
  onRedraw$1: function(surface) {
    var t1 = this._hostSurface;
    if (t1 != null) {
      t1.setBackground$1(this.getProperty$1($.Control_backgroundProperty));
      this._hostSurface.setBorderRadius$1(this.getProperty$1($.Control_borderRadiusProperty));
    }
  },
  onMeasure$2: function(availableWidth, availableHeight) {
    var pw, ph;
    if (this._chromeDirty)
      this._generateChromeTree$0();
    pw = J.$add$ns(J.get$left$x(this._cachedPadding), J.get$right$x(this._cachedPadding));
    ph = J.$add$ns(J.get$top$x(this._cachedPadding), J.get$bottom$x(this._cachedPadding));
    if (typeof pw !== "number")
      throw H.iae(pw);
    if (typeof ph !== "number")
      throw H.iae(ph);
    this.measuredWidth = 0 + pw;
    this.measuredHeight = 0 + ph;
    return false;
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
  },
  getElement$1: function(elementId) {
    var element;
    if (this._chromeDirty)
      this._generateChromeTree$0();
    element = Q.UIElement.prototype.getElement$1.call(this, elementId);
    if (element == null)
      ;
    return element;
  },
  onChromeChanged$2: function(oldChrome, newChrome) {
    if (this._hostSurface == null)
      this._chromeDirty = true;
    else {
      this._generateChromeTree$0();
      this.applyEffects$0();
    }
  },
  onFontChanged$0: function() {
  },
  getDefinition$0: function() {
    return $.Control_controlElementDef;
  },
  $isControl: true
},

Control_registerControl_closure: {"": "Closure;",
  call$4: function(target, property, oldVal, newVal) {
    var t1 = J.getInterceptor(target);
    if (typeof target === "object" && target !== null && !!t1.$isControl)
      target.onChromeChanged$2(oldVal, newVal);
  }
},

Coord: {"": "Object;x>,y>"},

Cursor: {"": "Object;name>", static: {
"": "Cursor_ARROW,Cursor_BUTTON,Cursor_HAND,Cursor_IBEAM,Cursor_WAIT,Cursor_CROSSHAIR,Cursor_cursorProperty,Cursor__activeCursor,Cursor_host",
Cursor_getElementCursor: function(element) {
  var cursor;
  for (; element != null;) {
    cursor = element.getProperty$1($.Cursor_cursorProperty);
    if (cursor != null)
      return cursor;
    element = element.get$visualParent();
  }
  return $.Cursor_ARROW;
},

Cursor_setCursor: function(cursor) {
  var surface;
  if (!J.$eq($.Cursor__activeCursor, cursor)) {
    surface = $.Application__current.rootSurface;
    if (surface != null)
      if (surface.setupTopLevelCursor$1(cursor))
        $.Cursor__activeCursor = cursor;
  }
},

Cursor_registerCursor: function() {
  $.Cursor_ARROW = new Q.Cursor("default");
  $.Cursor_BUTTON = new Q.Cursor("pointer");
  $.Cursor_HAND = new Q.Cursor("hand");
  $.Cursor_IBEAM = new Q.Cursor("text");
  $.Cursor_WAIT = new Q.Cursor("wait");
  $.Cursor_CROSSHAIR = new Q.Cursor("crosshair");
  $.Cursor_cursorProperty = Q.ElementRegistry_registerProperty("Cursor", 1, 2, null, null);
}}
},

DataEvent: {"": "EventArgs;"},

DragDropManager: {"": "Object;_dragActive,_sourceData,_sourceElement,_moveOverlay,_dragOffset,DRAG_DROP_OPACITY,mouseEventArgs",
  routeEvent$1: function(mouseArgs) {
    var target, t1, t2;
    target = mouseArgs.source;
    t1 = mouseArgs.event;
    t2 = $.UIElement_mouseEnterEvent;
    if (t1 == null ? t2 == null : t1 === t2)
      mouseArgs.event = $.UIElement_dragEnterEvent;
    t1 = mouseArgs.event;
    t2 = $.UIElement_mouseExitEvent;
    if (t1 == null ? t2 == null : t1 === t2)
      mouseArgs.event = $.UIElement_dragLeaveEvent;
    t1 = mouseArgs.event;
    t2 = $.UIElement_mouseMoveEvent;
    if (t1 == null ? t2 == null : t1 === t2)
      mouseArgs.event = $.UIElement_dragOverEvent;
    t1 = mouseArgs.event;
    t2 = $.UIElement_mouseUpEvent;
    if (t1 == null ? t2 == null : t1 === t2) {
      t1 = this._sourceElement;
      t1.releaseMouse$0();
      mouseArgs.event = $.UIElement_dragEndEvent;
      mouseArgs.handled = false;
      t1.routeEvent$1(mouseArgs);
      mouseArgs.event = $.UIElement_dropEvent;
      mouseArgs.handled = false;
      this._dragActive = false;
    }
    target.routeEvent$1(mouseArgs);
  },
  static: {
"": "DragDropManager_dropIndicators",
}

},

Effect: {"": "UxmlElement;"},

ElementDef: {"": "Object;name>,parentDef,properties,_events",
  addProperty$1: function(prop) {
    var t1;
    if (prop._ownerType == null)
      prop._ownerType = this;
    if (this.properties == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.PropertyDefinition]);
      this.properties = t1;
    }
    this.properties.push(prop);
    Q.PropertyCache_clearCache(this);
    return prop;
  },
  get$hashCode: function(_) {
    return C.JSString_methods.get$hashCode(this.name);
  }
},

PropertyDefinition: {"": "Object;name>,flags,dataType,_defaultValue,_ownerType,_changeCallback,_defaultOverrides,_callbackOverrides",
  overrideCallback$2: function(def, handler) {
    var t1;
    if (this._callbackOverrides == null)
      this._callbackOverrides = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, {func: "void__IKeyValue_Object_Object_Object", void: true, args: [Q.IKeyValue, P.Object, P.Object, P.Object]});
    t1 = this._callbackOverrides;
    t1.$indexSet(t1, def.name, handler);
    return this;
  },
  overrideDefaultValue$2: function(def, value) {
    var t1;
    if (this._defaultOverrides == null)
      this._defaultOverrides = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.ElementDef, P.Object);
    t1 = this._defaultOverrides;
    t1.$indexSet(t1, def, value);
    return this;
  },
  getDefaultValue$1: function(def) {
    var t1 = this._defaultOverrides;
    if (t1 == null)
      return this._defaultValue;
    if (t1.containsKey$1(def)) {
      t1 = this._defaultOverrides;
      t1 = t1.$index(t1, def);
    } else
      t1 = this._defaultValue;
    return t1;
  },
  getCallback$1: function(def) {
    var t1 = this._callbackOverrides;
    if (t1 != null && t1.containsKey$1(def.name)) {
      t1 = this._callbackOverrides;
      return t1.$index(t1, def.name);
    }
    return this._changeCallback;
  },
  get$hashCode: function(_) {
    return J.get$hashCode$(this.name);
  },
  PropertyDefinition$5: function($name, type, propertyFlags, handler, defaultVal) {
    this.name = $name;
    this._ownerType = null;
    this.dataType = type;
    this.flags = propertyFlags;
    this._defaultValue = defaultVal;
    this._changeCallback = handler;
  },
  $isPropertyDefinition: true,
  static: {
PropertyDefinition$: function($name, type, propertyFlags, handler, defaultVal) {
  var t1 = new Q.PropertyDefinition(null, null, null, null, null, null, null, null);
  t1.PropertyDefinition$5($name, type, propertyFlags, handler, defaultVal);
  return t1;
}}

},

EventDef: {"": "Object;name>,route,targetTypes,targetHandler",
  addHandler$2: function(targetType, handler) {
    var t1;
    if (this.targetTypes == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.ElementDef]);
      this.targetTypes = t1;
      t1 = [];
      H.setRuntimeTypeInfo(t1, [{func: "void__UxmlElement_EventArgs", void: true, args: [Q.UxmlElement, Q.EventArgs]}]);
      this.targetHandler = t1;
    }
    this.targetTypes.push(targetType);
    this.targetHandler.push(handler);
  },
  callHandler$2: function(targetObject, $arguments) {
    var t1, handlerCount, def, i;
    t1 = this.targetTypes;
    if (t1 == null)
      return;
    handlerCount = t1.length;
    def = targetObject.getDefinition$0();
    for (; def != null;) {
      for (i = 0; i < handlerCount; ++i) {
        t1 = this.targetTypes;
        if (i >= t1.length)
          throw H.ioore(t1, i);
        t1 = t1[i];
        if (def == null ? t1 == null : def === t1) {
          t1 = this.targetHandler;
          if (i >= t1.length)
            throw H.ioore(t1, i);
          t1[i].call$2(targetObject, $arguments);
        }
      }
      def = def.parentDef;
    }
  },
  get$hashCode: function(_) {
    return C.JSString_methods.get$hashCode(this.name);
  }
},

EventArgs: {"": "Object;event,handled?,source>,currentSource,_forceDefault"},

Route: {"": "Object;route", static: {
"": "Route_DIRECT,Route_BUBBLE,Route_TUNNEL",
Route__initRoute: function() {
  $.Route_DIRECT = new Q.Route(0);
  $.Route_BUBBLE = new Q.Route(1);
  $.Route_TUNNEL = new Q.Route(2);
}}
},

Filter: {"": "UxmlElement;_owner?",
  set$target: function(_, element) {
    var t1;
    if (element != null) {
      t1 = this._owner;
      t1 = t1 != null && (t1 == null ? element != null : t1 !== element);
    } else
      t1 = false;
    if (t1)
      throw H.wrapException(new P.ArgumentError("Target element already assigned to filter"));
    this._owner = element;
    t1 = this._owner;
    if (t1 != null)
      Q.UpdateQueue_updateFilters(t1);
  },
  onPropertyChanged$3: function(propertyKey, oldVal, newVal) {
    var t1, $event;
    t1 = this._owner;
    if (t1 != null)
      Q.UpdateQueue_updateFilters(t1);
    if (this.hasListener$1($.Filter_changedEvent)) {
      $event = new Q.EventArgs(null, null, null, null, false);
      $event.source = this;
      $event.currentSource = this;
      $event.handled = false;
      this.notifyListeners$2($.Filter_changedEvent, $event);
    }
  },
  getDefinition$0: function() {
    return $.Filter_filterElementDef;
  }
},

Filters: {"": "Object;_list,_innerShadow<,_dropShadow<,_owner",
  set$owner: function(value) {
    var filterCount, f, t1;
    this._owner = value;
    filterCount = this._list.length;
    for (f = 0; f < filterCount; ++f) {
      t1 = this._list;
      if (f >= t1.length)
        throw H.ioore(t1, f);
      t1[f].set$_owner(value);
    }
  },
  get$length: function(_) {
    return this._list.length;
  },
  add$1: function(_, filter) {
    this._list.push(filter);
    filter.set$target(filter, this._owner);
  },
  getFilter$1: function(index) {
    var t1 = this._list;
    if (index < 0 || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  }
},

FocusEventArgs: {"": "EventArgs;_oldElement,_newElement,event,handled,source,currentSource,_forceDefault"},

FocusManager: {"": "UxmlElement;_focusHandler,_focusTarget,_focusOverlay,_focusEventArg,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  processTabKey$1: function($back) {
    var focusData, prevFocus, t1, newFocus;
    $.Application__current.get$_modalElement();
    focusData = Q.FocusScopeData_findFocusGroup(this._focusTarget);
    prevFocus = this._focusTarget;
    t1 = $back === true;
    newFocus = t1 ? focusData.getPrevTabStop$1(prevFocus) : focusData.getNextTabStop$1(prevFocus);
    if (newFocus != null) {
      newFocus.setProperty$2(newFocus, $.UIElement_isFocusedProperty, true);
      if (!J.$eq(this._focusTarget, newFocus) && t1 && J.$eq(this._focusTarget, prevFocus)) {
        newFocus = focusData.getTabStop$2(newFocus, 2);
        newFocus.setProperty$2(newFocus, $.UIElement_isFocusedProperty, true);
        newFocus.scrollIntoView$0(newFocus);
      }
      if (!Q.FocusScopeData__isValidTabStop(newFocus))
        newFocus.setProperty$2(newFocus, $.UIElement_isFocusedProperty, false);
    }
  },
  _focusChangedHandler$4: function(target, propDef, oldValue, newValue) {
    var t1, t2, skippedFocusRemoval;
    if (this._focusEventArg == null) {
      t1 = $.Application_focusManager;
      t2 = new Q.FocusEventArgs(null, null, null, null, null, null, false);
      t2.source = t1;
      t2.currentSource = t1;
      t2.handled = false;
      t2._oldElement = null;
      t2._newElement = null;
      this._focusEventArg = t2;
    }
    this._focusEventArg._oldElement = this._focusTarget;
    if (newValue === true) {
      t1 = this._focusTarget;
      skippedFocusRemoval = t1 != null && J.$eq(t1, target);
      t1 = this._focusTarget;
      if (t1 != null && !J.$eq(t1, target)) {
        if (this._focusTarget.get$_hostSurface() != null)
          ;
        this._removeFocusRing$0();
        t1 = this._focusTarget;
        if (t1 != null)
          t1.set$isFocused(false);
      }
      this._focusTarget = target;
      this._focusEventArg._newElement = this._focusTarget;
    } else {
      if (this._focusTarget != null) {
        this._removeFocusRing$0();
        this._focusTarget = null;
      }
      skippedFocusRemoval = false;
    }
    if (!skippedFocusRemoval) {
      t1 = this._focusTarget;
      if (t1 != null) {
        if (t1.get$hasSurface())
          this._createFocusRingForElement$1(t1);
        else
          Q.UpdateQueue_doLater(this.get$_addFocusOverlayAsync(), "focusAsync", t1);
        this._focusHandler = this.get$_onFocusedElementClosed();
        this._focusTarget.addListener$2($.UIElement_closedEvent, this._focusHandler);
      }
      this.notifyListeners$2($.FocusManager_focusChangedEvent, this._focusEventArg);
    }
  },
  _addFocusOverlayAsync$1: function(data) {
    if (data.get$isFocused() === true)
      if (J.$eq(this._focusTarget, data))
        this._createFocusRingForElement$1(this._focusTarget);
  },
  get$_addFocusOverlayAsync: function() {
    return new H.BoundClosure$1(this, Q.FocusManager.prototype._addFocusOverlayAsync$1, null, "_addFocusOverlayAsync$1");
  },
  _createFocusRingForElement$1: function(target) {
    var focusChrome, t1, t2;
    target = Q.FocusManager__getFocusRingTarget(target);
    if (target.overridesProperty$1($.UIElement_focusChromeProperty)) {
      focusChrome = target.get$focusChrome();
      if (focusChrome != null) {
        this._focusOverlay = focusChrome.applyToTarget$1(target);
        t1 = this._focusOverlay;
        if (t1 != null) {
          t2 = target.get$overlayContainer();
          t2.add$4(t2, target, t1, true, 0);
          t1.invalidateSize$0();
        }
      }
    } else {
      this._focusOverlay = this._createDefaultFocusRing$1(target);
      target.addOverlay$2(this._focusOverlay, true);
    }
  },
  _createDefaultFocusRing$1: function(focusTarget) {
    var res, t1, focusColor, group, blackRect, glowRect, glowFilter;
    res = focusTarget.findResource$1("focusRingColor");
    if (res != null) {
      t1 = J.getInterceptor(res);
      t1 = typeof res === "object" && res !== null && !!t1.$isColor;
    } else
      t1 = false;
    focusColor = t1 ? res : new Q.Color(4284920801, null);
    group = new Q.Group(null, null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
    group.UIElement$0();
    group._cachedPadding = $.Margin_EMPTY;
    blackRect = new Q.RectShape(null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
    blackRect.UIElement$0();
    t1 = Q.BorderRadius$uniform(4);
    blackRect.setProperty$2(blackRect, $.RectShape_borderRadiusProperty, t1);
    t1 = Q.SolidPen$(focusColor, 2);
    blackRect.setProperty$2(blackRect, $.Shape_strokeProperty, t1);
    blackRect.setProperty$2(blackRect, $.UIElement_marginsProperty, new Q.Margin(-2, -2, -2, -2));
    group.addChild$1(blackRect);
    glowRect = new Q.RectShape(null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
    glowRect.UIElement$0();
    t1 = Q.BorderRadius$uniform(4);
    glowRect.setProperty$2(glowRect, $.RectShape_borderRadiusProperty, t1);
    t1 = Q.SolidPen$(focusColor, 2);
    glowRect.setProperty$2(glowRect, $.Shape_strokeProperty, t1);
    glowRect.setProperty$2(glowRect, $.UIElement_mouseEnabledProperty, false);
    glowFilter = new Q.GlowFilter(null, null, null, 0, false, null, null, null, null);
    glowFilter.setProperty$2(glowFilter, $.GlowFilter_blurXProperty, 8);
    glowFilter.setProperty$2(glowFilter, $.GlowFilter_blurYProperty, 8);
    glowFilter.setProperty$2(glowFilter, $.GlowFilter_strengthProperty, 0.7);
    glowFilter.setProperty$2(glowFilter, $.GlowFilter_colorProperty, focusColor);
    glowFilter.setProperty$2(glowFilter, $.GlowFilter_knockoutProperty, true);
    J.add$1$ax(glowRect.get$filters(), glowFilter);
    glowRect.setProperty$2(glowRect, $.UIElement_marginsProperty, new Q.Margin(-2, -2, -2, -2));
    group.addChild$1(glowRect);
    group.setProperty$2(group, $.UIElement_mouseEnabledProperty, false);
    return group;
  },
  _removeFocusRing$0: function() {
    var t1 = this._focusHandler;
    if (t1 != null) {
      this._focusTarget.removeListener$2($.UIElement_closedEvent, t1);
      this._focusHandler = null;
    }
    if (this._focusOverlay != null) {
      Q.FocusManager__getFocusRingTarget(this._focusTarget).removeOverlay$1(this._focusOverlay);
      this._focusOverlay = null;
    }
  },
  _onFocusedElementClosed$1: function(e) {
    var element, t1;
    element = J.get$source$x(e);
    t1 = this._focusHandler;
    if (t1 != null) {
      element.removeListener$2($.UIElement_closedEvent, t1);
      this._focusHandler = null;
    }
    element.set$isFocused(false);
  },
  get$_onFocusedElementClosed: function() {
    return new H.BoundClosure$1(this, Q.FocusManager.prototype._onFocusedElementClosed$1, null, "_onFocusedElementClosed$1");
  },
  getDefinition$0: function() {
    return $.FocusManager_focusElementDef;
  },
  static: {
"": "FocusManager_focusElementDef,FocusManager__UPDATE_FOCUS_KEY,FocusManager_focusChangedEvent,FocusManager_redirectFocusChromeProperty",
FocusManager__getFocusRingTarget: function(target) {
  while (true) {
    if (!(target != null && target.overridesProperty$1($.FocusManager_redirectFocusChromeProperty)))
      break;
    target = target.getProperty$1($.FocusManager_redirectFocusChromeProperty);
  }
  return target;
},

FocusManager_registerFocusManager: function() {
  $.FocusScopeData_focusScopeProperty = Q.ElementRegistry_registerProperty("focusScope", 0, 0, null, null);
  $.FocusManager_redirectFocusChromeProperty = Q.ElementRegistry_registerProperty("RedirectFocusChrome", 0, 2, null, null);
  $.FocusManager_focusChangedEvent = new Q.EventDef("FocusChanged", $.Route_DIRECT, null, null);
  $.FocusManager_focusElementDef = Q.ElementRegistry_register("FocusManager", null, [], [$.FocusManager_focusChangedEvent]);
}}

},

FocusScopeData: {"": "Object;_owner,tabStops",
  getNextTabStop$1: function(currentFocus) {
    return this.getTabStop$2(currentFocus, 1);
  },
  getPrevTabStop$1: function(currentFocus) {
    return this.getTabStop$2(currentFocus, 2);
  },
  getTabStop$2: function(currentFocus, direction) {
    var t1, t2, index, index0, newFocus, potential;
    this._buildTabstopList$0();
    t1 = this.tabStops;
    t2 = t1.length;
    if (t2 === 0)
      return;
    index = currentFocus == null ? -1 : H.Arrays_indexOf(t1, currentFocus, 0, t2);
    t1 = direction === 1;
    index0 = index;
    newFocus = null;
    do {
      if (t1)
        if (index0 === -1)
          index0 = 0;
        else {
          ++index0;
          if (index0 === this.tabStops.length) {
            if (this === $.FocusScopeData__rootGroup)
              ;
            else
              return Q.FocusScopeData_findFocusGroup(this._owner.get$visualParent()).getTabStop$2(this._owner, direction);
            index0 = 0;
          }
        }
      else if (index0 === -1)
        index0 = this.tabStops.length - 1;
      else if (index0 === 0)
        if (this === $.FocusScopeData__rootGroup)
          index0 = this.tabStops.length - 1;
        else
          return Q.FocusScopeData_findFocusGroup(this._owner.get$visualParent()).getTabStop$2(this._owner, direction);
      else
        --index0;
      t2 = this.tabStops;
      if (index0 >>> 0 !== index0 || index0 >= t2.length)
        throw H.ioore(t2, index0);
      potential = t2[index0];
      if (!false) {
        if (Q.FocusScopeData__isValidTabStop(potential))
          break;
        potential.get$isFocusGroup();
      }
    } while (index0 !== index);
    if (index0 === index)
      return;
    t1 = this.tabStops;
    if (index0 >= t1.length)
      throw H.ioore(t1, index0);
    newFocus = t1[index0];
    if (newFocus === currentFocus)
      return Q.FocusScopeData_findFocusGroup(this._owner.get$visualParent()).getTabStop$2(this._owner, direction);
    return newFocus;
  },
  _buildTabstopList$0: function() {
    var startNode, t1, t2;
    this.tabStops = [];
    startNode = this._owner;
    if (startNode == null)
      startNode = $.Application__current._content;
    if (startNode != null)
      this._addTabStops$1(startNode);
    t1 = this.tabStops;
    t2 = this.get$visualSort();
    t1.toString;
    if (typeof t1 !== "object" || t1 === null || !!t1.immutable$list)
      H.throwExpression(P.UnsupportedError$("sort"));
    H.IterableMixinWorkaround_sortList(t1, t2);
  },
  visualSort$2: function(a, b) {
    var element, ax, ay, t1, bx, by;
    for (element = a, ax = 0, ay = 0; element != null;) {
      t1 = element.get$layoutX();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      ax += t1;
      t1 = element.get$layoutY();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      ay += t1;
      element = element.get$visualParent();
    }
    for (element = b, bx = 0, by = 0; element != null;) {
      t1 = element.get$layoutX();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      bx += t1;
      t1 = element.get$layoutY();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      by += t1;
      element = element.get$visualParent();
    }
    ay = C.JSNumber_methods.toInt$0(Math.ceil(ay / 8));
    by = C.JSNumber_methods.toInt$0(Math.ceil(by / 8));
    if (ay < by)
      return -1;
    else if (ay > by)
      return 1;
    if (ax < bx)
      return -1;
    else if (ax > bx)
      return 1;
    if (a.isVisualChild$1(b))
      return -1;
    else if (b.isVisualChild$1(a))
      return 1;
    return 0;
  },
  get$visualSort: function() {
    return new Q.BoundClosure$20(this, Q.FocusScopeData.prototype.visualSort$2, null, "visualSort$2");
  },
  _addTabStops$1: function(node) {
    var i;
    if (node.getRawChildCount$0() !== 0)
      for (i = 0; i < node.getRawChildCount$0(); ++i)
        this._addChildTabs$1(node.getRawChild$1(i));
  },
  _addChildTabs$1: function(node) {
    var i;
    if (J.$eq(node.get$visible(), false) || J.$eq(node.get$opacity(node), 0))
      return;
    if (node.get$focusEnabled() || node.getProperty$1($.UIElement_isFocusGroupProperty) === true)
      this.tabStops.push(node);
    if (node.getProperty$1($.UIElement_isFocusGroupProperty) === true)
      return;
    if (node.getRawChildCount$0() !== 0)
      for (i = 0; i < node.getRawChildCount$0(); ++i)
        this._addChildTabs$1(node.getRawChild$1(i));
  },
  static: {
"": "FocusScopeData__rootGroup,FocusScopeData_focusScopeProperty,FocusScopeData_DIRECTION_FORWARD,FocusScopeData_DIRECTION_BACK,FocusScopeData_SMALLEST_FOCUS_AREA",
FocusScopeData_findFocusGroup: function(element) {
  var t1, t2, data;
  for (; t1 = element == null, !t1;) {
    if (element.get$isFocusGroup() === true) {
      t1 = $.FocusScopeData_focusScopeProperty;
      t2 = element._propBag;
      if (t2 != null && t2.containsKey$1(t1))
        return element.getProperty$1($.FocusScopeData_focusScopeProperty);
      data = new Q.FocusScopeData(null, null);
      data._owner = element;
      element.setProperty$2(element, $.FocusScopeData_focusScopeProperty, data);
      return data;
    }
    element = element.parent;
  }
  if (t1) {
    if ($.FocusScopeData__rootGroup == null) {
      t1 = new Q.FocusScopeData(null, null);
      t1._owner = null;
      $.FocusScopeData__rootGroup = t1;
    }
    return $.FocusScopeData__rootGroup;
  }
  return;
},

FocusScopeData__isValidTabStop: function(element) {
  var t1, visElement;
  t1 = element._elementFlags;
  if ((t1 & 32) === 0)
    return false;
  if ((t1 & 16) === 0 || J.$eq(element.getProperty$1($.UIElement_opacityProperty), 0))
    return false;
  for (visElement = element; visElement != null;) {
    if ((visElement._elementFlags & 1) === 0 || J.$eq(visElement.getProperty$1($.UIElement_opacityProperty), 0))
      return false;
    if (J.$eq(visElement.layoutHeight, 0))
      return false;
    visElement = visElement.parent;
  }
  return true;
}}

},

GlowFilter: {"": "Filter;_owner,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  getDefinition$0: function() {
    return $.GlowFilter_glowFilterElementDef;
  },
  static: {
"": "GlowFilter_glowFilterElementDef,GlowFilter_alphaProperty,GlowFilter_blurXProperty,GlowFilter_blurYProperty,GlowFilter_colorProperty,GlowFilter_innerProperty,GlowFilter_knockoutProperty,GlowFilter_qualityProperty,GlowFilter_strengthProperty",
GlowFilter_registerGlowFilter: function() {
  $.GlowFilter_alphaProperty = $.DropShadowFilter_alphaProperty;
  $.GlowFilter_blurXProperty = $.DropShadowFilter_blurXProperty;
  $.GlowFilter_blurYProperty = $.DropShadowFilter_blurYProperty;
  $.GlowFilter_colorProperty = $.DropShadowFilter_colorProperty;
  $.GlowFilter_innerProperty = $.DropShadowFilter_innerProperty;
  $.GlowFilter_knockoutProperty = $.DropShadowFilter_knockoutProperty;
  $.GlowFilter_qualityProperty = $.DropShadowFilter_qualityProperty;
  $.GlowFilter_strengthProperty = $.DropShadowFilter_strengthProperty;
  $.GlowFilter_glowFilterElementDef = Q.ElementRegistry_register("GlowFilter", $.Filter_filterElementDef, [$.GlowFilter_alphaProperty, $.GlowFilter_blurXProperty, $.GlowFilter_blurYProperty, $.GlowFilter_colorProperty, $.GlowFilter_innerProperty, $.GlowFilter_knockoutProperty, $.GlowFilter_qualityProperty, $.GlowFilter_strengthProperty], null);
}}

},

Group: {"": "UIElementContainer;childElements,_cachedPadding,chromeTree,_chromeDirty,_elementFlags,_hostSurface,app,measuredWidth,measuredHeight,layoutX,layoutY,layoutWidth,layoutHeight,_layoutFlags,_prevLayoutWidth,_prevLayoutHeight,_prevLayoutX,_prevLayoutY,_prevMeasureAvailableWidth,_prevMeasureAvailableHeight,_internalWidth,_internalHeight,_margins,_effects,_mask,sharedP,_resources,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  onMeasure$2: function(availableWidth, availableHeight) {
    var t1, maxWidth, maxHeight, i, t2, child;
    t1 = this.childElements;
    for (maxWidth = 0, maxHeight = 0, i = 0; i < (t1 == null ? 0 : t1.length); ++i) {
      t2 = this.childElements;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      child = t2[i];
      child.measure$2(availableWidth, availableHeight);
      if (J.$gt$n(child.measuredWidth, maxWidth))
        maxWidth = child.measuredWidth;
      if (J.$gt$n(child.measuredHeight, maxHeight))
        maxHeight = child.measuredHeight;
    }
    this.measuredWidth = maxWidth;
    this.measuredHeight = maxHeight;
    return false;
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
    var t1, i, t2;
    t1 = this.childElements;
    for (i = 0; i < (t1 == null ? 0 : t1.length); ++i) {
      t2 = this.childElements;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      t2[i].layout$4(0, 0, targetWidth, targetHeight);
    }
  },
  getDefinition$0: function() {
    return $.Group_groupElementDef;
  },
  static: {
"": "Group_groupElementDef",
}

},

KeyboardEventArgs: {"": "EventArgs;_eventType,keyCode>,charCode,event,handled,source,currentSource,_forceDefault",
  get$eventType: function(_) {
    return this._eventType;
  },
  static: {
"": "KeyboardEventArgs_KEY_DOWN,KeyboardEventArgs_KEY_UP,KeyboardEventArgs_KEYCODE_ENTER,KeyboardEventArgs_KEYCODE_SPACE,KeyboardEventArgs_KEYCODE_DOWN,KeyboardEventArgs_KEYCODE_UP,KeyboardEventArgs_KEYCODE_LEFT,KeyboardEventArgs_KEYCODE_RIGHT,KeyboardEventArgs_KEYCODE_TAB,KeyboardEventArgs_shiftKey<,KeyboardEventArgs_ctrlKey,KeyboardEventArgs_altKey,KeyboardEventArgs_metaKey",
}

},

Label: {"": "Control;_cachedPadding,chromeTree,_chromeDirty,_elementFlags,_hostSurface,app,measuredWidth,measuredHeight,layoutX,layoutY,layoutWidth,layoutHeight,_layoutFlags,_prevLayoutWidth,_prevLayoutHeight,_prevLayoutX,_prevLayoutY,_prevMeasureAvailableWidth,_prevMeasureAvailableHeight,_internalWidth,_internalHeight,_margins,_effects,_mask,sharedP,_resources,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  get$text: function(_) {
    var value = this.getProperty$1($.Label_textProperty);
    return value == null ? "" : value;
  },
  initSurface$2: function(parentSurface, index) {
    var t1, textSurface, t2;
    t1 = new Q.UITextSurfaceImpl(null, null, 10, null, null, false, false, 0, 0, null, false, null, null, 0, false, null, 1, null, null, null, null, null, null, null, null, null, null, true, null, 0, 0, 0, 0, false, null, false);
    t1._visible = true;
    t1._textColor = $.Color_BLACK;
    textSurface = parentSurface.insertChild$2(index, t1);
    this._hostSurface = textSurface;
    this._hostSurface._surfaceTarget = this;
    this.updateTextSurface$0();
    if ((this._layoutFlags & 8) !== 0)
      textSurface.set$visible(false);
    textSurface.mouseEnabled = (this._elementFlags & 4) !== 0;
    textSurface.set$enableHitTesting((this._elementFlags & 4) !== 0);
    if (this.getProperty$1($.Label_wordWrapProperty) === true)
      textSurface.set$wordWrap(textSurface, this.getProperty$1($.Label_wordWrapProperty));
    if (!J.$eq(this.getProperty$1($.Label_textAlignProperty), 0))
      textSurface.set$textAlign(textSurface, this.getProperty$1($.Label_textAlignProperty));
    textSurface.set$textColor(this.getProperty$1($.Control_textColorProperty));
    this.get$_onTextEvent();
    t1 = $.UIElement_filtersProperty;
    t2 = this._propBag;
    if (t2 != null && t2.containsKey$1(t1))
      Q.UpdateQueue_updateFilters(this);
    this.surfaceInitialized$1(this._hostSurface);
  },
  initSurface$1: function(parentSurface) {
    return this.initSurface$2(parentSurface, -1);
  },
  updateTextSurface$0: function() {
    var textSurface, t1, t2;
    textSurface = this._hostSurface;
    if (textSurface == null)
      return;
    if (this.getProperty$1($.Label_htmlEnabledProperty) !== true)
      textSurface.set$text(textSurface, this.get$text(this));
    textSurface.set$fontName(this.getProperty$1($.Control_fontNameProperty));
    textSurface._fontSize = this.getProperty$1($.Control_fontSizeProperty);
    textSurface._divDirty = true;
    textSurface._fontBold = this.getProperty$1($.Control_fontBoldProperty);
    textSurface._divDirty = true;
    textSurface.set$textColor(this.getProperty$1($.Control_textColorProperty));
    if (this.getProperty$1($.Label_htmlEnabledProperty) === true) {
      textSurface.set$htmlText(this.get$text(this));
      t1 = $.Label_selectableProperty;
      t2 = this._propBag;
      if (t2 != null && t2.containsKey$1(t1))
        textSurface.set$selectable(this.getProperty$1($.Label_selectableProperty));
      this.setProperty$2(this, $.UIElement_mouseEnabledProperty, true);
    } else
      textSurface.set$selectable(this.getProperty$1($.Label_selectableProperty));
    textSurface.updateTextView$0();
  },
  onMeasure$2: function(availableWidth, availableHeight) {
    var textSurface, pw, ph, t1, t2;
    textSurface = this._hostSurface;
    pw = J.$add$ns(J.get$left$x(this._cachedPadding), J.get$right$x(this._cachedPadding));
    ph = J.$add$ns(J.get$top$x(this._cachedPadding), J.get$bottom$x(this._cachedPadding));
    if (textSurface != null) {
      textSurface.measureText$4(textSurface, this.get$text(this), J.$sub$n(availableWidth, pw), J.$sub$n(availableHeight, ph), this.getProperty$1($.Label_sizeToBoldProperty));
      t1 = textSurface.measuredWidth;
      if (typeof t1 !== "number")
        throw t1.$add();
      if (typeof pw !== "number")
        throw H.iae(pw);
      t2 = J.$add$ns(textSurface.measuredHeight, ph);
      this.measuredWidth = t1 + pw;
      this.measuredHeight = t2;
    }
    return false;
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
    var textSurface, pw, ph, t1, t2, t3;
    textSurface = this._hostSurface;
    if (textSurface != null) {
      if ((this._layoutFlags & 8) !== 0)
        textSurface.set$visible((this._elementFlags & 1) !== 0);
      pw = J.$add$ns(J.get$left$x(this._cachedPadding), J.get$right$x(this._cachedPadding));
      ph = J.$add$ns(J.get$top$x(this._cachedPadding), J.get$bottom$x(this._cachedPadding));
      t1 = textSurface.layoutX;
      t2 = J.get$left$x(this._cachedPadding);
      if (typeof t2 !== "number")
        throw H.iae(t2);
      t2 = C.JSNumber_methods.toInt$0(t1 + t2);
      t1 = textSurface.layoutY;
      t3 = J.get$top$x(this._cachedPadding);
      if (typeof t3 !== "number")
        throw H.iae(t3);
      textSurface.setLocation$4(t2, C.JSNumber_methods.toInt$0(t1 + t3), J.toInt$0$n(J.$sub$n(targetWidth, pw)), J.toInt$0$n(J.$sub$n(targetHeight, ph)));
    }
  },
  onFontChanged$0: function() {
    var t1 = this._hostSurface;
    if (t1 != null) {
      t1.set$fontName(this.getProperty$1($.Control_fontNameProperty));
      t1._fontSize = this.getProperty$1($.Control_fontSizeProperty);
      t1._divDirty = true;
      t1._fontBold = this.getProperty$1($.Control_fontBoldProperty);
      t1._divDirty = true;
      t1.set$textColor(this.getProperty$1($.Control_textColorProperty) == null ? $.Color_BLACK : this.getProperty$1($.Control_textColorProperty));
      t1.updateTextView$0();
    }
    this.invalidateSize$0();
  },
  close$0: function(_) {
    var t1 = this._hostSurface;
    if (t1 != null)
      t1.set$onTextLink(null);
    Q.UIElement.prototype.close$0.call(this, this);
  },
  get$wordWrap: function(_) {
    return this.getProperty$1($.Label_wordWrapProperty);
  },
  get$multiline: function() {
    return this.getProperty$1($.Label_multilineProperty);
  },
  get$textAlign: function(_) {
    return this.getProperty$1($.Label_textAlignProperty);
  },
  _onTextEvent$1: function($event) {
    if (this.hasListener$1($.Label_linkClickEvent))
      this.notifyListeners$2($.Label_linkClickEvent, $event);
  },
  get$_onTextEvent: function() {
    return new H.BoundClosure$1(this, Q.Label.prototype._onTextEvent$1, null, "_onTextEvent$1");
  },
  get$htmlEnabled: function() {
    return this.getProperty$1($.Label_htmlEnabledProperty);
  },
  getDefinition$0: function() {
    return $.Label_labelElementDef;
  },
  static: {
"": "Label_labelElementDef,Label_textProperty,Label_wordWrapProperty,Label_multilineProperty,Label_sizeToBoldProperty,Label_textAlignProperty,Label_htmlEnabledProperty,Label_ellipsisProperty,Label_selectableProperty,Label_linkClickEvent,Label_ALIGN_LEFT,Label_ALIGN_CENTER,Label_ALIGN_RIGHT",
Label__htmlEnabledChangeHandler: function(target, propDef, oldValue, newValue) {
  var textSurface = target.get$_hostSurface();
  if (textSurface != null)
    if (target.get$htmlEnabled() === true)
      textSurface.set$htmlText(target.get$text(target));
    else
      textSurface.set$text(textSurface, target.get$text(target));
},

Label__lineStyleChangeHandler: function(target, propDef, oldValue, newValue) {
  var textSurface = target.get$_hostSurface();
  if (textSurface != null)
    textSurface.set$textAlign(textSurface, target.get$textAlign(target));
},

Label__wordWrapChangeHandler: function(target, propDef, oldValue, newValue) {
  var textSurface = target.get$_hostSurface();
  if (textSurface != null)
    textSurface.set$wordWrap(textSurface, target.get$wordWrap(target));
},

Label__textChangeHandler: function(target, propDef, oldValue, newValue) {
  if (typeof newValue === "number")
    throw H.wrapException(P.Exception_Exception("Invalid type"));
  target.updateTextSurface$0();
},

Label_registerLabel: function() {
  $.Label_textProperty = Q.ElementRegistry_registerProperty("text", 1, 8, Q.Label__textChangeHandler$closure, "");
  $.Label_wordWrapProperty = Q.ElementRegistry_registerProperty("wordWrap", 4, 8, Q.Label__wordWrapChangeHandler$closure, false);
  $.Label_multilineProperty = Q.ElementRegistry_registerProperty("multiline", 4, 8, Q.Label__wordWrapChangeHandler$closure, false);
  $.Label_ellipsisProperty = Q.ElementRegistry_registerProperty("ellipsis", 4, 8, null, false);
  $.Label_sizeToBoldProperty = Q.ElementRegistry_registerProperty("sizeToBold", 4, 8, null, false);
  $.Label_textAlignProperty = Q.ElementRegistry_registerProperty("textAlign", 2, 4, Q.Label__lineStyleChangeHandler$closure, 0);
  $.Label_selectableProperty = Q.ElementRegistry_registerProperty("selectable", 4, 0, null, false);
  $.Label_htmlEnabledProperty = Q.ElementRegistry_registerProperty("htmlEnabled", 4, 8, Q.Label__htmlEnabledChangeHandler$closure, false);
  $.Label_ellipsisProperty = Q.ElementRegistry_registerProperty("ellipsis", 4, 0, null, false);
  $.Label_linkClickEvent = new Q.EventDef("LinkClick", $.Route_DIRECT, null, null);
  $.Label_labelElementDef = Q.ElementRegistry_register("Label", $.Control_controlElementDef, [$.Label_htmlEnabledProperty, $.Label_selectableProperty, $.Label_textAlignProperty, $.Label_textProperty, $.Label_wordWrapProperty], [$.Label_linkClickEvent]);
}}

},

Margin: {"": "Object;left>,top>,right>,bottom>", static: {
"": "Margin_EMPTY",
}
},

Matrix: {"": "Object;a,b,c,d,tx,ty",
  transformPointXInverse$2: function(x, y) {
    var det, t1, t2, t3, t4, t5;
    det = J.$sub$n(J.$mul$n(this.a, this.d), J.$mul$n(this.b, this.c));
    t1 = this.d;
    if (typeof t1 !== "number")
      throw t1.$div();
    if (typeof det !== "number")
      throw H.iae(det);
    t2 = this.b;
    if (typeof t2 !== "number")
      throw t2.$negate();
    t3 = this.c;
    if (typeof t3 !== "number")
      throw t3.$negate();
    t3 = this.a;
    if (typeof t3 !== "number")
      throw t3.$div();
    t3 = this.ty;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t4 = J.$mul$n(this.d, this.tx);
    if (typeof t4 !== "number")
      throw H.iae(t4);
    t5 = J.$sub$n(J.$mul$n(this.c, this.tx), J.$mul$n(this.a, this.ty));
    if (typeof t5 !== "number")
      throw t5.$div();
    if (typeof x !== "number")
      throw H.iae(x);
    if (typeof y !== "number")
      throw H.iae(y);
    return (t2 * t3 - t4) / det + t1 / det * x + -t2 / det * y;
  },
  transformPointYInverse$2: function(x, y) {
    var det, t1, t2, t3;
    det = J.$sub$n(J.$mul$n(this.a, this.d), J.$mul$n(this.b, this.c));
    t1 = this.d;
    if (typeof t1 !== "number")
      throw t1.$div();
    if (typeof det !== "number")
      throw H.iae(det);
    t1 = this.b;
    if (typeof t1 !== "number")
      throw t1.$negate();
    t1 = this.c;
    if (typeof t1 !== "number")
      throw t1.$negate();
    t2 = this.a;
    if (typeof t2 !== "number")
      throw t2.$div();
    t3 = this.ty;
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t3 = J.$mul$n(this.d, this.tx);
    if (typeof t3 !== "number")
      throw H.iae(t3);
    t3 = J.$sub$n(J.$mul$n(this.c, this.tx), J.$mul$n(this.a, this.ty));
    if (typeof t3 !== "number")
      throw t3.$div();
    if (typeof x !== "number")
      throw H.iae(x);
    if (typeof y !== "number")
      throw H.iae(y);
    return t3 / det + -t1 / det * x + t2 / det * y;
  },
  Matrix$identity$0: function() {
    this.a = 1;
    this.b = 0;
    this.c = 0;
    this.d = 1;
    this.tx = 0;
    this.ty = 0;
  },
  static: {
Matrix$identity: function() {
  var t1 = new Q.Matrix(null, null, null, null, null, null);
  t1.Matrix$identity$0();
  return t1;
}}

},

Model: {"": "Object;_children,_properties,_listeners,_isCallingListeners,_hasGlobalListener,_uxml$_name",
  get$length: function(_) {
    var t1 = this._children;
    return t1 == null ? 0 : t1.length;
  },
  removeChild$1: function(child) {
    var t1, index;
    t1 = this._children;
    if (t1 == null)
      return;
    index = H.Arrays_indexOf(t1, child, 0, t1.length);
    if (index < 0)
      return;
    this._raiseChangedEvent$3(index, 1, 2);
    J.removeAt$1$ax(this._children, index);
    this._raiseChangedEvent$3(index, 1, 3);
  },
  indexOf$1: function(_, child) {
    var t1 = this._children;
    return H.Arrays_indexOf(t1, child, 0, t1.length);
  },
  _raiseChangedEvent$3: function(index, count, type) {
    var $event;
    if (!this.hasListener$1($.CollectionChangedEvent_eventDef))
      return;
    $event = Q.CollectionChangedEvent_create(this, type, index, count);
    this.notifyListeners$2($.CollectionChangedEvent_eventDef, $event);
    Q.CollectionChangedEvent_release($event);
  },
  $index: function(_, $name) {
    return this.getMember$1($name);
  },
  $indexSet: function(_, $name, value) {
    return this.setMember$2($name, value);
  },
  getMember$1: function($name) {
    var t1, collection, c, child, parts, m, p, t2;
    t1 = J.getInterceptor$asx($name);
    if (t1.indexOf$2($name, ".", 0) === -1) {
      if (this._properties.containsKey$1($name)) {
        t1 = this._properties;
        return t1.$index(t1, $name);
      }
      if (this._children != null)
        for (collection = null, c = 0; t1 = this._children, c < t1.length; ++c) {
          child = t1[c];
          t1 = J.getInterceptor(child);
          if (typeof child === "object" && child !== null && !!t1.$isModel)
            if (J.$eq(child._uxml$_name, $name)) {
              if (collection == null) {
                collection = new Q.Model(null, null, null, false, false, "");
                collection._properties = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Object);
              }
              if (collection._children == null)
                collection._children = [];
              collection._children.push(child);
              collection._raiseChangedEvent$3(collection._children.length - 1, 1, 1);
            }
        }
      else
        collection = null;
      return collection;
    } else {
      parts = t1.split$1($name, ".");
      for (m = this, p = 0; t1 = parts.length, t2 = t1 - 1, p < t2; ++p)
        m = m.getMember$1(parts[p]);
      if (t2 < 0)
        throw H.ioore(parts, t2);
      return m.getMember$1(parts[t2]);
    }
  },
  setMember$2: function($name, value) {
    var t1, oldValue, propEvent;
    if (J.indexOf$2$asx($name, ".", 0) !== -1)
      throw H.wrapException(new P.ArgumentError("Model name = " + H.S($name) + " not supported yet."));
    t1 = this._properties;
    oldValue = t1.$index(t1, $name);
    this.setChildByName$2($name, value);
    if (this.hasListener$1($name)) {
      propEvent = Q.PropertyChangedEvent_create(this, $name, oldValue, value);
      this.notifyListeners$2($name, propEvent);
      $.PropertyChangedEvent__objectPool.push(propEvent);
    }
  },
  setChildByName$2: function($name, value) {
    var t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isModel)
      value._uxml$_name = $name;
    t1 = this._properties;
    if (t1.$index(t1, $name) != null) {
      t1 = this._properties;
      this.removeChild$1(t1.$index(t1, $name));
    }
    t1 = this._properties;
    t1.$indexSet(t1, $name, value);
    if (!J.$eq($name, "_repeatable_")) {
      if (this._children == null)
        this._children = [];
      this._children.push(value);
    }
  },
  setProperty$2: function(_, key, value) {
    this.setMember$2(key, value);
  },
  getProperty$1: function(key) {
    return this.getMember$1(key);
  },
  overridesProperty$1: function(key) {
    return false;
  },
  addListener$3: function(type, listener, useCapture) {
    var t1, listenersForType;
    if (useCapture)
      throw H.wrapException(P.UnsupportedError$("Capture is not support for model events"));
    if (this._listeners == null)
      this._listeners = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, [J.JSArray, {func: "void__EventArgs", void: true, args: [Q.EventArgs]}]);
    t1 = this._listeners;
    listenersForType = t1.$index(t1, type);
    if (listenersForType == null) {
      listenersForType = [];
      H.setRuntimeTypeInfo(listenersForType, [{func: "void__EventArgs", void: true, args: [Q.EventArgs]}]);
      t1 = this._listeners;
      t1.$indexSet(t1, type, listenersForType);
    }
    t1 = J.getInterceptor$asx(listenersForType);
    if (t1.indexOf$1(listenersForType, listener) === -1)
      t1.add$1(listenersForType, listener);
  },
  addListener$2: function(type, listener) {
    return this.addListener$3(type, listener, false);
  },
  removeListener$2: function(type, listener) {
    var t1, listenersForType, index;
    t1 = this._listeners;
    if (t1 == null)
      return;
    listenersForType = t1.$index(t1, type);
    if (listenersForType != null) {
      t1 = J.getInterceptor$asx(listenersForType);
      index = t1.indexOf$1(listenersForType, listener);
      if (this._isCallingListeners) {
        if (index !== -1)
          t1.$indexSet(listenersForType, index, null);
      } else if (index !== -1)
        t1.removeAt$1(listenersForType, index);
    }
  },
  hasListener$1: function(type) {
    var t1 = this._listeners;
    if (t1 != null)
      if (t1.$index(t1, type) != null) {
        t1 = this._listeners;
        t1 = J.get$length$asx(t1.$index(t1, type)) !== 0;
      } else
        t1 = false;
    else
      t1 = false;
    return t1;
  },
  notifyListeners$2: function(type, e) {
    var t1, listenersForType, len, i, listener, t2;
    t1 = this._listeners;
    if (t1 == null)
      return;
    listenersForType = t1.$index(t1, type);
    this._isCallingListeners = true;
    if (listenersForType != null) {
      t1 = J.getInterceptor$asx(listenersForType);
      len = t1.get$length(listenersForType);
      i = 0;
      while (true) {
        if (typeof len !== "number")
          throw H.iae(len);
        if (!(i < len))
          break;
        listener = t1.$index(listenersForType, i);
        if (listener == null) {
          t1.removeAt$1(listenersForType, i);
          --i;
          --len;
        } else
          listener.call$1(e);
        ++i;
      }
    }
    if (this._hasGlobalListener) {
      t1 = this._listeners;
      listenersForType = t1.$index(t1, "__allevents__");
      if (listenersForType == null)
        return;
      t1 = J.getInterceptor$asx(listenersForType);
      i = 0;
      while (true) {
        t2 = t1.get$length(listenersForType);
        if (typeof t2 !== "number")
          throw H.iae(t2);
        if (!(i < t2))
          break;
        listener = t1.$index(listenersForType, i);
        if (listener == null) {
          t1.removeAt$1(listenersForType, i);
          --i;
        } else
          listener.call$1(e);
        ++i;
      }
    }
    this._isCallingListeners = false;
  },
  toString$0: function(_) {
    return this._modelToString$2(P.StringBuffer$(""), 0);
  },
  _modelToString$2: function(sb, depth) {
    var t, t1, propKeys, t2, t3, key, t4, val, str, c, i;
    if (depth === 0)
      sb.write$1("Model ");
    else
      for (t = 0; t < depth; ++t)
        sb._contents = sb._contents + "  ";
    sb.write$1(this._uxml$_name);
    sb.write$1(" {\n");
    t1 = this._properties;
    propKeys = new P.LinkedHashMapKeyIterable(t1);
    H.setRuntimeTypeInfo(propKeys, [H.getRuntimeTypeArgument(t1, "_LinkedHashMap", 0)]);
    for (t1 = propKeys._map, t2 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null), t2._cell = t2._map._first, t3 = depth + 1; t2.moveNext$0();) {
      key = t2._collection$_current;
      if (J.$eq(key, "_repeatable_"))
        continue;
      t4 = this._properties;
      val = t4.$index(t4, key);
      t4 = J.getInterceptor(val);
      if (typeof val === "object" && val !== null && !!t4.$isModel)
        val._modelToString$2(sb, t3);
      else {
        for (t = 0; t < t3; ++t)
          sb._contents = sb._contents + "  ";
        str = typeof key === "string" ? key : H.S(key);
        sb._contents = sb._contents + str;
        sb._contents = sb._contents + " : ";
        str = typeof val === "string" ? val : H.S(val);
        sb._contents = sb._contents + str;
        sb._contents = sb._contents + "\n";
      }
    }
    if (this._children != null)
      for (c = 0; t2 = this._children, c < t2.length; ++c) {
        t2 = t2[c];
        t4 = J.getInterceptor(t2);
        if (typeof t2 === "object" && t2 !== null && !!t4.$isModel)
          if (!this._properties.containsValue$1(t2))
            t2._modelToString$2(sb, t3);
      }
    for (i = 0; i < t1._collection$_length; ++i) {
      key = propKeys.elementAt$1(propKeys, i);
      if (!J.$eq(key, "_repeatable_"))
        continue;
      t2 = this._properties;
      val = t2.$index(t2, propKeys.elementAt$1(propKeys, i));
      t2 = J.getInterceptor(val);
      if (typeof val === "object" && val !== null && !!t2.$isModel)
        val._modelToString$2(sb, t3);
      else {
        for (t = 0; t < t3; ++t)
          sb._contents = sb._contents + "  ";
        str = typeof key === "string" ? key : H.S(key);
        sb._contents = sb._contents + str;
        sb._contents = sb._contents + " : ";
        str = typeof val === "string" ? val : H.S(val);
        sb._contents = sb._contents + str;
        sb._contents = sb._contents + "\n";
      }
    }
    for (t = 0; t < depth; ++t)
      sb._contents = sb._contents + "  ";
    sb.write$1("}\n");
    return sb._contents;
  },
  forEach$1: function(_, f) {
    var t1 = this._properties;
    t1.forEach$1(t1, f);
  },
  $isModel: true
},

MouseEventArgs: {"": "EventArgs;_eventType,_button,posX,posY,deltaY>,localPoint,event,handled,source,currentSource,_forceDefault",
  get$eventType: function(_) {
    return this._eventType;
  },
  getMousePosition$1: function(element) {
    if (element == null) {
      this.localPoint.x = this.posX;
      this.localPoint.y = this.posY;
      return this.localPoint;
    }
    element.screenToLocalInternal$3(this.posX, this.posY, this.localPoint);
    return this.localPoint;
  },
  MouseEventArgs$3: function(eventType, button, position) {
    this.localPoint = new Q.Coord(0, 0);
    this._eventType = eventType;
    this._button = button;
    this.posX = J.toInt$0$n(position.x);
    this.posY = J.toInt$0$n(position.y);
  },
  static: {
"": "MouseEventArgs_NO_BUTTON,MouseEventArgs_LEFT_BUTTON,MouseEventArgs_RIGHT_BUTTON,MouseEventArgs_MIDDLE_BUTTON,MouseEventArgs_MOUSE_DOWN,MouseEventArgs_MOUSE_UP,MouseEventArgs_MOUSE_MOVE,MouseEventArgs_MOUSE_ENTER,MouseEventArgs_MOUSE_EXIT,MouseEventArgs_MOUSE_WHEEL",
MouseEventArgs$: function(eventType, button, position) {
  var t1 = new Q.MouseEventArgs(null, null, null, null, null, null, null, null, null, null, false);
  t1.source = null;
  t1.currentSource = null;
  t1.handled = false;
  t1.MouseEventArgs$3(eventType, button, position);
  return t1;
}}

},

DragEventArgs: {"": "MouseEventArgs;dragSource,data,_eventType,_button,posX,posY,deltaY,localPoint,event,handled,source,currentSource,_forceDefault"},

OverlayContainer: {"": "ContentContainer;_host,_overlayMap,_overlayNeedsResize,_layoutWatchList,_cachedContent,_cachedPadding,chromeTree,_chromeDirty,_elementFlags,_hostSurface,app,measuredWidth,measuredHeight,layoutX,layoutY,layoutWidth,layoutHeight,_layoutFlags,_prevLayoutWidth,_prevLayoutHeight,_prevLayoutX,_prevLayoutY,_prevMeasureAvailableWidth,_prevMeasureAvailableHeight,_internalWidth,_internalHeight,_margins,_effects,_mask,sharedP,_resources,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  getRawChildCount$0: function() {
    return this._cachedContent != null || false ? 2 : 1;
  },
  getRawChild$1: function(index) {
    var t1;
    if (index > 1)
      return;
    if (index === 0) {
      t1 = this._cachedContent;
      if (t1 != null)
        return t1;
    }
    return this._host;
  },
  initSurface$2: function(parentSurface, index) {
    Q.Control.prototype.initSurface$2.call(this, parentSurface, index);
    this._host._hostSurface.set$enableHitTesting(false);
    this._host._hostSurface.set$enableChildHitTesting(true);
  },
  initSurface$1: function(parentSurface) {
    return this.initSurface$2(parentSurface, -1);
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
    Q.ContentContainer.prototype.onLayout$4.call(this, targetX, targetY, targetWidth, targetHeight);
    this._host.measure$2(targetWidth, targetHeight);
    this._host.layout$4(0, 0, targetWidth, targetHeight);
  },
  get$overlayContainer: function() {
    return this;
  },
  add$4: function(_, targetElement, overlay, autoResize, $location) {
    var t1, overlayList, parentOfTarget, containerPos, targetPos;
    t1 = this._overlayMap;
    if (t1 == null) {
      this._overlayMap = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q._OverlayList);
      this._overlayNeedsResize = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, J.JSBool);
      this._layoutWatchList = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q._WatchList);
      overlayList = null;
    } else
      overlayList = t1.$index(t1, targetElement);
    if (overlayList == null) {
      overlayList = new Q._OverlayList(targetElement, null);
      t1 = this._overlayMap;
      t1.$indexSet(t1, targetElement, overlayList);
    }
    overlayList.get$overlays().push(overlay);
    if (autoResize) {
      t1 = this._overlayNeedsResize;
      t1.$indexSet(t1, overlay, true);
    }
    J.setProperty$2$x(overlay, $.OverlayContainer_locProperty, $location);
    this._addWatchLayout$3(targetElement, targetElement, autoResize);
    parentOfTarget = targetElement.get$visualParent();
    while (true) {
      if (!(parentOfTarget !== this && parentOfTarget != null))
        break;
      this._addWatchLayout$3(parentOfTarget, targetElement, autoResize);
      parentOfTarget = parentOfTarget.get$visualParent();
    }
    overlay.set$visible((targetElement._elementFlags & 1) !== 0);
    this._host._internalOverlayChild$2(overlay, targetElement);
    overlay.measure$2(targetElement.layoutWidth, targetElement.layoutHeight);
    containerPos = this.localToScreen$1(new Q.Coord(0, 0));
    targetPos = targetElement.localToScreen$1(new Q.Coord(0, 0));
    targetPos.x = J.$sub$n(targetPos.x, containerPos.x);
    targetPos.y = J.$sub$n(targetPos.y, containerPos.y);
    this._updateElementPosition$5(targetElement, overlay, containerPos, targetPos, true);
    t1 = this._host;
    t1._layoutFlags = (t1._layoutFlags | 4) >>> 0;
    Q.UpdateQueue_updateLayout(t1);
  },
  remove$2: function(_, targetElement, overlay) {
    var t1, overlayList, index, parentOfTarget;
    J.setProperty$2$x(overlay, $.OverlayContainer_finalLocationProperty, 0);
    this._host.removeChild$1(overlay);
    t1 = this._overlayMap;
    overlayList = t1.$index(t1, targetElement);
    if (overlayList == null || !overlayList.get$hasOverlays())
      return;
    t1 = overlayList.get$overlays();
    index = H.Arrays_indexOf(t1, overlay, 0, t1.length);
    if (index !== -1) {
      J.removeAt$1$ax(overlayList.get$overlays(), index);
      t1 = overlayList._overlays;
      if (!(t1 != null && t1.length > 0)) {
        this._removeWatchLayout$2(targetElement, targetElement);
        parentOfTarget = targetElement.get$visualParent();
        while (true) {
          if (!(parentOfTarget !== this && parentOfTarget != null))
            break;
          this._removeWatchLayout$2(parentOfTarget, targetElement);
          parentOfTarget = parentOfTarget.get$visualParent();
        }
      }
    }
  },
  _watchListOf$1: function(element) {
    var t1, watchList;
    t1 = this._layoutWatchList;
    watchList = t1.$index(t1, element);
    if (watchList == null) {
      watchList = new Q._WatchList(element, null, null, null, null);
      watchList.observers = [];
      t1 = this._layoutWatchList;
      t1.$indexSet(t1, element, watchList);
    }
    return watchList;
  },
  _addWatchLayout$3: function(element, targetElement, resize) {
    var watchList, t1;
    watchList = this._watchListOf$1(element);
    if (watchList.get$sizeHandler() == null) {
      watchList.sizeHandler = this.get$_targetElementLayoutAndSizeChanged();
      element.addListener$2($.UIElement_layoutChangedEvent, watchList.sizeHandler);
      watchList.transformHandler = this.get$_targetElementLayoutChanged();
      element.addListener$2($.UIElement_transformChangedEvent, watchList.transformHandler);
      watchList.visibilityHandler = this.get$_targetVisibilityChanged();
      element.addListener$2($.UIElement_visibleProperty, watchList.visibilityHandler);
    }
    t1 = watchList.observers;
    if (H.Arrays_indexOf(t1, targetElement, 0, t1.length) === -1)
      watchList.observers.push(targetElement);
  },
  _removeWatchLayout$2: function(element, targetElement) {
    var watchList, t1, index;
    watchList = this._watchListOf$1(element);
    t1 = watchList.get$observers();
    index = H.Arrays_indexOf(t1, element, 0, t1.length);
    if (index !== -1)
      C.JSArray_methods.removeAt$1(watchList.observers, index);
    if (watchList.observers.length === 0) {
      element.removeListener$2($.UIElement_layoutChangedEvent, watchList.sizeHandler);
      element.removeListener$2($.UIElement_transformChangedEvent, watchList.transformHandler);
      element.removeListener$2($.UIElement_visibleProperty, watchList.visibilityHandler);
      watchList.sizeHandler = null;
      watchList.transformHandler = null;
      watchList.visibilityHandler = null;
      t1 = this._layoutWatchList;
      t1.$indexSet(t1, element, null);
    }
  },
  onMouseDown$1: function(_, e) {
    if (this.isVisualChild$1($.Application_focusManager._focusTarget))
      $.Application_focusManager._focusTarget.set$isFocused(false);
  },
  _targetElementLayoutChanged$1: function(e) {
    this._applyTargetElementLayoutChange$2(e, false);
  },
  get$_targetElementLayoutChanged: function() {
    return new H.BoundClosure$1(this, Q.OverlayContainer.prototype._targetElementLayoutChanged$1, null, "_targetElementLayoutChanged$1");
  },
  _targetElementLayoutAndSizeChanged$1: function(e) {
    this._applyTargetElementLayoutChange$2(e, true);
  },
  get$_targetElementLayoutAndSizeChanged: function() {
    return new H.BoundClosure$1(this, Q.OverlayContainer.prototype._targetElementLayoutAndSizeChanged$1, null, "_targetElementLayoutAndSizeChanged$1");
  },
  _applyTargetElementLayoutChange$2: function(e, targetWasResized) {
    var t1, t2, t3, containerPos, observers, obIndex, targetElement, overlayList, targetPos, i;
    t1 = J.getInterceptor$x(e);
    t2 = t1.get$source(e);
    t3 = J.getInterceptor(t2);
    if (typeof t2 !== "object" || t2 === null || !t3.$isUIElement)
      return;
    containerPos = this.localToScreen$1(new Q.Coord(0, 0));
    observers = this._watchListOf$1(t1.get$source(e)).get$observers();
    for (obIndex = 0; obIndex < observers.length; ++obIndex) {
      targetElement = observers[obIndex];
      t1 = this._overlayMap;
      overlayList = t1.$index(t1, targetElement);
      targetPos = targetElement.localToScreen$1(new Q.Coord(0, 0));
      if (overlayList != null && overlayList.get$hasOverlays())
        for (i = 0; i < overlayList.get$overlays().length; ++i) {
          if (overlayList._overlays == null) {
            t1 = [];
            t1.$builtinTypeInfo = [Q.UIElement];
            overlayList._overlays = t1;
          }
          t1 = overlayList._overlays;
          if (i >= t1.length)
            throw H.ioore(t1, i);
          this._updateElementPosition$5(targetElement, t1[i], containerPos, targetPos, targetWasResized);
        }
    }
  },
  _updateElementPosition$5: function(targetElement, overlay, containerPos, targetPos, targetWasResized) {
    var targetX, targetY, targetHeight, targetWidth, $location, t1, newY, t2, t3, spaceBelow, spaceAbove, finalLocation, xOffset, yOffset;
    targetX = J.$sub$n(targetPos.x, containerPos.x);
    targetY = J.$sub$n(targetPos.y, containerPos.y);
    targetHeight = targetElement.layoutHeight;
    targetWidth = targetElement.layoutWidth;
    $location = overlay.getProperty$1($.OverlayContainer_locProperty);
    if (J.$eq($location, 262144))
      return;
    if (typeof $location !== "number")
      throw $location.$and();
    switch ($location & 255) {
      case 2:
        t1 = J.getInterceptor$ns(targetY);
        newY = t1.$add(targetY, targetHeight);
        if (($location & 65536) !== 0) {
          t2 = $.Application__current._hostHeight;
          t3 = J.$add$ns(newY, overlay.get$measuredHeight());
          if (typeof t2 !== "number")
            throw t2.$sub();
          if (typeof t3 !== "number")
            throw H.iae(t3);
          spaceBelow = t2 - t3;
          spaceAbove = t1.$sub(targetY, overlay.measuredHeight);
          t2 = spaceBelow < 0;
          if (t2 && J.$gt$n(spaceAbove, spaceBelow)) {
            newY = t1.$sub(targetY, overlay.measuredHeight);
            if (J.$lt$n(spaceAbove, 0))
              overlay.set$maxHeight(overlay, J.$sub$n(newY, 5));
            finalLocation = 1;
          } else {
            if (t2) {
              t1 = $.Application__current._hostHeight;
              if (typeof t1 !== "number")
                throw t1.$sub();
              if (typeof newY !== "number")
                throw H.iae(newY);
              overlay.set$maxHeight(overlay, t1 - newY - 5);
            }
            finalLocation = 2;
          }
        } else
          finalLocation = $location;
        targetY = newY;
        break;
      case 1:
        t1 = $.Application__current._hostHeight;
        t2 = J.getInterceptor$ns(targetY);
        t3 = t2.$add(targetY, overlay.get$measuredHeight());
        if (typeof t1 !== "number")
          throw t1.$sub();
        if (typeof t3 !== "number")
          throw H.iae(t3);
        spaceBelow = t1 - t3;
        spaceAbove = t2.$sub(targetY, overlay.measuredHeight);
        newY = t2.$sub(targetY, overlay.measuredHeight);
        if (($location & 65536) !== 0) {
          if (J.$lt$n(newY, 0)) {
            if (typeof spaceAbove !== "number")
              throw H.iae(spaceAbove);
            t1 = spaceBelow > spaceAbove;
          } else
            t1 = false;
          if (t1) {
            targetY = t2.$add(targetY, targetHeight);
            if (spaceBelow < 0) {
              t1 = $.Application__current._hostHeight;
              if (typeof t1 !== "number")
                throw t1.$sub();
              if (typeof targetY !== "number")
                throw H.iae(targetY);
              overlay.set$maxHeight(overlay, t1 - targetY - 5);
            }
            finalLocation = 2;
          } else {
            if (J.$lt$n(spaceAbove, 0)) {
              overlay.set$maxHeight(overlay, t2.$sub(targetY, 5));
              targetY = t2.$sub(targetY, overlay.getProperty$1($.UIElement_maxHeightProperty));
            } else
              targetY = newY;
            finalLocation = 1;
          }
        } else {
          finalLocation = $location;
          targetY = newY;
        }
        break;
      case 8:
        t1 = overlay.get$measuredHeight();
        if (typeof t1 !== "number")
          throw t1.$div();
        targetY = J.$add$ns(targetY, J.$sub$n(targetHeight, t1 / 2));
        finalLocation = $location;
        break;
      case 4:
        t1 = overlay.get$measuredHeight();
        if (typeof t1 !== "number")
          throw t1.$div();
        targetY = J.$sub$n(targetY, t1 / 2);
        finalLocation = $location;
        break;
      case 16:
        t1 = J.$sub$n(targetHeight, overlay.get$measuredHeight());
        if (typeof t1 !== "number")
          throw t1.$div();
        targetY = J.$add$ns(targetY, t1 / 2);
        finalLocation = $location;
        break;
      default:
        finalLocation = $location;
        break;
    }
    switch ($location & 65280) {
      case 256:
        targetX = J.$sub$n(targetX, overlay.get$measuredWidth());
        break;
      case 512:
        targetX = J.$add$ns(targetX, targetWidth);
        break;
      case 1024:
        t1 = overlay.get$measuredWidth();
        if (typeof t1 !== "number")
          throw t1.$div();
        targetX = J.$sub$n(targetX, t1 / 2);
        break;
      case 2048:
        t1 = overlay.get$measuredWidth();
        if (typeof t1 !== "number")
          throw t1.$div();
        targetX = J.$add$ns(targetX, J.$sub$n(targetWidth, t1 / 2));
        break;
      case 4096:
        t1 = J.$sub$n(targetWidth, overlay.get$measuredWidth());
        if (typeof t1 !== "number")
          throw t1.$div();
        targetX = J.$add$ns(targetX, t1 / 2);
        break;
      default:
        break;
    }
    if (this._overlayNeedsResize.containsKey$1(overlay)) {
      t1 = this._overlayNeedsResize;
      t1 = J.$eq(t1.$index(t1, overlay), true);
    } else
      t1 = false;
    if (t1) {
      overlay.setProperty$2(overlay, $.Canvas_leftProperty, targetX);
      overlay.setProperty$2(overlay, $.Canvas_topProperty, targetY);
      if (targetWasResized) {
        overlay.set$minWidth(overlay, targetWidth);
        overlay.setProperty$2(overlay, $.UIElement_minHeightProperty, targetHeight);
      }
    } else {
      switch (overlay.get$hAlign()) {
        case 3:
          xOffset = J.$sub$n(targetWidth, overlay.measuredWidth);
          break;
        case 2:
          t1 = J.$sub$n(targetWidth, overlay.measuredWidth);
          if (typeof t1 !== "number")
            throw t1.$div();
          xOffset = t1 / 2;
          break;
        default:
          xOffset = 0;
      }
      switch (overlay.getProperty$1($.UIElement_vAlignProperty)) {
        case 3:
          yOffset = J.$sub$n(targetHeight, overlay.measuredHeight);
          break;
        case 2:
          t1 = J.$sub$n(targetHeight, overlay.measuredHeight);
          if (typeof t1 !== "number")
            throw t1.$div();
          yOffset = t1 / 2;
          break;
        default:
          yOffset = 0;
      }
      t1 = J.$add$ns(targetX, xOffset);
      overlay.setProperty$2(overlay, $.Canvas_leftProperty, t1);
      t1 = J.$add$ns(targetY, yOffset);
      overlay.setProperty$2(overlay, $.Canvas_topProperty, t1);
      overlay.setProperty$2(overlay, $.OverlayContainer_finalLocationProperty, finalLocation);
      if (typeof overlay === "object" && overlay !== null && !!overlay.$isControl)
        ;
    }
  },
  _targetVisibilityChanged$1: function(e) {
    var t1, observers, obIndex, targetElement, makeOverlaysVisible, t2, overlayList, i;
    t1 = J.getInterceptor$x(e);
    observers = this._watchListOf$1(t1.get$source(e)).get$observers();
    for (obIndex = 0; obIndex < observers.length; ++obIndex) {
      targetElement = observers[obIndex];
      makeOverlaysVisible = t1.get$newValue(e);
      t2 = this._overlayMap;
      overlayList = t2.$index(t2, targetElement);
      if (!overlayList.get$hasOverlays())
        continue;
      i = 0;
      while (true) {
        if (overlayList._overlays == null) {
          t2 = [];
          t2.$builtinTypeInfo = [Q.UIElement];
          overlayList._overlays = t2;
        }
        t2 = overlayList._overlays;
        if (!(i < t2.length))
          break;
        if (t2 == null) {
          t2 = [];
          t2.$builtinTypeInfo = [Q.UIElement];
          overlayList._overlays = t2;
        }
        t2 = overlayList._overlays;
        if (i >= t2.length)
          throw H.ioore(t2, i);
        t2[i].set$visible(makeOverlaysVisible);
        ++i;
      }
    }
  },
  get$_targetVisibilityChanged: function() {
    return new H.BoundClosure$1(this, Q.OverlayContainer.prototype._targetVisibilityChanged$1, null, "_targetVisibilityChanged$1");
  },
  getDefinition$0: function() {
    return $.OverlayContainer_overlayElementDef;
  },
  OverlayContainer$0: function() {
    var t1 = new Q.Canvas(false, false, null, null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
    t1.UIElement$0();
    t1._cachedPadding = $.Margin_EMPTY;
    this._host = t1;
    this.insertRawChild$2(this._host, -1);
  },
  static: {
"": "OverlayContainer_overlayElementDef,OverlayContainer_locProperty,OverlayContainer_finalLocationProperty,OverlayContainer__SAFETY_MARGIN",
OverlayContainer$: function() {
  var t1 = new Q.OverlayContainer(null, null, null, null, null, null, null, false, null, null, null, 0, 0, 0, 0, 0, 0, null, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, 0, false, null, null, null, null);
  t1.UIElement$0();
  t1._cachedPadding = $.Margin_EMPTY;
  t1.OverlayContainer$0();
  return t1;
},

OverlayContainer_registerOverlayContainer: function() {
  $.OverlayContainer_locProperty = Q.ElementRegistry_registerProperty("Loc", 14, 2, null, 0);
  $.OverlayContainer_finalLocationProperty = Q.ElementRegistry_registerProperty("finalLocation", 14, 2, null, 0);
  $.OverlayContainer_overlayElementDef = Q.ElementRegistry_register("OverlayContainer", $.ContentContainer_contentcontainerElementDef, [$.OverlayContainer_locProperty, $.OverlayContainer_finalLocationProperty], null);
}}

},

_OverlayList: {"": "Object;targetElement,_overlays",
  get$hasOverlays: function() {
    var t1 = this._overlays;
    return t1 != null && t1.length > 0;
  },
  get$overlays: function() {
    if (this._overlays == null) {
      var t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.UIElement]);
      this._overlays = t1;
    }
    return this._overlays;
  }
},

_WatchList: {"": "Object;viewNode,observers<,sizeHandler<,transformHandler,visibilityHandler"},

Pen: {"": "Object;"},

UIPlatform_scheduleEnterFrame_closure: {"": "Closure;app_0",
  call$1: function(time) {
    var t1;
    if (J.$eq(time, $.UIPlatform_previousAnimationTime))
      return;
    $.UIPlatform_previousAnimationTime = time;
    $.UIPlatform_inAnimFrameCallback = true;
    t1 = this.app_0;
    t1._enterFrame$1(time);
    $.UIPlatform_inAnimFrameCallback = false;
    if ($.UIPlatform_pendingEnterFrame) {
      Q.UIPlatform_scheduleEnterFrame(t1);
      $.UIPlatform_pendingEnterFrame = false;
    }
  },
  $is_args1: true
},

UIPlatform_scheduleEnterFrame_closure0: {"": "Closure;animCallbackHandler_1",
  call$0: function() {
    this.animCallbackHandler_1.call$1(P.DateTime$_now().millisecondsSinceEpoch);
  }
},

UIPlatform_initializeAppEvents_closure: {"": "Closure;app_0",
  call$1: function($event) {
    var width, height, t1;
    width = window.innerWidth;
    height = window.innerHeight;
    t1 = this.app_0;
    t1._hostWidth = width;
    t1._hostHeight = height;
    t1.relayoutRoot$0();
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure0: {"": "Closure;app_1",
  call$1: function(e) {
    if (this.app_1._keyDownEventHandler$1(e))
      J.preventDefault$0$x(e);
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure1: {"": "Closure;app_2",
  call$1: function(e) {
    if (this.app_2._keyPressEventHandler$1(e))
      J.preventDefault$0$x(e);
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure2: {"": "Closure;app_3",
  call$1: function(e) {
    if (this.app_3._keyUpEventHandler$1(e))
      J.preventDefault$0$x(e);
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure3: {"": "Closure;app_4",
  call$1: function($event) {
    var button, t1, resEvent, handled;
    if ($.UIPlatform__isTouchEnabled)
      return false;
    button = Q.UIPlatform__buttonFromEvent($event);
    t1 = J.getInterceptor$x($event);
    resEvent = this.app_4._routeMouseEvent$4(J.get$x$x(t1.get$page($event)), J.get$y$x(t1.get$page($event)), button, 2);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      t1.preventDefault$0($event);
    Q.UpdateQueue_flush();
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure4: {"": "Closure;app_5",
  call$1: function($event) {
    var button, t1, resEvent, handled;
    if ($.UIPlatform__isTouchEnabled)
      return false;
    button = Q.UIPlatform__buttonFromEvent($event);
    t1 = J.getInterceptor$x($event);
    resEvent = this.app_5._routeMouseEvent$4(J.get$x$x(t1.get$page($event)), J.get$y$x(t1.get$page($event)), button, 0);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      t1.preventDefault$0($event);
    Q.UpdateQueue_flush();
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure5: {"": "Closure;app_6",
  call$1: function($event) {
    var button, t1, resEvent, handled;
    if ($.UIPlatform__isTouchEnabled)
      return false;
    button = Q.UIPlatform__buttonFromEvent($event);
    t1 = J.getInterceptor$x($event);
    resEvent = this.app_6._routeMouseEvent$4(J.get$x$x(t1.get$page($event)), J.get$y$x(t1.get$page($event)), button, 1);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      t1.preventDefault$0($event);
    Q.UpdateQueue_flush();
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure6: {"": "Closure;app_7",
  call$1: function($event) {
    var button, t1, resEvent, handled;
    if ($.UIPlatform__isTouchEnabled)
      return false;
    button = Q.UIPlatform__buttonFromEvent($event);
    t1 = J.getInterceptor$x($event);
    if (J.get$x$x(t1.get$page($event)) === 0 && J.get$y$x(t1.get$page($event)) === 0)
      return false;
    resEvent = this.app_7._routeMouseEvent$4(J.get$x$x(t1.get$page($event)), J.get$y$x(t1.get$page($event)), button, 2);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      t1.preventDefault$0($event);
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeAppEvents_closure7: {"": "Closure;",
  call$1: function($event) {
    J.preventDefault$0$x($event);
  },
  $is_args1: true
},

UIPlatform_initializeTouchEvents_closure: {"": "Closure;box_0,app_1",
  call$1: function($event) {
    var t1, touch, t2, resEvent, handled;
    $.UIPlatform__isTouchEnabled = true;
    t1 = J.get$touches$x($event);
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    touch = t1[0];
    t1 = new P.Point(touch.pageX, touch.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.box_0;
    t2.pageX_0 = t1.x;
    t1 = new P.Point(touch.pageX, touch.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    t2.pageY_1 = t1.y;
    resEvent = this.app_1._routeMouseEvent$4(t2.pageX_0, t2.pageY_1, 1, 0);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      $event.preventDefault();
    Q.UpdateQueue_flush();
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeTouchEvents_closure0: {"": "Closure;box_0,app_2",
  call$1: function($event) {
    var t1, touch, t2, resEvent, handled;
    t1 = J.get$touches$x($event);
    if (0 >= t1.length)
      throw H.ioore(t1, 0);
    touch = t1[0];
    t1 = new P.Point(touch.pageX, touch.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    t2 = this.box_0;
    t2.pageX_0 = t1.x;
    t1 = new P.Point(touch.pageX, touch.pageY);
    H.setRuntimeTypeInfo(t1, [null]);
    t2.pageY_1 = t1.y;
    resEvent = this.app_2._routeMouseEvent$4(t2.pageX_0, t2.pageY_1, 1, 2);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      $event.preventDefault();
    return handled;
  },
  $is_args1: true
},

UIPlatform_initializeTouchEvents_closure1: {"": "Closure;box_0,app_3",
  call$1: function($event) {
    var t1, resEvent, handled;
    t1 = this.box_0;
    resEvent = this.app_3._routeMouseEvent$4(t1.pageX_0, t1.pageY_1, 1, 1);
    if (resEvent == null)
      handled = false;
    else
      handled = resEvent._forceDefault ? false : resEvent.handled;
    if (handled)
      J.preventDefault$0$x($event);
    Q.UpdateQueue_flush();
    return handled;
  },
  $is_args1: true
},

RootSurface: {"": "UISurfaceImpl;app,body,rawChildren,_surfaceTarget,_hitTestMode,_painted,_visible,_opacity,_filterDist,_tag,renderTransform,parentSurface,root,hostElement,_canvas,_filters,_borderRadius,_backgroundBrush,mouseEnabled,_transform,layoutX,layoutY,layoutW,layoutH,locationInitialized,_frag,_clipChildren",
  addChild$1: function(child) {
    Q.UISurfaceImpl.prototype.addChild$1.call(this, child);
    child.root = this.app;
    return child;
  },
  insertChild$2: function(index, child) {
    Q.UISurfaceImpl.prototype.insertChild$2.call(this, index, child);
    child.root = this.app;
    return child;
  },
  _createElementOnDemand$0: function() {
  },
  _hostElementCreated$1: function(child) {
    var t1;
    J.set$position$x(J.get$style$x(child.hostElement), "absolute");
    t1 = this.body;
    t1.toString;
    new W._ChildNodeListLazy(t1)._this.appendChild(child.hostElement);
  },
  onRelayoutRoot$1: function(disableScrollBars) {
    var docBody, t1;
    docBody = document.body;
    t1 = docBody.style;
    if (disableScrollBars) {
      J.set$overflowY$x(t1, "hidden");
      J.set$overflowX$x(docBody.style, "hidden");
    } else {
      t1.removeProperty("overflow-y");
      docBody.style.removeProperty("overflow-x");
    }
  },
  RootSurface$2: function(owner, win) {
    this.app = owner;
    this.body = document.body;
    J.set$margin$x(document.body.style, "0");
    J.set$height$x(document.body.style, "100%");
  },
  static: {
RootSurface$: function(owner, win) {
  var t1 = new Q.RootSurface(null, null, null, null, 0, false, null, 1, null, null, null, null, null, null, null, null, null, null, true, null, 0, 0, 0, 0, false, null, false);
  t1._visible = true;
  t1.RootSurface$2(owner, win);
  return t1;
}}

},

UISurfaceImpl: {"": "Object;rawChildren,_surfaceTarget,_hitTestMode,_painted,_visible,_opacity,_filterDist,_tag,renderTransform,parentSurface,root,hostElement,_canvas,_filters,_borderRadius,_backgroundBrush,mouseEnabled,_transform,layoutX<,layoutY<,layoutW,layoutH,locationInitialized,_frag,_clipChildren",
  lockUpdates$1: function(lock) {
    var t1;
    if (lock)
      this._frag = document.createDocumentFragment();
    else {
      t1 = this.hostElement;
      if (t1 != null)
        J.get$nodes$x(t1)._this.appendChild(this._frag);
      this._frag = null;
    }
  },
  reparentChild$2: function(child, index) {
    var t1, t2, t3;
    this._addChild$2(child, index);
    t1 = this._frag;
    if (t1 != null) {
      t2 = index !== -1 && new W._ChildNodeListLazy(t1)._this.childNodes.length !== 0;
      t1.toString;
      t3 = child.hostElement;
      if (t2) {
        t2 = new W._ChildNodeListLazy(t1)._this.childNodes;
        if (index >>> 0 !== index || index >= t2.length)
          throw H.ioore(t2, index);
        t1.insertBefore(t3, t2[index]);
      } else
        new W._ChildNodeListLazy(t1)._this.appendChild(t3);
    } else {
      t1 = child.hostElement;
      t2 = this.hostElement;
      if (index !== -1) {
        t3 = J.get$nodes$x(t2)._this.childNodes;
        if (index >>> 0 !== index || index >= t3.length)
          throw H.ioore(t3, index);
        t2.insertBefore(t1, t3[index]);
      } else
        J.get$nodes$x(t2)._this.appendChild(t1);
    }
    child.root = this.root;
  },
  reparentChild$1: function(child) {
    return this.reparentChild$2(child, -1);
  },
  _requestCanvas$0: function() {
    var t1, hasFilters, t2, t3, cw, ch;
    this.root.rootSurface;
    this._canvas = W._ElementFactoryProvider_createElement_tag("canvas", null);
    J.get$nodes$x(this.hostElement)._this.appendChild(this._canvas);
    J.set$position$x(J.get$style$x(this._canvas), "absolute");
    t1 = this._filterDist;
    hasFilters = t1 != null;
    if ($.Application_screenPixelRatio === 1) {
      t2 = this._canvas;
      t3 = this.layoutW;
      if (hasFilters) {
        J.set$width$x(t2, t3 + C.JSNumber_methods.toInt$0(t1.left + t1.right));
        t1 = this._canvas;
        t2 = this.layoutH;
        t3 = this._filterDist;
        J.set$height$x(t1, t2 + C.JSNumber_methods.toInt$0(t3.top + t3.bottom));
      } else {
        J.set$width$x(t2, t3);
        J.set$height$x(this._canvas, this.layoutH);
      }
    } else {
      t2 = this.layoutW;
      if (hasFilters) {
        cw = C.JSNumber_methods.toInt$0(t2 + t1.left + t1.right);
        J.set$width$x(J.get$style$x(this._canvas), "" + cw + "px");
        t1 = this.layoutH;
        t2 = this._filterDist;
        ch = t1 + t2.top + t2.bottom;
        J.set$height$x(J.get$style$x(this._canvas), H.S(ch) + "px");
        t2 = this._canvas;
        t1 = $.Application_screenPixelRatio;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        J.set$width$x(t2, C.JSNumber_methods.toInt$0(cw * t1));
        t1 = this._canvas;
        t2 = $.Application_screenPixelRatio;
        if (typeof t2 !== "number")
          throw H.iae(t2);
        J.set$height$x(t1, C.JSNumber_methods.toInt$0(ch * t2));
      } else {
        J.set$width$x(J.get$style$x(this._canvas), "" + t2 + "px");
        J.set$height$x(J.get$style$x(this._canvas), "" + this.layoutH + "px");
        t1 = this._canvas;
        t2 = this.layoutW;
        t3 = $.Application_screenPixelRatio;
        if (typeof t3 !== "number")
          throw H.iae(t3);
        J.set$width$x(t1, C.JSNumber_methods.toInt$0(t2 * t3));
        t3 = this._canvas;
        t2 = this.layoutH;
        t1 = $.Application_screenPixelRatio;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        J.set$height$x(t3, C.JSNumber_methods.toInt$0(t2 * t1));
      }
    }
    if (hasFilters) {
      t1 = this._filterDist.left;
      if (t1 !== 0)
        J.set$left$x(J.get$style$x(this._canvas), H.S(-t1) + "px");
      t1 = this._filterDist.top;
      if (t1 !== 0)
        J.set$top$x(J.get$style$x(this._canvas), H.S(-t1) + "px");
    }
    t1 = this._borderRadius;
    if (t1 != null)
      this._setBorderRadius$2(J.get$style$x(this._canvas), t1);
    J.get$style$x(this.hostElement).removeProperty("box-shadow");
  },
  _addChild$2: function(surface, index) {
    var t1;
    surface.parentSurface = this;
    if (this.rawChildren == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.UISurface]);
      this.rawChildren = t1;
    }
    t1 = this.rawChildren;
    if (index !== -1)
      J.insert$2$ax(t1, index, surface);
    else
      t1.push(surface);
  },
  removeChild$1: function(surface) {
    var t1, index;
    t1 = this.rawChildren;
    index = t1 == null ? -1 : H.Arrays_indexOf(t1, surface, 0, t1.length);
    if (index !== -1) {
      J.removeAt$1$ax(this.rawChildren, index);
      return true;
    }
    return false;
  },
  close$0: function(_) {
    var t1 = this.hostElement;
    if (t1 != null) {
      J.remove$0$ax(t1);
      this.hostElement = null;
      this._canvas = null;
    }
  },
  setLocation$4: function(targetX, targetY, targetWidth, targetHeight) {
    var p, offsetToDivX, offsetToDivY, style, t1, t2, t3, t4, needsRepaint;
    p = this.parentSurface;
    if (p != null) {
      offsetToDivX = 0;
      offsetToDivY = 0;
      while (true) {
        if (!(p != null && p.hostElement == null))
          break;
        offsetToDivX += p.layoutX;
        offsetToDivY += p.layoutY;
        p = p.parentSurface;
      }
    } else {
      offsetToDivX = 0;
      offsetToDivY = 0;
    }
    this.locationInitialized = true;
    style = J.get$style$x(this.hostElement);
    if (this.layoutX !== targetX) {
      this.layoutX = targetX;
      J.set$left$x(style, "" + (targetX + offsetToDivX) + "px");
    }
    if (this.layoutY !== targetY) {
      this.layoutY = targetY;
      J.set$top$x(style, "" + (targetY + offsetToDivY) + "px");
    }
    if (this.layoutW !== targetWidth) {
      this.layoutW = targetWidth;
      J.set$width$x(style, "" + targetWidth + "px");
      t1 = this._canvas;
      if (t1 != null) {
        t2 = $.Application_screenPixelRatio;
        t3 = this.layoutW;
        if (t2 === 1) {
          t2 = this._filterDist;
          J.set$width$x(t1, t3 + (t2 == null ? 0 : C.JSNumber_methods.toInt$0(t2.left + t2.right)));
        } else {
          t4 = this._filterDist;
          t4 = t4 == null ? 0 : t4.left + t4.right;
          if (typeof t2 !== "number")
            throw t2.$mul();
          J.set$width$x(t1, C.JSNumber_methods.toInt$0(t2 * (t3 + t4)));
        }
        needsRepaint = true;
      } else
        needsRepaint = false;
    } else
      needsRepaint = false;
    if (this.layoutH !== targetHeight) {
      this.layoutH = targetHeight;
      J.set$height$x(style, "" + targetHeight + "px");
      t1 = this._canvas;
      if (t1 != null) {
        t2 = $.Application_screenPixelRatio;
        t3 = this.layoutH;
        if (t2 === 1) {
          t2 = this._filterDist;
          J.set$height$x(t1, t3 + (t2 == null ? 0 : C.JSNumber_methods.toInt$0(t2.top + t2.bottom)));
        } else {
          t4 = this._filterDist;
          t4 = t4 == null ? 0 : t4.top + t4.bottom;
          if (typeof t2 !== "number")
            throw t2.$mul();
          J.set$height$x(t1, C.JSNumber_methods.toInt$0(t2 * (t3 + t4)));
        }
        needsRepaint = true;
      }
    }
    if (needsRepaint) {
      t1 = this._surfaceTarget;
      if (t1 != null) {
        t1._layoutFlags = (t1._layoutFlags | 2) >>> 0;
        Q.UpdateQueue_updateDrawing(t1);
      }
    }
  },
  _updateLocation$0: function() {
    var p, offsetToDivX, offsetToDivY, t1, t2, style;
    p = this.parentSurface;
    offsetToDivX = 0;
    offsetToDivY = 0;
    while (true) {
      if (!(p != null && p.hostElement == null))
        break;
      offsetToDivX += p.layoutX;
      offsetToDivY += p.layoutY;
      p = p.parentSurface;
    }
    t1 = this.layoutX;
    t2 = this.layoutY;
    style = J.get$style$x(this.hostElement);
    J.getInterceptor$x(style).set$left(style, "" + (offsetToDivX + t1) + "px");
    C.CssStyleDeclaration_methods.set$top(style, "" + (offsetToDivY + t2) + "px");
  },
  set$clipChildren: function(value) {
    var t1;
    this._clipChildren = value;
    if (value)
      J.set$overflow$x(J.get$style$x(this.hostElement), "hidden");
    else {
      t1 = this.hostElement;
      if (t1 != null)
        J.get$style$x(t1).removeProperty("overflow");
    }
  },
  set$opacity: function(_, value) {
    var t1 = J.getInterceptor(value);
    if (!t1.$eq(value, this._opacity)) {
      this._opacity = value;
      J.set$opacity$x(J.get$style$x(this.hostElement), t1.toStringAsFixed$1(value, 2));
    }
  },
  setBackground$1: function(brush) {
    var t1;
    if (brush == null) {
      if (this._backgroundBrush != null) {
        J.get$style$x(this.hostElement).removeProperty("background-color");
        this._backgroundBrush = null;
      }
    } else {
      t1 = this.hostElement;
      if (t1 != null)
        Q.UIPlatform_applyBrush(t1, brush);
      this._backgroundBrush = brush;
      if (!this._painted) {
        this._painted = true;
        t1 = this._filters;
        if (t1 != null)
          this.applyFilters$1(t1);
      }
    }
  },
  setBorderRadius$1: function(borderRadius) {
    var t1, t2;
    if (borderRadius == null) {
      t1 = this.hostElement;
      if (t1 == null)
        return;
      if (this._borderRadius != null)
        J.get$style$x(t1).removeProperty("border-radius");
      this._borderRadius = null;
      return;
    }
    this._borderRadius = borderRadius;
    t1 = this.hostElement;
    if (t1 == null)
      return;
    t2 = this._canvas;
    if (t2 != null)
      this._setBorderRadius$2(J.get$style$x(t2), borderRadius);
    else
      this._setBorderRadius$2(J.get$style$x(t1), borderRadius);
  },
  _setBorderRadius$2: function(style, borderRadius) {
    var t1, t2, t3;
    if (borderRadius != null) {
      t1 = borderRadius.isUniform$0();
      t2 = J.getInterceptor$x(style);
      t3 = borderRadius.topLeft;
      if (t1)
        t2.set$borderRadius(style, C.JSInt_methods.toString$0(t3) + "px");
      else {
        t2.set$borderTopLeftRadius(style, C.JSInt_methods.toString$0(t3) + "px");
        C.CssStyleDeclaration_methods.set$borderTopRightRadius(style, C.JSInt_methods.toString$0(borderRadius.topRight) + "px");
        C.CssStyleDeclaration_methods.set$borderBottomLeftRadius(style, C.JSInt_methods.toString$0(borderRadius.bottomLeft) + "px");
        C.CssStyleDeclaration_methods.set$borderBottomRightRadius(style, C.JSInt_methods.toString$0(borderRadius.bottomRight) + "px");
      }
    }
  },
  clear$0: function(_) {
    var t1 = this._canvas;
    if (t1 != null)
      J.clearRect$4$x(J.getContext$1$x(t1, "2d"), 0, 0, J.get$width$x(this._canvas), J.get$height$x(this._canvas));
  },
  drawRect$7: function(x, y, width, height, brush, pen, borderRadius) {
    var context, t1, fillStyle, t2;
    if (this._canvas == null)
      this._requestCanvas$0();
    context = J.getContext$1$x(this._canvas, "2d");
    t1 = $.Application_screenPixelRatio;
    if (typeof t1 !== "number")
      throw t1.$gt();
    if (t1 > 1)
      J.scale$2$x(context, t1, t1);
    fillStyle = Q.UISurfaceImpl_brushToFillStyle(context, brush, width, height);
    J.set$fillStyle$x(context, fillStyle != null ? fillStyle : "");
    t1 = pen != null;
    if (t1)
      Q.UISurfaceImpl__applyStrokeStyle(context, pen, width, height);
    if (this._filters != null)
      this._applyFiltersToCanvas$1(context);
    t2 = this._filters;
    if (t2 != null)
      t2.get$_innerShadow();
    context.beginPath();
    this._drawRoundRect$6(context, x, y, width, height, borderRadius);
    this._painted = true;
    if (t1) {
      context.beginPath();
      this._drawRoundRect$7(context, x, y, width, height, borderRadius, true);
      this._painted = true;
    }
  },
  _drawRoundRect$7: function(context, x, y, width, height, borderRadius, stroke) {
    if (borderRadius == null || J.$eq(borderRadius, $.BorderRadius_EMPTY)) {
      if (stroke)
        context.strokeRect(x, y, width, height);
      else
        context.fillRect(x, y, width, height);
      return;
    }
    this._createRoundedPath$6(context, x, y, width, height, borderRadius);
    if (stroke)
      context.stroke();
    else
      context.fill();
  },
  _drawRoundRect$6: function(context, x, y, width, height, borderRadius) {
    return this._drawRoundRect$7(context, x, y, width, height, borderRadius, false);
  },
  _createRoundedPath$6: function(context, x, y, width, height, borderRadius) {
    var ex, ey, minSize, t1, topLeftRadius, topRightRadius, bottomLeftRadius, bottomRightRadius, a, s;
    if (typeof width !== "number")
      throw H.iae(width);
    ex = x + width;
    if (typeof height !== "number")
      throw H.iae(height);
    ey = y + height;
    minSize = width < height ? width * 2 : height * 2;
    t1 = J.getInterceptor$x(borderRadius);
    topLeftRadius = t1.get$topLeft(borderRadius);
    topRightRadius = t1.get$topRight(borderRadius);
    bottomLeftRadius = t1.get$bottomLeft(borderRadius);
    bottomRightRadius = t1.get$bottomRight(borderRadius);
    if (typeof topLeftRadius !== "number")
      throw topLeftRadius.$lt();
    if (topLeftRadius < minSize)
      ;
    else
      topLeftRadius = minSize;
    if (typeof topRightRadius !== "number")
      throw topRightRadius.$lt();
    if (topRightRadius < minSize)
      ;
    else
      topRightRadius = minSize;
    if (typeof bottomLeftRadius !== "number")
      throw bottomLeftRadius.$lt();
    if (bottomLeftRadius < minSize)
      ;
    else
      bottomLeftRadius = minSize;
    if (typeof bottomRightRadius !== "number")
      throw bottomRightRadius.$lt();
    if (bottomRightRadius < minSize)
      ;
    else
      bottomRightRadius = minSize;
    a = bottomRightRadius * 0.292893218813453;
    s = bottomRightRadius * 0.585786437626905;
    t1 = ey - bottomRightRadius;
    context.moveTo(ex, t1);
    context.quadraticCurveTo(ex, ey - s, ex - a, ey - a);
    context.quadraticCurveTo(ex - s, ey, ex - bottomRightRadius, ey);
    a = bottomLeftRadius * 0.292893218813453;
    s = bottomLeftRadius * 0.585786437626905;
    context.lineTo(x + bottomLeftRadius, ey);
    context.quadraticCurveTo(x + s, ey, x + a, ey - a);
    context.quadraticCurveTo(x, ey - s, x, ey - bottomLeftRadius);
    a = topLeftRadius * 0.292893218813453;
    s = topLeftRadius * 0.585786437626905;
    context.lineTo(x, y + topLeftRadius);
    context.quadraticCurveTo(x, y + s, x + a, y + a);
    context.quadraticCurveTo(x + s, y, x + topLeftRadius, y);
    a = topRightRadius * 0.292893218813453;
    s = topRightRadius * 0.585786437626905;
    context.lineTo(ex - topRightRadius, y);
    context.quadraticCurveTo(ex - s, y, ex - a, y + a);
    context.quadraticCurveTo(ex, y + s, ex, y + topRightRadius);
    context.lineTo(ex, t1);
  },
  _applyFiltersToCanvas$1: function(context) {
    this._filters.get$_dropShadow();
  },
  _createElementOnDemand$0: function() {
    this.hostElement = W._ElementFactoryProvider_createElement_tag("div", null);
    var t1 = this.parentSurface;
    if (t1 != null)
      t1._hostElementCreated$1(this);
  },
  addChild$1: function(child) {
    this._addChild$2(child, -1);
    child.root = this.root;
    child._createElementOnDemand$0();
    return child;
  },
  insertChild$2: function(index, child) {
    this._addChild$2(child, index);
    child.root = this.root;
    child._createElementOnDemand$0();
    return child;
  },
  _hostElementCreated$1: function(child) {
    var t1, numChildren, t2, index, t3;
    t1 = this.rawChildren;
    numChildren = t1.length;
    if (numChildren !== 0) {
      t2 = numChildren - 1;
      if (t2 < 0)
        throw H.ioore(t1, t2);
      t2 = child === t1[t2];
    } else
      t2 = true;
    if (t2)
      ;
    index = H.Arrays_indexOf(t1, child, 0, numChildren);
    t1 = this._frag;
    if (t1 != null) {
      t2 = index !== -1 && index < new W._ChildNodeListLazy(t1)._this.childNodes.length;
      t1.toString;
      t3 = child.hostElement;
      if (t2) {
        t2 = new W._ChildNodeListLazy(t1)._this.childNodes;
        if (index >>> 0 !== index || index >= t2.length)
          throw H.ioore(t2, index);
        t1.insertBefore(t3, t2[index]);
      } else
        new W._ChildNodeListLazy(t1)._this.appendChild(t3);
    } else {
      t1 = index !== -1 && index < J.get$nodes$x(this.hostElement)._this.childNodes.length;
      t2 = child.hostElement;
      t3 = this.hostElement;
      if (t1) {
        t1 = J.get$nodes$x(t3)._this.childNodes;
        if (index >>> 0 !== index || index >= t1.length)
          throw H.ioore(t1, index);
        t3.insertBefore(t2, t1[index]);
      } else
        J.get$nodes$x(t3)._this.appendChild(t2);
    }
    J.set$position$x(J.get$style$x(child.hostElement), "absolute");
    if ($.Application_isIos && $.Application_isMobile)
      J.set$backfaceVisibility$x(J.get$style$x(child.hostElement), "hidden");
  },
  set$surfaceTransform: function(transform) {
    var matrix, t1, t2, originX, originY, t3, t4, centerMoveX, centerMoveY, originShift, transformBuilder, tx, ty;
    if (transform != null) {
      matrix = transform.get$matrix();
      this._transform = transform;
      if (this.hostElement != null) {
        t1 = $.UITransform_originXProperty;
        t2 = transform._propBag;
        if (!(t2 != null && t2.containsKey$1(t1))) {
          t1 = $.UITransform_originYProperty;
          t2 = transform._propBag;
          t1 = t2 != null && t2.containsKey$1(t1);
        } else
          t1 = true;
        if (t1) {
          t1 = transform.getProperty$1($.UITransform_originXProperty);
          if (typeof t1 !== "number")
            throw H.iae(t1);
          originX = 0.5 - t1;
          t1 = transform.getProperty$1($.UITransform_originYProperty);
          if (typeof t1 !== "number")
            throw H.iae(t1);
          originY = 0.5 - t1;
          if (originX !== 0 || originY !== 0) {
            t1 = this.layoutW;
            t2 = matrix.a;
            if (typeof t2 !== "number")
              throw H.iae(t2);
            t3 = this.layoutH;
            t4 = matrix.b;
            if (typeof t4 !== "number")
              throw H.iae(t4);
            centerMoveX = t1 * t2 * originX + t3 * t4 * originY - t1 * originX;
            t4 = matrix.c;
            if (typeof t4 !== "number")
              throw H.iae(t4);
            t2 = matrix.d;
            if (typeof t2 !== "number")
              throw H.iae(t2);
            centerMoveY = t1 * t4 * originX + t3 * t2 * originY - t3 * originY;
            originShift = true;
          } else {
            centerMoveX = 0;
            centerMoveY = 0;
            originShift = false;
          }
        } else {
          centerMoveX = 0;
          centerMoveY = 0;
          originShift = false;
        }
        if ($.Application_isWebKit) {
          transformBuilder = P.StringBuffer$("");
          tx = this._transform.getProperty$1($.UITransform_translateXProperty);
          ty = this._transform.getProperty$1($.UITransform_translateYProperty);
          if (originShift) {
            tx = J.$add$ns(tx, centerMoveX);
            ty = J.$add$ns(ty, centerMoveY);
          }
          if (!J.$eq(tx, 0) || !J.$eq(ty, 0)) {
            transformBuilder.write$1("translate3d(" + H.S(tx) + "px,");
            transformBuilder.write$1(H.S(ty) + "px,0px) ");
          }
          if (!J.$eq(this._transform.getProperty$1($.UITransform_scaleXProperty), 1) || !J.$eq(this._transform.getProperty$1($.UITransform_scaleYProperty), 1)) {
            transformBuilder.write$1("scale3d(" + H.S(this._transform.getProperty$1($.UITransform_scaleXProperty)) + ",");
            transformBuilder.write$1(H.S(this._transform.getProperty$1($.UITransform_scaleYProperty)) + ",1) ");
          }
          if (!J.$eq(this._transform.getProperty$1($.UITransform_rotateProperty), 0))
            transformBuilder.write$1("rotate3d(0,0,1," + H.S(this._transform.getProperty$1($.UITransform_rotateProperty)) + "deg) ");
          J.setProperty$2$x(J.get$style$x(this.hostElement), "-webkit-transform", transformBuilder._contents);
        } else {
          t1 = $.Application_isIE;
          t2 = this.hostElement;
          t3 = this._transform;
          if (t1)
            J.setProperty$2$x(J.get$style$x(t2), "-ms-transform", J.toString$0(t3));
          else
            J.set$transform$x(J.get$style$x(t2), J.toString$0(t3));
        }
      }
    } else if (this._transform != null)
      if ($.Application_isWebKit)
        J.get$style$x(this.hostElement).removeProperty("-webkit-transform");
      else {
        t1 = $.Application_isIE;
        t2 = this.hostElement;
        if (t1)
          J.get$style$x(t2).removeProperty("-ms-transform");
        else
          J.get$style$x(t2).removeProperty("transform");
      }
  },
  set$visible: function(value) {
    var t1, t2;
    if (!J.$eq(this._visible, value)) {
      this._visible = value;
      t1 = this.hostElement;
      if (t1 != null) {
        t2 = J.getInterceptor$x(t1);
        if (value === true)
          J.set$display$x(t2.get$style(t1), "");
        else
          J.set$display$x(t2.get$style(t1), "none");
      }
    }
  },
  cursorChanged$1: function(cursor) {
    var t1;
    if ($.Application_isIE && this.hostElement != null) {
      t1 = this.hostElement;
      if (cursor == null)
        J.get$style$x(t1).removeProperty("cursor");
      else
        J.set$cursor$x(J.get$style$x(t1), J.get$name$x(cursor));
    }
  },
  get$visible: function() {
    return this._visible;
  },
  applyFilters$1: function(filters) {
    var t1, requiresCanvasRefresh, f, t2, t3;
    this._filters = filters;
    if (filters == null || J.get$length$asx(filters) === 0) {
      t1 = this.hostElement;
      if (t1 != null)
        J.get$style$x(t1).removeProperty("box-shadow");
      this._filterDist = null;
      return;
    }
    t1 = this._filterDist;
    if (t1 == null)
      this._filterDist = new Q.Margin(0, 0, 0, 0);
    else {
      t1.left = 0;
      this._filterDist.top = 0;
      this._filterDist.right = 0;
      this._filterDist.bottom = 0;
    }
    t1 = J.getInterceptor$asx(filters);
    requiresCanvasRefresh = false;
    f = 0;
    while (true) {
      t2 = t1.get$length(filters);
      if (typeof t2 !== "number")
        throw H.iae(t2);
      if (!(f < t2))
        break;
      filters.getFilter$1(f);
      ++f;
    }
    if (requiresCanvasRefresh) {
      t1 = this._canvas;
      t2 = this.layoutW;
      t3 = this._filterDist;
      J.set$width$x(t1, t2 + C.JSNumber_methods.toInt$0(t3.left + t3.right));
      t3 = this._canvas;
      t2 = this.layoutH;
      t1 = this._filterDist;
      J.set$height$x(t3, t2 + C.JSNumber_methods.toInt$0(t1.top + t1.bottom));
      J.set$left$x(J.get$style$x(this._canvas), H.S(-this._filterDist.left) + "px");
      J.set$top$x(J.get$style$x(this._canvas), H.S(-this._filterDist.top) + "px");
      t1 = this._surfaceTarget;
      t1._layoutFlags = (t1._layoutFlags | 2) >>> 0;
      Q.UpdateQueue_updateDrawing(t1);
    }
  },
  set$enableHitTesting: function(value) {
    var t1 = this._hitTestMode;
    if (value)
      this._hitTestMode = (t1 & 4294967293) >>> 0;
    else {
      this._hitTestMode = (t1 | 2) >>> 0;
      t1 = this.hostElement;
      if (t1 != null)
        J.set$pointerEvents$x(J.get$style$x(t1), "none");
    }
  },
  set$enableChildHitTesting: function(value) {
    var t1 = this._hitTestMode;
    if (value === true)
      this._hitTestMode = (t1 & 4294967291) >>> 0;
    else
      this._hitTestMode = (t1 | 4) >>> 0;
  },
  hitTest$2: function(mouseX, mouseY) {
    var debugEnabled, t1, t2, t3, i, mouseY0, mouseX0, surface, dispObj, m, mOrigin, t4, t5, cx, cy, distanceToLeftTopX, distanceToLeftTopY, u, line;
    debugEnabled = $.UISurfaceImpl__globalDebugEnabled && $.KeyboardEventArgs_altKey === true;
    if (debugEnabled) {
      t1 = this._surfaceTarget;
      if (t1 != null) {
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isUIElement;
      } else
        t2 = false;
      t3 = $.Application__current;
      if (t2) {
        t2 = "mouse = " + H.S(mouseX) + " , " + H.S(mouseY);
        t3.toString;
        P.print(t2);
        t2 = $.Application__current;
        t1 = "starting hit testing " + H.S(J.get$toString$(t1)) + "layoutXYWH=" + this.layoutX + ", " + this.layoutY + ", " + this.layoutW + ", " + this.layoutH + " id=" + H.S(t1.id);
        t2.toString;
        P.print(t1);
      } else {
        t1 = "mouse = " + H.S(mouseX) + " , " + H.S(mouseY) + " target null " + H.Primitives_objectToString(this) + " layoutXYWH= " + this.layoutX + ", " + this.layoutY + ", " + this.layoutW + ", " + this.layoutH;
        t3.toString;
        P.print(t1);
      }
    }
    t1 = this._hitTestMode;
    if ((t1 & 2) !== 0 && (t1 & 4) !== 0)
      return;
    if (J.$eq(this._visible, false) || J.$eq(this._opacity, 0))
      return;
    if (this._clipChildren) {
      t1 = J.getInterceptor$n(mouseX);
      if (!t1.$lt(mouseX, 0)) {
        t2 = J.getInterceptor$n(mouseY);
        t1 = t2.$lt(mouseY, 0) || t1.$ge(mouseX, this.layoutW) || t2.$ge(mouseY, this.layoutH);
      } else
        t1 = true;
    } else
      t1 = false;
    if (t1)
      return;
    if ((this._hitTestMode & 4) === 0) {
      t1 = this.rawChildren;
      i = (t1 != null ? t1.length : 0) - 1;
      t1 = J.getInterceptor$n(mouseX);
      t2 = J.getInterceptor$n(mouseY);
      mouseY0 = mouseY;
      mouseX0 = mouseX;
      surface = null;
      for (; i >= 0; --i) {
        t3 = this.rawChildren;
        if (i >= t3.length)
          throw H.ioore(t3, i);
        dispObj = t3[i];
        if (dispObj._visible !== true)
          continue;
        t3 = dispObj._transform;
        if (t3 != null) {
          m = t3._transMatrix;
          mOrigin = new Q.Matrix(m.a, m.b, m.c, m.d, m.tx, m.ty);
          t4 = dispObj.layoutW;
          t5 = t3.getProperty$1($.UITransform_originXProperty);
          if (typeof t5 !== "number")
            throw H.iae(t5);
          cx = t4 * t5;
          t5 = dispObj.layoutH;
          t3 = t3.getProperty$1($.UITransform_originYProperty);
          if (typeof t3 !== "number")
            throw H.iae(t3);
          cy = t5 * t3;
          t3 = m.a;
          if (typeof t3 !== "number")
            throw t3.$negate();
          t5 = m.b;
          if (typeof t5 !== "number")
            throw t5.$negate();
          t4 = m.tx;
          if (typeof t4 !== "number")
            throw H.iae(t4);
          mOrigin.tx = -t3 * cx + -t5 * cy + t4 + cx;
          t4 = m.c;
          if (typeof t4 !== "number")
            throw t4.$negate();
          t5 = m.d;
          if (typeof t5 !== "number")
            throw t5.$negate();
          t3 = m.ty;
          if (typeof t3 !== "number")
            throw H.iae(t3);
          mOrigin.ty = -t4 * cx + -t5 * cy + t3 + cy;
          distanceToLeftTopX = t1.$sub(mouseX, dispObj.layoutX);
          distanceToLeftTopY = t2.$sub(mouseY, dispObj.layoutY);
          surface = dispObj.hitTest$2(mOrigin.transformPointXInverse$2(distanceToLeftTopX, distanceToLeftTopY), mOrigin.transformPointYInverse$2(distanceToLeftTopX, distanceToLeftTopY));
        } else {
          mouseX0 = J.$sub$n(mouseX0, dispObj.layoutX);
          mouseY0 = J.$sub$n(mouseY0, dispObj.layoutY);
          surface = dispObj.hitTest$2(mouseX0, mouseY0);
          mouseX0 = J.$add$ns(mouseX0, dispObj.layoutX);
          mouseY0 = J.$add$ns(mouseY0, dispObj.layoutY);
        }
        if (surface != null) {
          if (debugEnabled) {
            u = surface._surfaceTarget;
            t1 = $.Application__current;
            line = "hit test success on child " + H.S(J.get$toString$(u)) + " id= " + H.S(u.id);
            t1.toString;
            H.printToConsole(line);
          }
          return surface;
        }
      }
    }
    if ((this._hitTestMode & 2) !== 0)
      return;
    t1 = J.getInterceptor$n(mouseX);
    if (t1.$ge(mouseX, 0)) {
      t2 = J.getInterceptor$n(mouseY);
      t1 = t2.$ge(mouseY, 0) && t1.$lt(mouseX, this.layoutW) && t2.$lt(mouseY, this.layoutH);
    } else
      t1 = false;
    if (t1) {
      if (debugEnabled) {
        u = this._surfaceTarget;
        t1 = $.Application__current;
        t2 = "hit test success on self " + H.S(u) + " id=" + H.S(u.id);
        t1.toString;
        P.print(t2);
      }
      if ((this._hitTestMode & 1) !== 0)
        return this;
      else if (this._painted)
        return this;
    }
    return;
  },
  setupTopLevelCursor$1: function(cursor) {
    var doc, body, t1;
    doc = document;
    body = document.body;
    if (body != null) {
      t1 = J.getInterceptor$x(cursor);
      J.set$cursor$x(body.style, t1.get$name(cursor));
      if ($.Application_isIE)
        J.set$cursor$x(doc.documentElement.style, t1.get$name(cursor));
      return true;
    }
    return false;
  },
  static: {
"": "UISurfaceImpl_HITTEST_CONTENT,UISurfaceImpl_HITTEST_BOUNDS,UISurfaceImpl_HITTEST_DISABLED,UISurfaceImpl_HITTEST_CHILDREN_DISABLED,UISurfaceImpl_SIN45M,UISurfaceImpl_SIN225M,UISurfaceImpl_OPTIMIZE_DIVS,UISurfaceImpl__counter,UISurfaceImpl__globalDebugEnabled",
UISurfaceImpl__applyStrokeStyle: function(context, pen, w, h) {
  var t1 = J.getInterceptor(pen);
  if (typeof pen === "object" && pen !== null && !!t1.$isSolidPen) {
    context.lineWidth = pen._thickness;
    context.strokeStyle = J.toString$0(pen._color);
  }
},

UISurfaceImpl_brushToFillStyle: function(context, brush, w, h) {
  var t1, gradient, numStops, i, t2;
  t1 = J.getInterceptor(brush);
  if (typeof brush === "object" && brush !== null && !!t1.$isSolidBrush) {
    t1 = brush._color;
    return t1.toString$0(t1);
  } else if (typeof brush === "object" && brush !== null && !!t1.$isLinearBrush) {
    gradient = J.createLinearGradient$4$x(context, J.$mul$n(brush.start.x, w), J.$mul$n(brush.start.y, h), J.$mul$n(brush.end.x, w), J.$mul$n(brush.end.y, h));
    t1 = brush._stops;
    numStops = t1.length;
    for (i = 0; i < numStops; ++i) {
      if (i >= t1.length)
        throw H.ioore(t1, i);
      t2 = t1[i];
      gradient.addColorStop(t2.offset, J.toString$0(t2.color));
    }
    return gradient;
  }
  return;
}}

},

UITextSurfaceImpl: {"": "UISurfaceImpl;_text,_fontName,_fontSize,_textColor,_fontBold,_divDirty,_wordWrap,measuredWidth<,measuredHeight<,maxChars@,_isHtmlText,rawChildren,_surfaceTarget,_hitTestMode,_painted,_visible,_opacity,_filterDist,_tag,renderTransform,parentSurface,root,hostElement,_canvas,_filters,_borderRadius,_backgroundBrush,mouseEnabled,_transform,layoutX,layoutY,layoutW,layoutH,locationInitialized,_frag,_clipChildren",
  set$text: function(_, value) {
    var t1, nlPos, sb, start, str;
    if (!J.$eq(value, this._text)) {
      this._isHtmlText = false;
      this._text = value;
      t1 = this._text;
      if (t1 == null || typeof t1 !== "string") {
        this._text = "";
        nlPos = -1;
      } else
        nlPos = J.indexOf$1$asx(t1, "\n");
      if (nlPos === -1)
        J.set$innerHtml$x(this.hostElement, Q.HtmlSanitizer_sanitize(this._text, false));
      else {
        sb = P.StringBuffer$("");
        start = 0;
        do {
          sb._contents = sb._contents + "<p>";
          str = Q.HtmlSanitizer_sanitize(J.substring$2$s(this._text, start, nlPos), true);
          str = typeof str === "string" ? str : H.S(str);
          sb._contents = sb._contents + str;
          start = nlPos + 1;
          sb._contents = sb._contents + "</p>";
          nlPos = J.indexOf$2$asx(this._text, "\n", start);
        } while (nlPos !== -1);
        J.set$innerHtml$x(this.hostElement, sb._contents);
      }
      J.set$left$x(J.get$style$x(this.hostElement), "" + (this.layoutX + 2) + "px");
      J.set$top$x(J.get$style$x(this.hostElement), "" + (this.layoutY + 2) + "px");
    }
  },
  set$htmlText: function(value) {
    var textElement, e, t1, t2, exception;
    if (!J.$eq(value, this._text)) {
      this._isHtmlText = true;
      J.set$left$x(J.get$style$x(this.hostElement), "" + (this.layoutX + 2) + "px");
      J.set$top$x(J.get$style$x(this.hostElement), "" + (this.layoutY + 2) + "px");
      if (J.get$length$asx(value) !== 0)
        try {
          textElement = W.Element_Element$html(value, null, null);
          t1 = this.hostElement;
          t2 = J.getInterceptor$x(t1);
          if (t2.get$nodes(t1)._this.childNodes.length === 0)
            t2.get$nodes(t1)._this.appendChild(textElement);
          else {
            t1 = t2.get$nodes(t1)._this.childNodes;
            if (0 >= t1.length)
              throw H.ioore(t1, 0);
            J.replaceWith$1$x(t1[0], textElement);
          }
          this._text = value;
          return;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isException) {
            e = t1;
            P.print(e);
          } else
            throw exception;
        }

      t1 = this.hostElement;
      t2 = J.getInterceptor$x(t1);
      if (t2.get$nodes(t1)._this.childNodes.length !== 0) {
        t1 = t2.get$nodes(t1);
        t1.removeLast$0(t1);
      }
    }
  },
  set$fontName: function(fontName) {
    this._fontName = fontName;
    this._divDirty = true;
  },
  set$textColor: function(textColor) {
    var t1 = J.getInterceptor(textColor);
    this._textColor = typeof textColor !== "object" || textColor === null || !t1.$isColor ? $.Color_BLACK : textColor;
    this._divDirty = true;
  },
  measureText$4: function(_, textValue, availWidth, availHeight, sizeToBold) {
    var t1, t2, t3, text;
    this.updateTextView$0();
    if ($.UITextSurfaceImpl__measureUtils == null)
      $.UITextSurfaceImpl__measureUtils = Q.TextMeasureUtils$();
    t1 = $.UITextSurfaceImpl__measureUtils;
    t2 = this._fontName;
    t3 = this._fontSize;
    t1.setFont$3(t2, t3, sizeToBold === true ? true : this._fontBold);
    text = this._text;
    text = text != null && typeof text === "string" ? text : "";
    $.UITextSurfaceImpl__measureUtils.measure$4(Q.HtmlSanitizer_sanitize(text, this._isHtmlText), availWidth, availHeight, this._wordWrap);
    t1 = $.UITextSurfaceImpl__measureUtils;
    this.measuredWidth = t1.width;
    this.measuredHeight = t1.height;
  },
  updateTextView$0: function() {
    if (this._divDirty) {
      var style = J.get$style$x(this.hostElement);
      if (!J.$eq(this._fontName, ""))
        J.set$fontFamily$x(style, this._fontName);
      J.getInterceptor$x(style).set$color(style, J.toString$0(this._textColor));
      if (this._fontBold === true)
        C.CssStyleDeclaration_methods.set$fontWeight(style, "700");
      else
        style.removeProperty("font-weight");
      C.CssStyleDeclaration_methods.set$fontSize(style, C.JSInt_methods.toString$0(J.toInt$0$n(this._fontSize)) + "px");
      J.set$left$x(J.get$style$x(this.hostElement), "" + (this.layoutX + 2) + "px");
      J.set$top$x(J.get$style$x(this.hostElement), "" + (this.layoutY + 2) + "px");
      this._divDirty = false;
    }
  },
  setLocation$4: function(targetX, targetY, targetWidth, targetHeight) {
    var style, t1, t2, needsRepaint;
    style = J.get$style$x(this.hostElement);
    if (this.layoutX !== targetX) {
      this.layoutX = targetX;
      J.set$left$x(style, "" + (targetX + 2) + "px");
    }
    if (this.layoutY !== targetY) {
      this.layoutY = targetY;
      J.set$top$x(style, "" + (targetY + 2) + "px");
    }
    t1 = this.layoutW;
    if (t1 !== targetWidth) {
      t2 = this._canvas;
      if (t2 != null) {
        if (this._wordWrap === true)
          J.set$width$x(t2, t1);
        needsRepaint = true;
      } else
        needsRepaint = false;
      this.layoutW = targetWidth;
      if (this._wordWrap === true)
        J.set$width$x(style, "" + targetWidth + "px");
    } else
      needsRepaint = false;
    if (this.layoutH !== targetHeight) {
      this.layoutH = targetHeight;
      J.set$height$x(style, "" + targetHeight + "px");
      t1 = this._canvas;
      if (t1 != null) {
        J.set$height$x(t1, this.layoutH);
        needsRepaint = true;
      }
    }
    if (needsRepaint) {
      t1 = this._surfaceTarget;
      if (t1 != null) {
        t1._layoutFlags = (t1._layoutFlags | 2) >>> 0;
        Q.UpdateQueue_updateDrawing(t1);
      }
    }
  },
  set$wordWrap: function(_, value) {
    var t1;
    this._wordWrap = value;
    t1 = this.hostElement;
    if (t1 != null)
      if (value === true) {
        if (this._wordWrap === true)
          J.set$width$x(J.get$style$x(t1), "" + this.layoutW + "px");
      } else
        J.get$style$x(t1).removeProperty("width");
  },
  set$textAlign: function(_, value) {
    var t1, t2, t3;
    if (this.hostElement != null) {
      t1 = J.getInterceptor(value);
      t2 = t1.$eq(value, 0);
      t3 = this.hostElement;
      if (t2)
        J.set$textAlign$x(J.get$style$x(t3), "");
      else {
        t2 = J.get$style$x(t3);
        J.set$textAlign$x(t2, t1.$eq(value, 1) ? "center" : "right");
      }
    }
  },
  set$onTextLink: function(handler) {
  },
  applyFilters$1: function(filters) {
    var t1, f, t2;
    if (filters == null) {
      J.get$style$x(this.hostElement).removeProperty("text-shadow");
      return;
    }
    t1 = J.getInterceptor$asx(filters);
    f = 0;
    while (true) {
      t2 = t1.get$length(filters);
      if (typeof t2 !== "number")
        throw H.iae(t2);
      if (!(f < t2))
        break;
      filters.getFilter$1(f);
      ++f;
    }
  },
  set$selectable: function(value) {
    var t1, t2;
    t1 = this.hostElement;
    if (t1 != null) {
      t2 = J.getInterceptor$x(t1);
      if (value === true) {
        t2.get$style(t1).removeProperty("user-select");
        J.get$style$x(this.hostElement).removeProperty("-webkit-user-select");
        J.get$style$x(this.hostElement).removeProperty("cursor");
      } else {
        J.set$userSelect$x(t2.get$style(t1), "none");
        if (!$.Application_isFF)
          J.setProperty$2$x(J.get$style$x(this.hostElement), "-webkit-user-select", "none");
        J.set$cursor$x(J.get$style$x(this.hostElement), "default");
      }
    }
  },
  cursorChanged$1: function(cursor) {
    var t1 = this.hostElement;
    if (t1 != null)
      J.set$cursor$x(J.get$style$x(t1), J.get$name$x(cursor));
  },
  static: {
"": "UITextSurfaceImpl__INNER_PADDING,UITextSurfaceImpl__measureUtils",
}

},

TextMeasureUtils: {"": "Object;hiddenTextElem,hiddenTextDivParent,hiddenTextDiv,_fontName,_fontSize,_fontBold,_argb,width*,height*,canvas,_fontKey,_fontSizeStr,_heightCache,_heightCacheBold",
  setFont$3: function(fontName, fontSize, fontBold) {
    var style, t1, t2;
    style = J.get$style$x(this.hiddenTextDiv);
    if (!J.$eq(this._fontSize, fontSize)) {
      this._fontSize = fontSize;
      this._fontSizeStr = C.JSInt_methods.toString$0(J.toInt$0$n(this._fontSize)) + "px";
      J.set$fontSize$x(style, this._fontSizeStr);
    }
    if (!J.$eq(this._fontName, fontName)) {
      this._fontName = fontName;
      J.set$fontFamily$x(style, fontName);
    }
    if (!J.$eq(this._fontBold, fontBold)) {
      this._fontBold = fontBold;
      if (fontBold === true)
        J.set$fontWeight$x(style, "700");
      else
        style.removeProperty("font-weight");
    }
    t1 = this._fontBold;
    t2 = this._fontSizeStr;
    if (t1 === true)
      this._fontKey = "bold " + t2 + " " + H.S(fontName);
    else
      this._fontKey = t2 + " " + H.S(fontName);
  },
  measure$4: function(text, availWidth, availHeight, wordWrap) {
    var t1, t2, screenCssPixelRatio, screenZoomed, context, t3, style, t4, wConstraint;
    t1 = window.outerWidth;
    t2 = window.innerWidth;
    if (typeof t1 !== "number")
      throw t1.$div();
    if (typeof t2 !== "number")
      throw H.iae(t2);
    screenCssPixelRatio = t1 / t2;
    t1 = screenCssPixelRatio < 0.98;
    screenZoomed = t1 || screenCssPixelRatio > 1.02;
    t2 = J.getInterceptor(wordWrap);
    if (t2.$eq(wordWrap, false) && this._heightCache.containsKey$1(this._fontKey) && screenCssPixelRatio > 0.66 && !J.$eq(text, "")) {
      context = J.getContext$1$x(this.canvas, "2d");
      J.set$font$x(context, this._fontKey);
      t2 = context.measureText(text).width;
      if (typeof t2 !== "number")
        throw t2.$add();
      this.width = t2 + 4;
      t2 = this._heightCache;
      this.height = t2.$index(t2, this._fontKey);
    } else {
      t3 = J.getInterceptor(text);
      if (t3.$eq(text, "")) {
        this.width = 0;
        this.height = 0;
      } else {
        style = J.get$style$x(this.hiddenTextDivParent);
        J.set$innerHtml$x(this.hiddenTextDiv, text);
        t4 = J.get$width$x(J.get$offset$x(this.hiddenTextDivParent));
        if (typeof t4 !== "number")
          throw t4.$add();
        this.width = t4 + 4;
        t4 = J.get$height$x(J.get$offset$x(this.hiddenTextDivParent));
        if (typeof t4 !== "number")
          throw t4.$add();
        this.height = t4 + 4;
        t4 = this.width;
        if (typeof t4 !== "number")
          throw t4.$gt();
        if (typeof availWidth !== "number")
          throw H.iae(availWidth);
        if (t4 > availWidth) {
          if (wordWrap === true) {
            if (availWidth < 0)
              t4 = 0;
            else
              t4 = availWidth;
            wConstraint = C.JSInt_methods.toString$0(C.JSNumber_methods.toInt$0(t4));
            J.set$wordWrap$x(J.get$style$x(this.hiddenTextDiv), "normal");
            J.set$width$x(style, wConstraint + "px");
          } else
            style.removeProperty("width");
          t4 = J.get$width$x(J.get$offset$x(this.hiddenTextDivParent));
          if (typeof t4 !== "number")
            throw t4.$add();
          this.width = t4 + 4;
          t4 = J.get$height$x(J.get$offset$x(this.hiddenTextDivParent));
          if (typeof t4 !== "number")
            throw t4.$add();
          this.height = t4 + 4;
        }
        if (!screenZoomed && !t3.$eq(text, "") && t2.$eq(wordWrap, false) && !J.$eq(this.height, 0)) {
          t2 = this._heightCache;
          t2.$indexSet(t2, this._fontKey, this.height);
        }
        style.removeProperty("width");
      }
    }
    if (screenZoomed) {
      t2 = this.width;
      if (typeof t2 !== "number")
        throw t2.$mul();
      this.width = C.JSNumber_methods.toInt$0(Math.ceil(C.JSNumber_methods.toInt$0(Math.ceil(t2 * screenCssPixelRatio)) / screenCssPixelRatio));
      if (screenCssPixelRatio < 0.67) {
        t1 = this.width;
        if (typeof t1 !== "number")
          throw t1.$sub();
        this.width = t1 - 4 + 1 + 4 / screenCssPixelRatio;
        this.height = J.$add$ns(this.height, 2);
      } else if (t1) {
        t1 = this.width;
        if (typeof t1 !== "number")
          throw t1.$add();
        this.width = t1 + 1;
        this.height = J.$add$ns(this.height, 1);
      }
    }
  },
  TextMeasureUtils$0: function() {
    var t1, style;
    this._heightCache = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, J.JSNumber);
    this._heightCacheBold = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, J.JSNumber);
    this.hiddenTextElem = W._ElementFactoryProvider_createElement_tag("documentFragment", null);
    J.set$visibility$x(J.get$style$x(this.hiddenTextElem), "hidden");
    J.set$width$x(J.get$style$x(this.hiddenTextElem), "100%");
    t1 = document.body;
    t1.toString;
    new W._ChildNodeListLazy(t1)._this.appendChild(this.hiddenTextElem);
    style = J.get$style$x(this.hiddenTextElem);
    J.getInterceptor$x(style).set$position(style, "absolute");
    C.CssStyleDeclaration_methods.set$margin(style, "0");
    C.CssStyleDeclaration_methods.set$border(style, "0");
    C.CssStyleDeclaration_methods.set$padding(style, "0");
    this.hiddenTextDiv = W._ElementFactoryProvider_createElement_tag("div", null);
    this.hiddenTextDivParent = W._ElementFactoryProvider_createElement_tag("div", null);
    style = J.get$style$x(this.hiddenTextDivParent);
    J.getInterceptor$x(style).set$position(style, "absolute");
    C.CssStyleDeclaration_methods.set$margin(style, "0");
    C.CssStyleDeclaration_methods.set$border(style, "0");
    C.CssStyleDeclaration_methods.set$padding(style, "0");
    J.get$nodes$x(this.hiddenTextElem)._this.appendChild(this.hiddenTextDivParent);
    J.get$nodes$x(this.hiddenTextDivParent)._this.appendChild(this.hiddenTextDiv);
    this.canvas = W._ElementFactoryProvider_createElement_tag("canvas", null);
    J.get$nodes$x(this.hiddenTextElem)._this.appendChild(this.canvas);
  },
  static: {
"": "TextMeasureUtils__INNER_PADDING2",
TextMeasureUtils$: function() {
  var t1 = new Q.TextMeasureUtils(null, null, null, "", 0, false, 1095216660480, null, null, null, null, null, null, null);
  t1.TextMeasureUtils$0();
  return t1;
}}

},

Popup: {"": "ContentContainer;"},

PropertyCache_clearCache_closure: {"": "Closure;clsName_0,delList_1",
  call$2: function(key, prop) {
    if (J.indexOf$2$asx(key, this.clsName_0, 0) === 0)
      this.delList_1.push(key);
  },
  $is_args2: true
},

PropertyChangedEvent: {"": "EventArgs;property<,oldValue,newValue>,event,handled,source,currentSource,_forceDefault", static: {
"": "PropertyChangedEvent_changeEvent,PropertyChangedEvent__objectPool",
PropertyChangedEvent_create: function(source, propertyKey, oldValue, newValue) {
  var t1, t2, propEvent;
  if ($.PropertyChangedEvent__objectPool == null) {
    t1 = [];
    t1.$builtinTypeInfo = [Q.PropertyChangedEvent];
    $.PropertyChangedEvent__objectPool = t1;
  }
  t1 = $.PropertyChangedEvent__objectPool;
  t2 = t1.length;
  if (t2 === 0) {
    t1 = new Q.PropertyChangedEvent(null, null, null, null, null, null, null, false);
    t1.source = source;
    t1.currentSource = source;
    t1.handled = false;
    t1.property = propertyKey;
    t1.oldValue = oldValue;
    t1.newValue = newValue;
    return t1;
  }
  if (0 >= t2)
    throw H.ioore(t1, 0);
  propEvent = t1.pop();
  propEvent.source = source;
  propEvent.currentSource = source;
  propEvent.property = propertyKey;
  propEvent.oldValue = oldValue;
  propEvent.newValue = newValue;
  return propEvent;
}}
},

RadioButton: {"": "Button;"},

RectShape: {"": "Shape;_elementFlags,_hostSurface,app,measuredWidth,measuredHeight,layoutX,layoutY,layoutWidth,layoutHeight,_layoutFlags,_prevLayoutWidth,_prevLayoutHeight,_prevLayoutX,_prevLayoutY,_prevMeasureAvailableWidth,_prevMeasureAvailableHeight,_internalWidth,_internalHeight,_margins,_effects,_mask,sharedP,_resources,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  onRedraw$1: function(surface) {
    var requiresCanvas;
    if ((this._elementFlags & 64) !== 0) {
      this.get$filters().get$_innerShadow();
      requiresCanvas = false;
    } else
      requiresCanvas = false;
    if (this.getProperty$1($.Shape_strokeProperty) != null || requiresCanvas) {
      surface.clear$0(surface);
      if (this.getProperty$1($.Shape_fillProperty) != null)
        surface.drawRect$7(0, 0, this.layoutWidth, this.layoutHeight, this.getProperty$1($.Shape_fillProperty), this.getProperty$1($.Shape_strokeProperty), this.getProperty$1($.RectShape_borderRadiusProperty));
    } else {
      surface.setBorderRadius$1(this.getProperty$1($.RectShape_borderRadiusProperty));
      surface.setBackground$1(this.getProperty$1($.Shape_fillProperty));
    }
  },
  getDefinition$0: function() {
    return $.RectShape_rectshapeElementDef;
  },
  static: {
"": "RectShape_rectshapeElementDef,RectShape_borderRadiusProperty",
RectShape_registerRectShape: function() {
  $.RectShape_borderRadiusProperty = Q.ElementRegistry_registerProperty("borderRadius", 9, 4, null, null);
  $.RectShape_rectshapeElementDef = Q.ElementRegistry_register("RectShape", $.Shape_shapeElementDef, [$.RectShape_borderRadiusProperty], null);
}}

},

Resources: {"": "Object;_resources,_list",
  clear$0: function(_) {
    this._resources = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, P.Object);
    this._list = [];
  }
},

ScheduledTask: {"": "Object;_startTime<,_delay<,_uxml$_duration<,_callback,completionCallback<,_uxml$_target,_tag,_currentTween?,tweenStart<,tweenEnd<,_taskCompleted?",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  ScheduledTask$6: function(startTime, delay, duration, callback, target, tag) {
    this._startTime = startTime;
    this._delay = delay;
    this._uxml$_duration = duration;
    this._uxml$_target = target;
    this._callback = callback;
    this._tag = tag;
  },
  static: {
ScheduledTask$: function(startTime, delay, duration, callback, target, tag) {
  var t1 = new Q.ScheduledTask(null, null, null, null, null, null, null, 0, 0, 1, false);
  t1.ScheduledTask$6(startTime, delay, duration, callback, target, tag);
  return t1;
}}

},

Shape: {"": "UIElement;",
  onMeasure$2: function(availableWidth, availableHeight) {
    var t1, t2;
    t1 = (this._layoutFlags & 2048) !== 0 ? this.getProperty$1($.UIElement_widthProperty) : 0;
    t2 = (this._layoutFlags & 4096) !== 0 ? this.getProperty$1($.UIElement_heightProperty) : 0;
    this.measuredWidth = t1;
    this.measuredHeight = t2;
    return false;
  },
  getDefinition$0: function() {
    return $.Shape_shapeElementDef;
  }
},

SolidPen: {"": "Pen;_color,_thickness",
  SolidPen$2: function(color, thickness) {
    this._color = color == null ? $.Color_BLACK : color;
  },
  $isSolidPen: true,
  static: {
SolidPen$: function(color, thickness) {
  var t1 = new Q.SolidPen(null, null);
  t1._thickness = thickness;
  t1.SolidPen$2(color, thickness);
  return t1;
}}

},

_ToolTipManager: {"": "Object;watchMap,watchList,timer,currentToolTip,previewListener",
  add$1: function(_, element) {
    var state, t1;
    state = new Q._ToolTipState(element, 0, 0, 0, 500, false, false, null, null, null, null, null, null);
    state.destroyListener = this.get$elementDestroyed();
    element.addListener$2($.UIElement_closedEvent, state.destroyListener);
    state.enterListener = this.get$mouseEnter();
    element.addListener$2($.UIElement_mouseEnterEvent, state.enterListener);
    state.exitListener = this.get$mouseExit();
    element.addListener$2($.UIElement_mouseExitEvent, state.exitListener);
    state.moveListener = this.get$mouseMove();
    element.addListener$2($.UIElement_mouseMoveEvent, state.moveListener);
    if (this.watchList == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q._ToolTipState]);
      this.watchList = t1;
      this.watchMap = P.LinkedHashMap_LinkedHashMap(null, null, null, Q.UIElement, Q._ToolTipState);
    }
    t1 = this.watchMap;
    t1.$indexSet(t1, element, state);
    this.watchList.push(state);
    if (this.watchList.length === 1) {
      this.previewListener = this.get$mousePreviewHandler();
      $.Application__current.addListener$2($.Application_mousePreviewEvent, this.previewListener);
    }
  },
  remove$1: function(_, element) {
    var t1, state;
    t1 = this.watchMap;
    state = t1.$index(t1, element);
    if (state == null)
      return;
    this._showTip$2(state, false);
    t1 = this.watchMap;
    t1.remove$1(t1, element);
    t1 = this.watchList;
    J.removeAt$1$ax(t1, H.Arrays_indexOf(t1, state, 0, t1.length));
    this.releaseTimerIfPossible$0();
    element.removeListener$2($.UIElement_closedEvent, state.get$destroyListener());
    element.removeListener$2($.UIElement_mouseMoveEvent, state.moveListener);
    element.removeListener$2($.UIElement_mouseExitEvent, state.exitListener);
    element.removeListener$2($.UIElement_mouseEnterEvent, state.enterListener);
    if (this.watchList.length === 0)
      $.Application__current.removeListener$2($.Application_mousePreviewEvent, this.previewListener);
  },
  elementDestroyed$1: function(e) {
    this.remove$1(this, J.get$source$x(e));
  },
  get$elementDestroyed: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype.elementDestroyed$1, null, "elementDestroyed$1");
  },
  mouseEventToState$1: function(e) {
    var elm, t1;
    elm = J.get$source$x(e);
    if (elm.get$tooltip() == null || !elm.getProperty$1($.UIElement_tooltipProperty).get$enabled())
      return;
    t1 = this.watchMap;
    return t1.$index(t1, elm);
  },
  mouseEnter$1: function(e) {
    var state = this.mouseEventToState$1(e);
    if (state == null)
      return;
    state.set$enterTime(P.DateTime$_now().millisecondsSinceEpoch);
    state.moveTime = state.enterTime;
    state.mousePos = e.getMousePosition$1(state.element);
    state.isInside = true;
    state.waitTime = this.currentToolTip == null ? 500 : 150;
    if (this.timer == null)
      this.timer = P.Timer_Timer(P.Duration$(0, 0, 0, P.min(150, 500), 0, 0), new Q._ToolTipManager_mouseEnter_closure(this));
  },
  get$mouseEnter: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype.mouseEnter$1, null, "mouseEnter$1");
  },
  mouseMove$1: function(e) {
    var state = this.mouseEventToState$1(e);
    if (state == null)
      return;
    state.mousePos = e.getMousePosition$1(state.get$element());
    state.moveTime = P.DateTime$_now().millisecondsSinceEpoch;
    state.isInside = true;
  },
  get$mouseMove: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype.mouseMove$1, null, "mouseMove$1");
  },
  mouseExit$1: function(e) {
    this._checkMouseExit$1(J.get$source$x(e));
  },
  get$mouseExit: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype.mouseExit$1, null, "mouseExit$1");
  },
  _checkMouseExit$1: function(elm) {
    var t1, state;
    if (elm.get$tooltip() == null)
      return;
    t1 = this.watchMap;
    state = t1.$index(t1, elm);
    if (state == null)
      return;
    state.set$isInside(elm.getProperty$1($.UIElement_tooltipProperty).get$isMouseOver());
    state.exitTime = P.DateTime$_now().millisecondsSinceEpoch;
  },
  tooltipTimerElapsed$0: function() {
    var ts, i, t1, state;
    ts = P.DateTime$_now().millisecondsSinceEpoch;
    for (i = this.watchList.length - 1; i >= 0; --i) {
      t1 = this.watchList;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      state = t1[i];
      if (state.isInside === true) {
        if (ts - state.moveTime >= state.waitTime)
          this._showTip$2(state, true);
      } else if (state.isOpen)
        if (ts - state.exitTime >= 150) {
          this._showTip$2(state, false);
          this.releaseTimerIfPossible$0();
        }
    }
  },
  releaseTimerIfPossible$0: function() {
    var i, t1, state;
    for (i = this.watchList.length - 1; i >= 0; --i) {
      t1 = this.watchList;
      if (i >= t1.length)
        throw H.ioore(t1, i);
      state = t1[i];
      if (J.$eq(state.isInside, true))
        return;
    }
    t1 = this.timer;
    if (t1 != null) {
      t1.cancel$0();
      this.timer = null;
    }
  },
  _showTip$2: function(state, show) {
    var element, tooltip, t1, t2, p, mouseArgs, prevOpacity;
    element = state.get$element();
    tooltip = element.get$tooltip();
    if (show) {
      if (!state.isOpen) {
        state.isOpen = true;
        this.currentToolTip = tooltip;
        t1 = J.get$location$x(tooltip);
        t2 = element.get$overlayContainer();
        t2.add$4(t2, element, tooltip, false, t1);
        tooltip.invalidateSize$0();
        p = element.localToScreen$1(state.mousePos);
        if (element.hasListener$1($._ToolTipManager_toolTipOpenedEvent)) {
          mouseArgs = Q.MouseEventArgs$(2, 1, p);
          element.notifyListeners$2($._ToolTipManager_toolTipOpenedEvent, mouseArgs);
        }
        state.tooltipMouseOverListener = this.get$_toolTipMouseOverChanged();
        tooltip.addListener$2($.UIElement_isMouseOverProperty, state.tooltipMouseOverListener);
      }
    } else if (state.isOpen) {
      state.isOpen = false;
      prevOpacity = J.get$opacity$x(tooltip);
      tooltip.animate$4$callback$duration($.UIElement_opacityProperty, 0, new Q._ToolTipManager__showTip_closure(this, element, tooltip, prevOpacity), 100);
      tooltip.removeListener$2($.UIElement_isMouseOverProperty, state.tooltipMouseOverListener);
    }
  },
  _toolTipMouseOverChanged$1: function(e) {
    var tooltip = J.get$source$x(e);
    if (tooltip != null && J.get$parent$x(tooltip) != null)
      this._checkMouseExit$1(J.get$parent$x(tooltip));
  },
  get$_toolTipMouseOverChanged: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype._toolTipMouseOverChanged$1, null, "_toolTipMouseOverChanged$1");
  },
  mousePreviewHandler$1: function(e) {
    var t1, mouseEventTarget, i, t2, state, t3;
    t1 = J.getInterceptor$x(e);
    mouseEventTarget = t1.get$source(e);
    if (t1.get$eventType(e) !== 0)
      return;
    for (i = this.watchList.length - 1, t1 = mouseEventTarget != null; i >= 0; --i) {
      t2 = this.watchList;
      if (i >= t2.length)
        throw H.ioore(t2, i);
      state = t2[i];
      t2 = state.element;
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isUIElement)
        if (t1 && mouseEventTarget.isChildOf$1(t2))
          return;
      this._showTip$2(state, false);
    }
  },
  get$mousePreviewHandler: function() {
    return new H.BoundClosure$1(this, Q._ToolTipManager.prototype.mousePreviewHandler$1, null, "mousePreviewHandler$1");
  },
  _ToolTipManager$0: function() {
    if ($._ToolTipManager_toolTipOpenedEvent == null)
      $._ToolTipManager_toolTipOpenedEvent = new Q.EventDef("TooltipOpened", $.Route_DIRECT, null, null);
  },
  static: {
"": "_ToolTipManager_GRAVITY,_ToolTipManager_WAIT_TIME,_ToolTipManager_SHORT_WAIT_TIME,_ToolTipManager_DECAY_TIME,_ToolTipManager_toolTipOpenedEvent",
_ToolTipManager$: function() {
  var t1 = new Q._ToolTipManager(null, null, null, null, null);
  t1._ToolTipManager$0();
  return t1;
}}

},

_ToolTipManager_mouseEnter_closure: {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.tooltipTimerElapsed$0();
    t1.timer = P.Timer_Timer$periodic(P.Duration$(0, 0, 0, 500, 0, 0), new Q._ToolTipManager_mouseEnter__closure(t1));
  }
},

_ToolTipManager_mouseEnter__closure: {"": "Closure;this_1",
  call$1: function(repeating) {
    this.this_1.tooltipTimerElapsed$0();
  },
  $is_args1: true
},

_ToolTipManager__showTip_closure: {"": "Closure;this_0,element_1,tooltip_2,prevOpacity_3",
  call$2: function(target, data) {
    var t1, t2, t3;
    t1 = this.element_1;
    t2 = this.tooltip_2;
    t3 = t1.get$overlayContainer();
    t3.remove$2(t3, t1, t2);
    t1 = this.this_0;
    if (t2 === t1.currentToolTip)
      t1.currentToolTip = null;
    J.set$opacity$x(t2, this.prevOpacity_3);
  },
  $is_args2: true
},

_ToolTipState: {"": "Object;element<,enterTime?,moveTime,exitTime,waitTime,isInside?,isOpen<,mousePos,destroyListener<,enterListener,moveListener,exitListener,tooltipMouseOverListener"},

UIElement: {"": "UxmlElement;_hostSurface<,measuredWidth<,measuredHeight<,layoutX<,layoutY<,layoutWidth<,layoutHeight<,_layoutFlags<,_margins?,_mask?",
  get$effects: function() {
    if (this._effects == null) {
      var t1 = [];
      t1.$builtinTypeInfo = [Q.Effect];
      this._effects = t1;
    }
    return this._effects;
  },
  _initSurfaceStart$1: function(parentSurface) {
    var t1;
    this._prevMeasureAvailableWidth = 0;
    this._prevMeasureAvailableHeight = 0;
    this._prevLayoutWidth = -1;
    this._prevLayoutHeight = -1;
    this.measuredWidth = 0;
    this.measuredHeight = 0;
    this._layoutFlags = (this._layoutFlags & 4294950911) >>> 0;
    t1 = this._hostSurface;
    if (t1 != null) {
      t1 = t1.parentSurface;
      t1 = t1 == null ? parentSurface != null : t1 !== parentSurface;
    } else
      t1 = false;
    if (t1)
      this._layoutFlags = (this._layoutFlags | 15) >>> 0;
  },
  initSurface$2: function(parentSurface, index) {
    var t1, t2, prevHostSurface, reparenting, elementEnabled, op, childCount, i, child;
    this._initSurfaceStart$1(parentSurface);
    t1 = this._hostSurface;
    if (t1 != null) {
      t2 = t1.parentSurface;
      t2 = t2 == null ? parentSurface != null : t2 !== parentSurface;
    } else
      t2 = false;
    if (t2) {
      t2 = t1.parentSurface;
      if (t2 != null)
        t2.removeChild$1(t1);
      parentSurface.reparentChild$1(this._hostSurface);
      t1 = this.parent;
      if (t1 != null) {
        prevHostSurface = this._hostSurface;
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isUIElementContainer)
          t1.removeChild$1(this);
        else
          t1.removeRawChild$2$reparenting(this, true);
        this._hostSurface = prevHostSurface;
      }
      reparenting = true;
    } else {
      t1 = new Q.UISurfaceImpl(null, null, 0, false, null, 1, null, null, null, null, null, null, null, null, null, null, true, null, 0, 0, 0, 0, false, null, false);
      t1._visible = true;
      this._hostSurface = parentSurface.insertChild$2(index, t1);
      reparenting = false;
    }
    this._hostSurface._surfaceTarget = this;
    this._hostSurface.set$visible((this._elementFlags & 1) !== 0);
    t1 = this._elementFlags;
    elementEnabled = (t1 & 16) !== 0;
    t2 = this._hostSurface;
    t2.set$enableHitTesting(elementEnabled && (t1 & 4) !== 0);
    this._hostSurface.set$enableChildHitTesting(elementEnabled);
    if ((this._elementFlags & 8) !== 0)
      this._hostSurface.set$clipChildren(true);
    t1 = $.UIElement_opacityProperty;
    t2 = this._propBag;
    if (t2 != null && t2.containsKey$1(t1)) {
      op = this.getProperty$1($.UIElement_opacityProperty);
      if (!J.$eq(op, 1)) {
        t1 = this._hostSurface;
        t1.set$opacity(t1, op);
      }
    }
    if (!reparenting) {
      childCount = this.getRawChildCount$0();
      t1 = childCount > 2;
      if (t1)
        this._hostSurface.lockUpdates$1(true);
      for (i = 0; i < childCount; ++i) {
        child = this.getRawChild$1(i);
        if (child.get$parent(child) !== this)
          child.parent = this;
        child.initSurface$1(this._hostSurface);
      }
      if (t1)
        this._hostSurface.lockUpdates$1(false);
    }
    if (this.getProperty$1($.UIElement_maskProperty) != null)
      this._invalidateMask$0();
    Q.UpdateQueue_updateDrawing(this);
    if ((this._elementFlags & 64) !== 0)
      Q.UpdateQueue_updateFilters(this);
    this.applyEffects$0();
    this.surfaceInitialized$1(this._hostSurface);
  },
  initSurface$1: function(parentSurface) {
    return this.initSurface$2(parentSurface, -1);
  },
  surfaceInitialized$1: function(surface) {
    var t1, propEvent, propEvent2;
    if (this.hasListener$1($.Controller_controllerProperty)) {
      t1 = $.Controller_controllerProperty;
      propEvent = Q.PropertyChangedEvent_create(this, t1, null, this.getProperty$1(t1));
      this.notifyListeners$2($.Controller_controllerProperty, propEvent);
      $.PropertyChangedEvent__objectPool.push(propEvent);
    }
    if (this.hasListener$1($.UxmlElement_dataProperty)) {
      t1 = $.UxmlElement_dataProperty;
      propEvent2 = Q.PropertyChangedEvent_create(this, t1, null, this.getProperty$1(t1));
      this.notifyListeners$2($.UxmlElement_dataProperty, propEvent2);
      $.PropertyChangedEvent__objectPool.push(propEvent2);
    }
  },
  get$visible: function() {
    return (this._elementFlags & 1) !== 0;
  },
  set$visible: function(value) {
    this.setProperty$2(this, $.UIElement_visibleProperty, value);
  },
  get$enabled: function() {
    return (this._elementFlags & 16) !== 0;
  },
  get$opacity: function(_) {
    return this.getProperty$1($.UIElement_opacityProperty);
  },
  set$opacity: function(_, value) {
    this.setProperty$2(this, $.UIElement_opacityProperty, value);
  },
  set$width: function(_, value) {
    this.setProperty$2(this, $.UIElement_widthProperty, value);
  },
  get$width: function(_) {
    return this.getProperty$1($.UIElement_widthProperty);
  },
  get$hAlign: function() {
    return this.getProperty$1($.UIElement_hAlignProperty);
  },
  set$height: function(_, value) {
    this.setProperty$2(this, $.UIElement_heightProperty, value);
  },
  get$height: function(_) {
    return this.getProperty$1($.UIElement_heightProperty);
  },
  set$minWidth: function(_, value) {
    this.setProperty$2(this, $.UIElement_minWidthProperty, value);
  },
  set$maxHeight: function(_, value) {
    this.setProperty$2(this, $.UIElement_maxHeightProperty, value);
  },
  onParentChanged$0: function() {
  },
  close$0: function(_) {
    var t1, childCount, i, e;
    t1 = this._layoutFlags;
    if ((t1 & 16384) !== 0)
      return;
    this._layoutFlags = (t1 | 16384) >>> 0;
    childCount = this.getRawChildCount$0();
    for (i = 0; i < childCount; ++i)
      this.removeRawChild$1(this.getRawChild$1(i));
    t1 = this._hostSurface;
    if (t1 != null) {
      t1.close$0(t1);
      this._hostSurface._surfaceTarget = null;
      this._hostSurface = null;
    }
    this._layoutFlags = (this._layoutFlags | 15) >>> 0;
    if (this.hasListener$1($.UIElement_closedEvent)) {
      e = new Q.EventArgs(null, null, null, null, false);
      e.source = this;
      e.currentSource = this;
      e.handled = false;
      e.event = $.UIElement_closedEvent;
      this._raiseEvent$1(e);
    }
  },
  getRawChildCount$0: function() {
    return 0;
  },
  getRawChild$1: function(index) {
    return;
  },
  insertRawChild$2: function(child, index) {
    var t1 = child.parent;
    if (t1 != null && t1 !== this)
      ;
    else
      child.parent = this;
    t1 = this._hostSurface;
    if (t1 != null)
      child.initSurface$1(t1);
    this.invalidateSize$0();
    this._layoutFlags = (this._layoutFlags | 4) >>> 0;
    Q.UpdateQueue_updateLayout(this);
  },
  _internalAddRawChild$2: function(element, parentElement) {
    var t1, t2;
    if (element.get$parent(element) !== parentElement)
      element.parent = parentElement;
    t1 = this._hostSurface;
    if (t1 != null) {
      t2 = element._hostSurface;
      if (t2 == null)
        element.initSurface$1(t1);
      else
        t1.reparentChild$1(t2);
      this.invalidateSizeForChild$1(element);
    }
  },
  removeRawChild$2$reparenting: function(child, reparenting) {
    var t1;
    if (child.get$_hostSurface() != null) {
      if (!reparenting)
        if (this._hostSurface.removeChild$1(child._hostSurface)) {
          child.close$0(child);
          child._hostSurface = null;
        }
    } else if (!reparenting)
      child.close$0(child);
    this.invalidateSizeForChild$1(child);
    this._layoutFlags = (this._layoutFlags | 4) >>> 0;
    t1 = $.UpdateQueue_layoutSet;
    if (!t1.contains$1(t1, this)) {
      $.UpdateQueue_layoutUpdates.push(this);
      t1 = $.UpdateQueue_layoutSet;
      t1.add$1(t1, this);
      if (!$.UpdateQueue__requestFrameInFlight) {
        $.UpdateQueue__requestFrameInFlight = true;
        if (!$.UpdateQueue_busy)
          Q.UIPlatform_scheduleEnterFrame($.Application__current);
      }
    }
  },
  removeRawChild$1: function(child) {
    return this.removeRawChild$2$reparenting(child, false);
  },
  measure$2: function(availableWidth, availableHeight) {
    var prevWidth, prevHeight, t1, parentRelayoutRequired, isWidthDefined, isHeightDefined, layoutChanged;
    if ((this._layoutFlags & 1) !== 0 || !J.$eq(availableWidth, this._prevMeasureAvailableWidth) || !J.$eq(availableHeight, this._prevMeasureAvailableHeight)) {
      prevWidth = this.measuredWidth;
      prevHeight = this.measuredHeight;
      this._prevMeasureAvailableWidth = availableWidth;
      this._prevMeasureAvailableHeight = availableHeight;
      t1 = this._elementFlags;
      if ((t1 & 1) === 0 && (t1 & 2) === 0) {
        this.measuredWidth = 0;
        this.measuredHeight = 0;
        parentRelayoutRequired = false;
      } else {
        t1 = this._layoutFlags;
        isWidthDefined = (t1 & 2048) !== 0;
        isHeightDefined = (t1 & 4096) !== 0;
        if (!J.$eq(this._margins, $.Margin_EMPTY) && this._margins != null) {
          availableWidth = J.$sub$n(availableWidth, J.$add$ns(J.get$left$x(this._margins), J.get$right$x(this._margins)));
          availableHeight = J.$sub$n(availableHeight, J.$add$ns(J.get$top$x(this._margins), J.get$bottom$x(this._margins)));
        }
        if (isWidthDefined)
          availableWidth = this._internalWidth;
        if (isHeightDefined)
          availableHeight = this._internalHeight;
        this._layoutFlags = (this._layoutFlags & 4294967294) >>> 0;
        if ((this._layoutFlags & 256) !== 0)
          availableWidth = J.$gt$n(availableWidth, this.getProperty$1($.UIElement_maxWidthProperty)) ? this.getProperty$1($.UIElement_maxWidthProperty) : availableWidth;
        parentRelayoutRequired = this.onMeasure$2(availableWidth, (this._layoutFlags & 1024) !== 0 ? J.$gt$n(availableHeight, this.getProperty$1($.UIElement_maxHeightProperty)) ? this.getProperty$1($.UIElement_maxHeightProperty) : availableHeight : availableHeight);
        if (isWidthDefined)
          this.measuredWidth = this._internalWidth;
        if (isHeightDefined)
          this.measuredHeight = this._internalHeight;
        if ((this._layoutFlags & 128) !== 0 && J.$lt$n(this.measuredWidth, this.getProperty$1($.UIElement_minWidthProperty)))
          this.measuredWidth = this.getProperty$1($.UIElement_minWidthProperty);
        if ((this._layoutFlags & 256) !== 0 && J.$gt$n(this.measuredWidth, this.getProperty$1($.UIElement_maxWidthProperty)))
          this.measuredWidth = this.getProperty$1($.UIElement_maxWidthProperty);
        if ((this._layoutFlags & 512) !== 0 && J.$lt$n(this.measuredHeight, this.getProperty$1($.UIElement_minHeightProperty)))
          this.measuredHeight = this.getProperty$1($.UIElement_minHeightProperty);
        if ((this._layoutFlags & 1024) !== 0 && J.$gt$n(this.measuredHeight, this.getProperty$1($.UIElement_maxHeightProperty)))
          this.measuredHeight = this.getProperty$1($.UIElement_maxHeightProperty);
        if (!J.$eq(this._margins, $.Margin_EMPTY) && this._margins != null) {
          this.measuredWidth = J.$add$ns(this.measuredWidth, J.$add$ns(J.get$left$x(this._margins), J.get$right$x(this._margins)));
          this.measuredHeight = J.$add$ns(this.measuredHeight, J.$add$ns(J.get$top$x(this._margins), J.get$bottom$x(this._margins)));
        }
        if (!J.$eq(prevWidth, this.measuredWidth))
          if (!J.$eq(this.getProperty$1($.UIElement_hAlignProperty), 1) && !J.$eq(this.getProperty$1($.UIElement_hAlignProperty), 0)) {
            parentRelayoutRequired = true;
            layoutChanged = false;
          } else
            layoutChanged = true;
        else
          layoutChanged = false;
        if (!J.$eq(prevHeight, this.measuredHeight))
          if (!J.$eq(this.getProperty$1($.UIElement_vAlignProperty), 1) && !J.$eq(this.getProperty$1($.UIElement_vAlignProperty), 0))
            parentRelayoutRequired = true;
          else
            layoutChanged = true;
        if (layoutChanged) {
          this._layoutFlags = (this._layoutFlags | 4) >>> 0;
          Q.UpdateQueue_updateLayout(this);
        }
        if (parentRelayoutRequired) {
          t1 = this.parent;
          if (t1 != null && $.UIElement__inRemeasure) {
            t1._layoutFlags = (t1._layoutFlags | 4) >>> 0;
            Q.UpdateQueue_updateLayout(t1);
          }
        }
      }
    } else
      parentRelayoutRequired = false;
    return parentRelayoutRequired;
  },
  onMeasure$2: function(availableWidth, availableHeight) {
    this.measuredWidth = 0;
    this.measuredHeight = 0;
    return false;
  },
  layout$4: function(targetX, targetY, targetWidth, targetHeight) {
    var t1, t2, targetRectDirty, alignOffsetX, alignOffsetY, t3, realign;
    if ((this._elementFlags & 1) === 0)
      return;
    t1 = this._layoutFlags;
    t2 = J.getInterceptor(targetWidth);
    targetRectDirty = !t2.$eq(targetWidth, this._prevLayoutWidth) || !J.$eq(targetHeight, this._prevLayoutHeight) || !J.$eq(targetX, this._prevLayoutX) || !J.$eq(targetY, this._prevLayoutY);
    if ((t1 & 12) !== 0 || targetRectDirty) {
      this._prevLayoutWidth = targetWidth;
      this._prevLayoutHeight = targetHeight;
      this._prevLayoutX = targetX;
      this._prevLayoutY = targetY;
      this.layoutWidth = this.measuredWidth;
      if (!t2.$eq(targetWidth, this.measuredWidth))
        switch (this.getProperty$1($.UIElement_hAlignProperty)) {
          case 1:
            alignOffsetX = 0;
            break;
          case 2:
            t1 = t2.$sub(targetWidth, this.measuredWidth);
            if (typeof t1 !== "number")
              throw t1.$div();
            alignOffsetX = t1 / 2;
            break;
          case 3:
            alignOffsetX = t2.$sub(targetWidth, this.measuredWidth);
            break;
          default:
            if ((this._layoutFlags & 2048) === 0)
              this.layoutWidth = targetWidth;
            alignOffsetX = 0;
            break;
        }
      else
        alignOffsetX = 0;
      this.layoutHeight = this.measuredHeight;
      t1 = J.getInterceptor(targetHeight);
      if (!t1.$eq(targetHeight, this.measuredHeight))
        switch (this.getProperty$1($.UIElement_vAlignProperty)) {
          case 1:
            alignOffsetY = 0;
            break;
          case 2:
            t3 = t1.$sub(targetHeight, this.measuredHeight);
            if (typeof t3 !== "number")
              throw t3.$div();
            alignOffsetY = t3 / 2;
            break;
          case 3:
            alignOffsetY = t1.$sub(targetHeight, this.measuredHeight);
            break;
          default:
            if ((this._layoutFlags & 4096) === 0)
              this.layoutHeight = targetHeight;
            alignOffsetY = 0;
            break;
        }
      else
        alignOffsetY = 0;
      if (!J.$eq(this._margins, $.Margin_EMPTY) && this._margins != null) {
        alignOffsetX = J.$add$ns(alignOffsetX, J.get$left$x(this._margins));
        alignOffsetY = J.$add$ns(alignOffsetY, J.get$top$x(this._margins));
        this.layoutWidth = J.$sub$n(this.layoutWidth, J.$add$ns(J.get$left$x(this._margins), J.get$right$x(this._margins)));
        this.layoutHeight = J.$sub$n(this.layoutHeight, J.$add$ns(J.get$top$x(this._margins), J.get$bottom$x(this._margins)));
      }
      if ((this._layoutFlags & 128) !== 0)
        if (J.$lt$n(this.layoutWidth, this.getProperty$1($.UIElement_minWidthProperty))) {
          this.layoutWidth = this.getProperty$1($.UIElement_minWidthProperty);
          realign = true;
        } else
          realign = false;
      else
        realign = false;
      if ((this._layoutFlags & 256) !== 0)
        if (J.$gt$n(this.layoutWidth, this.getProperty$1($.UIElement_maxWidthProperty))) {
          this.layoutWidth = this.getProperty$1($.UIElement_maxWidthProperty);
          realign = true;
        }
      if ((this._layoutFlags & 512) !== 0)
        if (J.$lt$n(this.layoutHeight, this.getProperty$1($.UIElement_minHeightProperty))) {
          this.layoutHeight = this.getProperty$1($.UIElement_minHeightProperty);
          realign = true;
        }
      if ((this._layoutFlags & 1024) !== 0)
        if (J.$gt$n(this.layoutHeight, this.getProperty$1($.UIElement_maxHeightProperty))) {
          this.layoutHeight = this.getProperty$1($.UIElement_maxHeightProperty);
          realign = true;
        }
      if (realign) {
        if (!t2.$eq(targetWidth, this.layoutWidth)) {
          switch (this.getProperty$1($.UIElement_hAlignProperty)) {
            case 2:
              t2 = t2.$sub(targetWidth, this.layoutWidth);
              if (typeof t2 !== "number")
                throw t2.$div();
              alignOffsetX = t2 / 2;
              break;
            case 3:
              alignOffsetX = t2.$sub(targetWidth, this.layoutWidth);
              break;
            default:
              alignOffsetX = 0;
              break;
          }
          if (!J.$eq(this._margins, $.Margin_EMPTY) && this._margins != null)
            alignOffsetX = J.$add$ns(alignOffsetX, J.get$left$x(this._margins));
        }
        if (!t1.$eq(targetHeight, this.layoutHeight)) {
          switch (this.getProperty$1($.UIElement_vAlignProperty)) {
            case 2:
              t1 = t1.$sub(targetHeight, this.layoutHeight);
              if (typeof t1 !== "number")
                throw t1.$div();
              alignOffsetY = t1 / 2;
              break;
            case 3:
              alignOffsetY = t1.$sub(targetHeight, this.layoutHeight);
              break;
            default:
              alignOffsetY = 0;
              break;
          }
          if (!J.$eq(this._margins, $.Margin_EMPTY) && this._margins != null)
            alignOffsetY = J.$add$ns(alignOffsetY, J.get$top$x(this._margins));
        }
      }
      targetX = J.$add$ns(targetX, alignOffsetX);
      targetY = J.$add$ns(targetY, alignOffsetY);
      this.layoutX = targetX;
      this.layoutY = targetY;
      t1 = this._hostSurface;
      if (t1 != null) {
        t1.setLocation$4(J.toInt$0$n(targetX), J.toInt$0$n(targetY), J.toInt$0$n(this.layoutWidth), J.toInt$0$n(this.layoutHeight));
        t1 = $.UIElement_transformProperty;
        t2 = this._propBag;
        if (t2 != null && t2.containsKey$1(t1))
          this.onTransformChanged$1(this.get$transform(this));
        if (targetRectDirty) {
          if (this.getProperty$1($.UIElement_maskProperty) != null) {
            this.getProperty$1($.UIElement_maskProperty).measure$2(this.layoutWidth, this.layoutHeight);
            this.getProperty$1($.UIElement_maskProperty).layout$4(0, 0, this.layoutWidth, this.layoutHeight);
          }
          this._layoutFlags = (this._layoutFlags | 2) >>> 0;
          Q.UpdateQueue_updateDrawing(this);
        }
      }
      this.onLayout$4(targetX, targetY, this.layoutWidth, this.layoutHeight);
      if (targetRectDirty && this.hasListener$1($.UIElement_layoutChangedEvent)) {
        if ($.UIElement__sharedLayoutArgs == null) {
          t1 = new Q.EventArgs(null, null, null, null, false);
          t1.source = this;
          t1.currentSource = this;
          t1.handled = false;
          $.UIElement__sharedLayoutArgs = t1;
        }
        t1 = $.UIElement__sharedLayoutArgs;
        t2 = $.UIElement_layoutChangedEvent;
        t1.event = t2;
        t1.source = this;
        this.notifyListeners$2(t2, t1);
      }
    }
    this._layoutFlags = (this._layoutFlags & 4294967283) >>> 0;
  },
  onLayout$4: function(targetX, targetY, targetWidth, targetHeight) {
  },
  _remeasure$0: function() {
    var prevWidth, prevHeight, relayoutRequired, t1;
    if ((this._layoutFlags & 1) === 0)
      return true;
    if (this._hostSurface == null)
      return true;
    prevWidth = this.measuredWidth;
    prevHeight = this.measuredHeight;
    $.UIElement__inRemeasure = true;
    relayoutRequired = this.measure$2(this._prevMeasureAvailableWidth, this._prevMeasureAvailableHeight);
    $.UIElement__inRemeasure = false;
    if (this.parent == null) {
      this.measuredWidth = prevWidth;
      this.measuredHeight = prevHeight;
    }
    if (!J.$eq(prevWidth, this.measuredWidth) || !J.$eq(prevHeight, this.measuredHeight)) {
      if (this.get$visualParent() != null) {
        this.get$visualParent().invalidateSizeForChild$1(this);
        t1 = this.get$visualParent();
        t1._layoutFlags = (t1._layoutFlags | 4) >>> 0;
        Q.UpdateQueue_updateLayout(t1);
      }
      this._layoutFlags = (this._layoutFlags | 4) >>> 0;
      Q.UpdateQueue_updateLayout(this);
      this._layoutFlags = (this._layoutFlags | 2) >>> 0;
      Q.UpdateQueue_updateDrawing(this);
    } else if (relayoutRequired) {
      this._layoutFlags = (this._layoutFlags | 4) >>> 0;
      Q.UpdateQueue_updateLayout(this);
    }
    return true;
  },
  _redraw$0: function() {
    var t1, t2;
    t1 = this._hostSurface;
    if (t1 == null)
      return;
    t2 = this._layoutFlags;
    if ((t2 & 2) === 0)
      return;
    if ((t2 & 8) === 0) {
      this.onRedraw$1(t1);
      this._layoutFlags = (this._layoutFlags & 4294967293) >>> 0;
    }
  },
  onRedraw$1: function(surface) {
  },
  get$filters: function() {
    var f, t1;
    f = this.getProperty$1($.UIElement_filtersProperty);
    if (f == null) {
      f = new Q.Filters(null, null, null, null);
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.Filter]);
      f._list = t1;
      f.set$owner(this);
      this.setProperty$2(this, $.UIElement_filtersProperty, f);
    }
    return f;
  },
  get$isMouseOver: function() {
    return this.getProperty$1($.UIElement_isMouseOverProperty);
  },
  get$focusChrome: function() {
    return this.getProperty$1($.UIElement_focusChromeProperty);
  },
  get$focusEnabled: function() {
    return (this._elementFlags & 32) !== 0;
  },
  get$isFocused: function() {
    return this.getProperty$1($.UIElement_isFocusedProperty);
  },
  set$isFocused: function(value) {
    this.setProperty$2(this, $.UIElement_isFocusedProperty, value);
  },
  get$isFocusGroup: function() {
    return this.getProperty$1($.UIElement_isFocusGroupProperty);
  },
  setElementFlag$2: function(flag, value) {
    this._elementFlags = (this._elementFlags & (4294967295 ^ flag)) >>> 0;
    if (value === true)
      this._elementFlags = (this._elementFlags | flag) >>> 0;
  },
  get$visualParent: function() {
    var t1 = this._hostSurface;
    if (t1 == null || t1.parentSurface == null)
      return;
    return t1.parentSurface._surfaceTarget;
  },
  invalidateSize$0: function() {
    this._layoutFlags = (this._layoutFlags | 1) >>> 0;
    if (this._hostSurface != null)
      Q.UpdateQueue_updateMeasure(this);
  },
  invalidateSizeForChild$1: function(child) {
    this.invalidateSize$0();
  },
  getElement$1: function(elementId) {
    var rawChildCount, i, res;
    rawChildCount = this.getRawChildCount$0();
    for (i = 0; i < rawChildCount; ++i) {
      res = this.getRawChild$1(i);
      res.get$id(res);
    }
    for (i = 0; i < rawChildCount; ++i) {
      res = this.getRawChild$1(i).getElement$1(elementId);
      if (res != null)
        return res;
    }
    return;
  },
  applyEffects$0: function() {
    var effectIndex, t1, effect, actionIndex, t2;
    if (this.get$effects() != null && this.get$effects().length !== 0) {
      effectIndex = 0;
      while (true) {
        if (this._effects == null) {
          t1 = [];
          t1.$builtinTypeInfo = [Q.Effect];
          this._effects = t1;
        }
        t1 = this._effects;
        if (!(effectIndex < t1.length))
          break;
        if (t1 == null) {
          t1 = [];
          t1.$builtinTypeInfo = [Q.Effect];
          this._effects = t1;
        }
        t1 = this._effects;
        if (effectIndex >= t1.length)
          throw H.ioore(t1, effectIndex);
        effect = t1[effectIndex];
        t1 = effect.get$source(effect);
        t1.addListener$2(effect.get$property(), this.get$_onEffectPropertyChanged());
        if (J.$eq(t1.getProperty$1(effect.get$property()), effect.get$value(effect)))
          for (actionIndex = 0; t2 = effect.get$actions(), C.JSInt_methods.$lt(actionIndex, t2.get$length(t2)); ++actionIndex) {
            t2 = effect.get$actions();
            t2 = t2.$index(t2, actionIndex);
            t2.start$2(t2, this, t1);
          }
        ++effectIndex;
      }
    }
  },
  _onEffectPropertyChanged$1: function(e) {
    var t1;
    if (this._effects == null) {
      t1 = [];
      t1.$builtinTypeInfo = [Q.Effect];
      this._effects = t1;
    }
    Q.UIElement__processEffectPropertyChange(this._effects, e);
  },
  get$_onEffectPropertyChanged: function() {
    return new H.BoundClosure$1(this, Q.UIElement.prototype._onEffectPropertyChanged$1, null, "_onEffectPropertyChanged$1");
  },
  onPropertyChanged$3: function(property, oldValue, newValue) {
    var flags, t1;
    flags = property.flags;
    if (flags === 0)
      return;
    if ((flags & 4) !== 0) {
      this._layoutFlags = (this._layoutFlags | 2) >>> 0;
      Q.UpdateQueue_updateDrawing(this);
    }
    if ((flags & 8) !== 0)
      this.invalidateSize$0();
    if ((flags & 16) !== 0) {
      this._layoutFlags = (this._layoutFlags | 4) >>> 0;
      Q.UpdateQueue_updateLayout(this);
    }
    if ((flags & 64) !== 0 && this.get$visualParent() != null) {
      t1 = this.get$visualParent();
      t1._layoutFlags = (t1._layoutFlags | 4) >>> 0;
      Q.UpdateQueue_updateLayout(t1);
    }
    if ((flags & 1) !== 0)
      this.onChildPropertyChanged$3(property, oldValue, newValue);
  },
  onChildPropertyChanged$3: function(property, oldValue, newValue) {
    var rawChildCount, i, child, changeHandler, propEvent, maskElement, maskEvent;
    rawChildCount = this.getRawChildCount$0();
    for (i = 0; i < rawChildCount; ++i) {
      child = this.getRawChild$1(i);
      if (child.overridesProperty$1(property))
        return;
      changeHandler = property.getCallback$1(child.getDefinition$0());
      if (changeHandler != null)
        changeHandler.call$4(child, property, oldValue, newValue);
      if (child.hasListener$1(property)) {
        propEvent = Q.PropertyChangedEvent_create(child, property, oldValue, newValue);
        child.notifyListeners$2(property, propEvent);
        $.PropertyChangedEvent__objectPool.push(propEvent);
      }
      child.onChildPropertyChanged$3(property, oldValue, newValue);
    }
    maskElement = this._mask;
    if (maskElement != null && !maskElement.overridesProperty$1(property)) {
      changeHandler = property.getCallback$1(maskElement.getDefinition$0());
      if (changeHandler != null)
        changeHandler.call$4(maskElement, property, oldValue, newValue);
      if (maskElement.hasListener$1(property)) {
        maskEvent = Q.PropertyChangedEvent_create(maskElement, property, oldValue, newValue);
        maskElement.notifyListeners$2(property, maskEvent);
        $.PropertyChangedEvent__objectPool.push(maskEvent);
      }
      maskElement.onChildPropertyChanged$3(property, oldValue, newValue);
    }
  },
  findResource$2: function(key, interfaceName) {
    var parentElement = this.parent;
    if (parentElement == null)
      return Q.Application_findResource(key, interfaceName);
    return parentElement.findResource$2(key, interfaceName);
  },
  findResource$1: function(key) {
    return this.findResource$2(key, null);
  },
  screenToLocalInternal$3: function(px, py, localPoint) {
    var t1, t2, centerX, centerY, m;
    localPoint.x = px;
    localPoint.y = py;
    t1 = $.UIElement_transformProperty;
    t2 = this._propBag;
    if (t2 != null && t2.containsKey$1(t1)) {
      centerX = J.$mul$n(this.get$transform(this).get$originX(), this.layoutWidth);
      centerY = J.$mul$n(this.get$transform(this).get$originY(), this.layoutHeight);
      if (this.get$visualParent() != null) {
        this.get$visualParent().screenToLocalInternal$3(px, py, localPoint);
        px = localPoint.x;
        py = localPoint.y;
      }
      px = J.$sub$n(px, J.$add$ns(this.layoutX, centerX));
      py = J.$sub$n(py, J.$add$ns(this.layoutY, centerY));
      m = this.get$transform(this).get$matrix();
      t1 = m.transformPointXInverse$2(px, py);
      if (typeof centerX !== "number")
        throw H.iae(centerX);
      localPoint.x = t1 + centerX;
      t1 = m.transformPointYInverse$2(px, py);
      if (typeof centerY !== "number")
        throw H.iae(centerY);
      localPoint.y = t1 + centerY;
    } else {
      if (this.get$visualParent() != null)
        this.get$visualParent().screenToLocalInternal$3(localPoint.x, localPoint.y, localPoint);
      localPoint.x = J.$sub$n(localPoint.x, this.layoutX);
      localPoint.y = J.$sub$n(localPoint.y, this.layoutY);
    }
  },
  localToScreen$1: function(p) {
    var scrPoint, element, t1, t2, centerX, centerY, t3, xP, yP;
    scrPoint = new Q.Coord(p.x, p.y);
    for (element = this; element != null;) {
      t1 = $.UIElement_transformProperty;
      t2 = element._propBag;
      if (t2 != null && t2.containsKey$1(t1)) {
        centerX = J.$mul$n(element.get$transform(element).get$originX(), element.layoutWidth);
        centerY = J.$mul$n(element.get$transform(element).get$originY(), element.layoutHeight);
        t1 = element.get$transform(element).get$matrix();
        t2 = J.$sub$n(scrPoint.x, centerX);
        t3 = J.$sub$n(scrPoint.y, centerY);
        xP = J.$add$ns(J.$add$ns(t1.tx, J.$mul$n(t1.a, t2)), J.$mul$n(t1.b, t3));
        t3 = element.get$transform(element).get$matrix();
        t1 = J.$sub$n(scrPoint.x, centerX);
        t2 = J.$sub$n(scrPoint.y, centerY);
        yP = J.$add$ns(J.$add$ns(t3.ty, J.$mul$n(t3.c, t1)), J.$mul$n(t3.d, t2));
        scrPoint.x = J.$add$ns(J.$add$ns(xP, element.layoutX), centerX);
        scrPoint.y = J.$add$ns(J.$add$ns(yP, element.layoutY), centerY);
      } else {
        scrPoint.x = J.$add$ns(scrPoint.x, element.layoutX);
        scrPoint.y = J.$add$ns(scrPoint.y, element.layoutY);
      }
      element = element.get$visualParent();
    }
    return scrPoint;
  },
  onTransformChanged$1: function(transform) {
    var t1, t2;
    t1 = this._hostSurface;
    if (t1 != null)
      t1.set$surfaceTransform(transform);
    if (this.hasListener$1($.UIElement_transformChangedEvent)) {
      t1 = $.UIElement_transformChangedEvent;
      t2 = new Q.EventArgs(null, null, null, null, false);
      t2.source = this;
      t2.currentSource = this;
      t2.handled = false;
      this.notifyListeners$2(t1, t2);
    }
  },
  get$transform: function(_) {
    var t = this.getProperty$1($.UIElement_transformProperty);
    if (t == null) {
      t = new Q.UITransform(null, null, null, null, 0, false, null, null, null, null);
      t._transMatrix = Q.Matrix$identity();
      this.setProperty$2(this, $.UIElement_transformProperty, t);
    }
    return t;
  },
  get$hasSurface: function() {
    return this._hostSurface != null;
  },
  get$hostSurface: function() {
    return this._hostSurface;
  },
  isVisualChild$1: function(element) {
    for (; element != null;) {
      if (element.get$visualParent() === this)
        return true;
      element = element.get$visualParent();
    }
    return false;
  },
  hitTestBoundingBox$2: function(screenX, screenY) {
    var sy, sx, element, hasTransforms, t1, t2;
    for (sy = screenY, sx = screenX, element = this; hasTransforms = false, element != null;) {
      t1 = element.layoutX;
      if (typeof sx !== "number")
        throw sx.$sub();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      sx -= t1;
      t1 = element.layoutY;
      if (typeof sy !== "number")
        throw sy.$sub();
      if (typeof t1 !== "number")
        throw H.iae(t1);
      sy -= t1;
      t1 = $.UIElement_transformProperty;
      t2 = element._propBag;
      if (t2 != null && t2.containsKey$1(t1)) {
        hasTransforms = true;
        break;
      }
      element = element.get$visualParent();
    }
    if (!hasTransforms) {
      if (typeof sx !== "number")
        throw sx.$ge();
      if (sx >= 0) {
        t1 = this.layoutWidth;
        if (typeof t1 !== "number")
          throw H.iae(t1);
        if (sx < t1) {
          if (typeof sy !== "number")
            throw sy.$ge();
          if (sy >= 0) {
            t1 = this.layoutHeight;
            if (typeof t1 !== "number")
              throw H.iae(t1);
            t1 = sy < t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    }
    this.screenToLocalInternal$3(screenX, screenY, this.sharedP);
    return J.$ge$n(this.sharedP.x, 0) && J.$lt$n(this.sharedP.x, this.layoutWidth) && J.$ge$n(this.sharedP.y, 0) && J.$lt$n(this.sharedP.y, this.layoutHeight);
  },
  _hasPrevLayoutData$0: function() {
    return !J.$eq(this._prevLayoutWidth, -1) || !J.$eq(this._prevLayoutHeight, -1);
  },
  _invalidateFilters$0: function() {
    if ((this._elementFlags & 64) !== 0) {
      this._layoutFlags = (this._layoutFlags | 16) >>> 0;
      Q.UpdateQueue_updateFilters(this);
    }
  },
  get$tooltip: function() {
    return this.getProperty$1($.UIElement_tooltipProperty);
  },
  _invalidateMask$0: function() {
    var maskElement, t1, t2;
    maskElement = this.getProperty$1($.UIElement_maskProperty);
    if (maskElement != null && !J.$eq(J.get$parent$x(maskElement), this)) {
      J.set$parent$x(maskElement, this);
      maskElement.onParentChanged$0();
    }
    if (this._hostSurface != null)
      if (this.getProperty$1($.UIElement_maskProperty) != null) {
        t1 = this.getProperty$1($.UIElement_maskProperty).get$hostSurface();
        t2 = $.UIElement_maskProperty;
        if (t1 == null)
          this.getProperty$1(t2).initSurface$1(this._hostSurface);
        else
          this._hostSurface.addChild$1(this.getProperty$1(t2).get$hostSurface());
        this.getProperty$1($.UIElement_maskProperty).layout$4(0, 0, this.layoutWidth, this.layoutHeight);
      }
  },
  get$overlayContainer: function() {
    var parentElem = this.parent;
    return parentElem == null ? null : parentElem.get$overlayContainer();
  },
  addOverlay$3: function(overlay, resize, $location) {
    var t1 = this.get$overlayContainer();
    t1.add$4(t1, this, overlay, resize, $location);
    overlay.invalidateSize$0();
  },
  addOverlay$2: function(overlay, resize) {
    return this.addOverlay$3(overlay, resize, 0);
  },
  removeOverlay$1: function(overlay) {
    var t1 = this.get$overlayContainer();
    t1.remove$2(t1, this, overlay);
  },
  scrollIntoView$0: function(_) {
    Q.UpdateQueue_doLater(new Q.UIElement_scrollIntoView_closure(this), "scrollIntoView" + C.JSInt_methods.toString$0(H.Primitives_objectHashCode(this)), null);
  },
  _onEnabledChanged$1: function(elementEnabled) {
    var t1;
    this.setElementFlag$2(16, elementEnabled);
    t1 = this._hostSurface;
    if (t1 != null) {
      t1.set$enableHitTesting(elementEnabled === true && (this._elementFlags & 4) !== 0);
      this._hostSurface.set$enableChildHitTesting(elementEnabled);
    }
  },
  focusChanged$0: function() {
  },
  onKeyDown$1: function(_, args) {
  },
  onKeyUp$1: function(_, args) {
  },
  getDefinition$0: function() {
    return $.UIElement_elementDef;
  },
  onMouseDown$1: function(_, mouseArgs) {
  },
  createOnDemand$1: function(property) {
    var t1;
    if (property === $.UIElement_transformProperty) {
      t1 = new Q.UITransform(null, null, null, null, 0, false, null, null, null, null);
      t1._transMatrix = Q.Matrix$identity();
      return t1;
    }
    return;
  },
  toString$0: function(_) {
    return this.getDefinition$0().name;
  },
  get$toString: function(_receiver) {
    return new J.BoundClosure$i0(this, Q.UIElement.prototype.toString$0, _receiver, "toString$0");
  },
  UIElement$0: function() {
    this._hostSurface = null;
    this._layoutFlags = 8;
    this._elementFlags = 21;
    this._margins = $.Margin_EMPTY;
    this.sharedP = new Q.Coord(0, 0);
    this.measuredWidth = 0;
    this.measuredHeight = 0;
    this._internalWidth = 0;
    this._internalHeight = 0;
    this._effects = null;
  },
  $isUIElement: true
},

UIElement_scrollIntoView_closure: {"": "Closure;this_0",
  call$1: function(param) {
    var t1, e;
    t1 = this.this_0;
    e = new Q.EventArgs(null, null, null, null, false);
    e.source = t1;
    e.currentSource = t1;
    e.handled = false;
    e.event = $.UIElement_scrollIntoViewEvent;
    t1.routeEvent$1(e);
  },
  $is_args1: true
},

UIElement_registerUIElement_closure: {"": "Closure;",
  call$4: function(target, property, oldVal, newVal) {
    target.setElementFlag$2(4, newVal);
  }
},

UIElement_registerUIElement_closure0: {"": "Closure;",
  call$4: function(target, property, oldVal, newVal) {
    target._onEnabledChanged$1(newVal);
  }
},

UIElementContainer: {"": "Control;",
  addChild$1: function(child) {
    var t1;
    if (this.childElements == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.UIElement]);
      this.childElements = t1;
    }
    this.childElements.push(child);
    this.insertRawChild$2(child, -1);
  },
  _internalOverlayChild$2: function(child, parentElement) {
    var t1;
    if (this.childElements == null) {
      t1 = [];
      H.setRuntimeTypeInfo(t1, [Q.UIElement]);
      this.childElements = t1;
    }
    this.childElements.push(child);
    this._internalAddRawChild$2(child, parentElement);
  },
  removeChild$1: function(child) {
    var t1 = this.childElements;
    if (t1 != null && H.Arrays_indexOf(t1, child, 0, t1.length) !== -1) {
      t1 = this.childElements;
      J.removeAt$1$ax(t1, H.Arrays_indexOf(t1, child, 0, t1.length));
    }
    this.removeRawChild$1(child);
  },
  getRawChildCount$0: function() {
    var t1 = this.childElements;
    return t1 == null ? 0 : t1.length;
  },
  getRawChild$1: function(index) {
    var t1 = this.childElements;
    if (index < 0 || index >= t1.length)
      throw H.ioore(t1, index);
    return t1[index];
  },
  getDefinition$0: function() {
    return $.UIElementContainer_uielementcontainerElementDef;
  },
  $isUIElementContainer: true
},

UISurface: {"": "Object;"},

UITransform: {"": "UxmlElement;_targetElement?,_transMatrix,listeners,_captureListeners,callingListenersDepth,hasGlobalListener,_propBag,parent,_bindings,id",
  get$originX: function() {
    return this.getProperty$1($.UITransform_originXProperty);
  },
  get$originY: function() {
    return this.getProperty$1($.UITransform_originYProperty);
  },
  onPropertyChanged$3: function(propKey, oldValue, newValue) {
    var t1, cosVal, sinVal;
    t1 = this.getProperty$1($.UITransform_rotateProperty);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    cosVal = Math.cos(3.141592653589793 * t1 / 180);
    t1 = this.getProperty$1($.UITransform_rotateProperty);
    if (typeof t1 !== "number")
      throw H.iae(t1);
    sinVal = Math.sin(3.141592653589793 * t1 / 180);
    this._transMatrix.a = J.$mul$n(this.getProperty$1($.UITransform_scaleXProperty), cosVal);
    this._transMatrix.b = J.$mul$n(this.getProperty$1($.UITransform_scaleYProperty), -sinVal);
    this._transMatrix.c = J.$mul$n(this.getProperty$1($.UITransform_scaleXProperty), sinVal);
    this._transMatrix.d = J.$mul$n(this.getProperty$1($.UITransform_scaleYProperty), cosVal);
    this._transMatrix.tx = this.getProperty$1($.UITransform_translateXProperty);
    this._transMatrix.ty = this.getProperty$1($.UITransform_translateYProperty);
    t1 = this._targetElement;
    if (t1 != null)
      t1.onTransformChanged$1(this);
  },
  get$matrix: function() {
    return this._transMatrix;
  },
  toString$0: function(_) {
    var m, sb;
    m = this._transMatrix;
    sb = P.StringBuffer$("");
    sb.write$1("matrix(");
    sb.write$1(J.toStringAsFixed$1$n(m.a, 4));
    sb.write$1(",");
    sb.write$1(J.toStringAsFixed$1$n(m.c, 4));
    sb.write$1(",");
    sb.write$1(J.toStringAsFixed$1$n(m.b, 4));
    sb.write$1(",");
    sb.write$1(J.toStringAsFixed$1$n(m.d, 4));
    sb.write$1(",");
    sb.write$1(J.toStringAsFixed$1$n(m.tx, 4));
    sb.write$1(",");
    sb.write$1(J.toStringAsFixed$1$n(m.ty, 4));
    sb.write$1(")");
    return sb._contents;
  },
  getDefinition$0: function() {
    return $.UITransform_transformElementDef;
  },
  $isUITransform: true,
  static: {
"": "UITransform_transformElementDef,UITransform_scaleXProperty,UITransform_scaleYProperty,UITransform_translateXProperty,UITransform_translateYProperty,UITransform_rotateProperty,UITransform_originXProperty,UITransform_originYProperty",
UITransform_registerTransform: function() {
  $.UITransform_scaleXProperty = Q.ElementRegistry_registerProperty("scaleX", 3, 0, null, 1);
  $.UITransform_scaleYProperty = Q.ElementRegistry_registerProperty("scaleY", 3, 0, null, 1);
  $.UITransform_translateXProperty = Q.ElementRegistry_registerProperty("translateX", 3, 0, null, 0);
  $.UITransform_translateYProperty = Q.ElementRegistry_registerProperty("translateY", 3, 0, null, 0);
  $.UITransform_rotateProperty = Q.ElementRegistry_registerProperty("rotate", 3, 0, null, 0);
  $.UITransform_originXProperty = Q.ElementRegistry_registerProperty("originX", 3, 0, null, 0.5);
  $.UITransform_originYProperty = Q.ElementRegistry_registerProperty("originY", 3, 0, null, 0.5);
  $.UITransform_transformElementDef = Q.ElementRegistry_register("UITransform", null, [$.UITransform_scaleXProperty, $.UITransform_scaleYProperty, $.UITransform_translateXProperty, $.UITransform_translateYProperty, $.UITransform_rotateProperty, $.UITransform_originXProperty, $.UITransform_originYProperty], null);
}}

},

QueueCallbackData: {"": "Object;_handler,_key<,_data<",
  _handler$1: function(arg0) {
    return this._handler.call$1(arg0);
  }
},

IKeyValue: {"": "Object;"},

UxmlElement: {"": "Object;parent*,id>",
  addListener$3: function(type, listener, useCapture) {
    var t1, listenersForType;
    if (useCapture) {
      t1 = this._captureListeners;
      if (t1 == null)
        this._captureListeners = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, {func: "void__EventArgs", void: true, args: [Q.EventArgs]});
      else if (t1.containsKey$1(type))
        throw H.wrapException(new P.ArgumentError("Capture event already set for this event."));
      t1 = this._captureListeners;
      t1.$indexSet(t1, type, listener);
      return;
    }
    if (this.listeners == null)
      this.listeners = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, [J.JSArray, {func: "void__EventArgs", void: true, args: [Q.EventArgs]}]);
    t1 = this.listeners;
    listenersForType = t1.$index(t1, type);
    if (listenersForType == null) {
      listenersForType = [];
      listenersForType.$builtinTypeInfo = [{func: "void__EventArgs", void: true, args: [Q.EventArgs]}];
      t1 = this.listeners;
      t1.$indexSet(t1, type, listenersForType);
    }
    t1 = J.getInterceptor$asx(listenersForType);
    if (t1.indexOf$1(listenersForType, listener) === -1)
      t1.add$1(listenersForType, listener);
  },
  addListener$2: function(type, listener) {
    return this.addListener$3(type, listener, false);
  },
  removeListener$2: function(type, listener) {
    var t1, listenersForType, index, t2;
    t1 = this.listeners;
    if (t1 != null) {
      listenersForType = t1.$index(t1, type);
      if (listenersForType != null) {
        t1 = J.getInterceptor$asx(listenersForType);
        index = t1.indexOf$1(listenersForType, listener);
        t2 = index === -1;
        if (t2)
          P.print("!!! Removing nonexisting listener1:" + H.S(listener));
        if (this.callingListenersDepth > 0) {
          if (!t2) {
            t1.$indexSet(listenersForType, index, null);
            return;
          }
        } else if (!t2) {
          t1.removeAt$1(listenersForType, index);
          return;
        }
      } else
        P.print("!!! Removing nonexisting listener2:" + H.S(listener));
    }
    t1 = this._captureListeners;
    if (t1 != null)
      if (t1.containsKey$1(type)) {
        t1 = this._captureListeners;
        t1.remove$1(t1, type);
        if (this._captureListeners._collection$_length === 0)
          this._captureListeners = null;
      }
  },
  hasListener$1: function(type) {
    var t1 = this.listeners;
    if (t1 != null)
      if (t1.$index(t1, type) != null) {
        t1 = this.listeners;
        t1 = J.get$length$asx(t1.$index(t1, type)) !== 0;
      } else
        t1 = false;
    else
      t1 = false;
    if (!t1) {
      t1 = this._captureListeners;
      t1 = t1 != null && t1.containsKey$1(type);
    } else
      t1 = true;
    return t1;
  },
  notifyListeners$2: function(type, e) {
    var t1, listenersForType, len, i, t2, listener, captureHandler;
    t1 = this.listeners;
    if (t1 != null) {
      listenersForType = t1.$index(t1, type);
      if (listenersForType != null) {
        t1 = J.getInterceptor$asx(listenersForType);
        len = t1.get$length(listenersForType);
        i = 0;
        while (true) {
          if (typeof len !== "number")
            throw H.iae(len);
          if (!(i < len))
            break;
          if (t1.$index(listenersForType, i) == null) {
            t1.removeAt$1(listenersForType, i);
            --i;
            --len;
          } else {
            this.callingListenersDepth = this.callingListenersDepth + 1;
            t1.$index(listenersForType, i).call$1(e);
            this.callingListenersDepth = this.callingListenersDepth - 1;
          }
          ++i;
        }
      }
      if (this.hasGlobalListener) {
        t1 = this.listeners;
        listenersForType = t1.$index(t1, "__allevents__");
        if (listenersForType == null)
          return;
        t1 = J.getInterceptor$asx(listenersForType);
        i = 0;
        while (true) {
          t2 = t1.get$length(listenersForType);
          if (typeof t2 !== "number")
            throw H.iae(t2);
          if (!(i < t2))
            break;
          listener = t1.$index(listenersForType, i);
          if (listener == null && this.callingListenersDepth === 0) {
            t1.removeAt$1(listenersForType, i);
            --i;
          } else {
            this.callingListenersDepth = this.callingListenersDepth + 1;
            listener.call$1(e);
            this.callingListenersDepth = this.callingListenersDepth - 1;
          }
          ++i;
        }
      }
    }
    t1 = this._captureListeners;
    if (t1 != null) {
      captureHandler = t1.$index(t1, type);
      if (captureHandler != null)
        captureHandler.call$1(e);
    }
  },
  routeEvent$1: function(eventArgs) {
    var $event, t1, t2, maxRoute, routeLength, node, r;
    $event = eventArgs.event;
    t1 = $event.route;
    t2 = $.Route_BUBBLE;
    if (t1 == null ? t2 != null : t1 !== t2) {
      this._raiseEvent$1(eventArgs);
      return;
    }
    maxRoute = $.get$UxmlElement__eventRoute().length;
    routeLength = 0;
    node = this;
    do {
      if (routeLength >= maxRoute)
        $.get$UxmlElement__eventRoute().push(node);
      else {
        t1 = $.get$UxmlElement__eventRoute();
        if (routeLength >= t1.length)
          throw H.ioore(t1, routeLength);
        t1[routeLength] = node;
      }
      ++routeLength;
      node = node.parent;
    } while (node != null);
    for (r = routeLength - 1; r >= 0; --r) {
      t1 = $.get$UxmlElement__eventRoute();
      if (r >= t1.length)
        throw H.ioore(t1, r);
      node = t1[r];
      t1 = node._captureListeners;
      if (t1 != null && t1.containsKey$1($event)) {
        t1 = node._captureListeners;
        t1.$index(t1, $event).call$1(eventArgs);
        if (eventArgs.handled)
          return;
        C.JSArray_methods.remove$1($.get$UxmlElement__eventRoute(), node);
        --routeLength;
      }
    }
    for (r = 0; r < routeLength; ++r) {
      t1 = $.get$UxmlElement__eventRoute();
      if (r >= t1.length)
        throw H.ioore(t1, r);
      t1 = t1[r];
      t1.toString;
      eventArgs.currentSource = t1;
      eventArgs.event.callHandler$2(t1, eventArgs);
      t1.notifyListeners$2(eventArgs.event, eventArgs);
      if (eventArgs.handled)
        return;
    }
  },
  _raiseEvent$1: function(eventArgs) {
    eventArgs.currentSource = this;
    eventArgs.event.callHandler$2(this, eventArgs);
    this.notifyListeners$2(eventArgs.event, eventArgs);
  },
  setProperty$2: function(_, key, value) {
    var oldValue, t1, changeHandler, propEvent;
    oldValue = this.getProperty$1(key);
    if (this._propBag == null)
      this._propBag = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, P.Object);
    t1 = this._propBag;
    t1.$indexSet(t1, key, value == null ? $.UxmlElement__nullValue : value);
    if (oldValue == null ? value == null : oldValue === value)
      return;
    t1 = J.getInterceptor(key);
    changeHandler = typeof key === "object" && key !== null && !!t1.$isPropertyDefinition ? key.getCallback$1(this.getDefinition$0()) : null;
    if (changeHandler != null)
      changeHandler.call$4(this, key, oldValue, value);
    this.onPropertyChanged$3(key, oldValue, value);
    if (this.hasListener$1(key)) {
      propEvent = Q.PropertyChangedEvent_create(this, key, oldValue, value);
      this.notifyListeners$2(key, propEvent);
      $.PropertyChangedEvent__objectPool.push(propEvent);
    }
  },
  getProperty$1: function(key) {
    var t1, res, p, parentVal, changeHandler;
    t1 = this._propBag;
    if (t1 != null) {
      res = t1.$index(t1, key);
      t1 = $.UxmlElement__nullValue;
      if (res == null ? t1 == null : res === t1)
        return;
      if (res != null)
        return res;
    }
    if (typeof key === "string")
      return;
    t1 = J.getInterceptor(key);
    if (typeof key === "object" && key !== null && !!t1.$isPropertyDefinition) {
      if ((key.flags & 1) !== 0) {
        p = this.parent;
        for (; p != null;) {
          t1 = p._propBag;
          if (t1 != null) {
            parentVal = t1.$index(t1, key);
            t1 = $.UxmlElement__nullValue;
            if (parentVal == null ? t1 == null : parentVal === t1)
              return;
            if (parentVal != null)
              return parentVal;
          }
          p = p.parent;
        }
      }
      if ((key.flags & 256) !== 0) {
        res = this.createOnDemand$1(key);
        if (this._propBag == null)
          this._propBag = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Object, P.Object);
        t1 = this._propBag;
        t1.$indexSet(t1, key, res);
        changeHandler = key.getCallback$1(this.getDefinition$0());
        if (changeHandler != null)
          changeHandler.call$4(this, key, null, res);
        return res;
      }
      return key.getDefaultValue$1(this.getDefinition$0());
    }
    return;
  },
  overridesProperty$1: function(key) {
    var t1 = this._propBag;
    return t1 != null && t1.containsKey$1(key);
  },
  onPropertyChanged$3: function(propertyKey, oldVal, newVal) {
  },
  get$data: function(_) {
    return this.getProperty$1($.UxmlElement_dataProperty);
  },
  animate$5$callback$delay$duration: function(propertyKey, targetValue, callback, delay, duration) {
    var action = new Q.AnimateAction(null, null, null, null, null, null, 0, "linear", null, null, true, null);
    action.duration = 250;
    action.duration = duration;
    action.delay = delay;
    action.fromValue = this.getProperty$1(propertyKey);
    action.toValue = targetValue;
    action.property = propertyKey;
    action.completeCallback = callback;
    action.start$2(action, this, this);
    return action;
  },
  animate$4$callback$duration: function(propertyKey, targetValue, callback, duration) {
    return this.animate$5$callback$delay$duration(propertyKey, targetValue, callback, 0, duration);
  },
  isChildOf$1: function(element) {
    var p;
    for (p = this; p != null;) {
      p = p.parent;
      if (p == null ? element == null : p === element)
        return true;
    }
    return false;
  },
  createOnDemand$1: function(property) {
    return;
  },
  getDefinition$0: function() {
    return $.UxmlElement_baseElementDef;
  }
}}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Static function getters
init.globalFunctions.IsolateNatives__processWorkerMessage$closure = H.IsolateNatives__processWorkerMessage$closure = new H.Closure$2(H.IsolateNatives__processWorkerMessage, "IsolateNatives__processWorkerMessage$closure");
init.globalFunctions.Primitives__throwFormatException$closure = H.Primitives__throwFormatException$closure = new H.Closure$1(H.Primitives__throwFormatException, "Primitives__throwFormatException$closure");
init.globalFunctions.toStringWrapper$closure = H.toStringWrapper$closure = new H.Closure$0(H.toStringWrapper, "toStringWrapper$closure");
init.globalFunctions.invokeClosure$closure = H.invokeClosure$closure = new H.Closure$7(H.invokeClosure, "invokeClosure$closure");
init.globalFunctions._asyncRunCallback$closure = P._asyncRunCallback$closure = new H.Closure$0(P._asyncRunCallback, "_asyncRunCallback$closure");
init.globalFunctions._nullDataHandler$closure = P._nullDataHandler$closure = new H.Closure$1(P._nullDataHandler, "_nullDataHandler$closure");
init.globalFunctions._nullErrorHandler$closure = P._nullErrorHandler$closure = new P.Closure$20(P._nullErrorHandler, "_nullErrorHandler$closure");
init.globalFunctions._nullDoneHandler$closure = P._nullDoneHandler$closure = new H.Closure$0(P._nullDoneHandler, "_nullDoneHandler$closure");
init.globalFunctions._defaultEquals$closure = P._defaultEquals$closure = new H.Closure$2(P._defaultEquals, "_defaultEquals$closure");
init.globalFunctions._defaultHashCode$closure = P._defaultHashCode$closure = new H.Closure$1(P._defaultHashCode, "_defaultHashCode$closure");
init.globalFunctions.Comparable_compare$closure = P.Comparable_compare$closure = new H.Closure$2(P.Comparable_compare, "Comparable_compare$closure");
init.globalFunctions.identical$closure = P.identical$closure = new H.Closure$2(P.identical, "identical$closure");
init.globalFunctions.identityHashCode$closure = P.identityHashCode$closure = new H.Closure$1(P.identityHashCode, "identityHashCode$closure");
init.globalFunctions.Element__determineMouseWheelEventType$closure = W.Element__determineMouseWheelEventType$closure = new H.Closure$1(W.Element__determineMouseWheelEventType, "Element__determineMouseWheelEventType$closure");
init.globalFunctions._Html5NodeValidator__standardAttributeValidator$closure = W._Html5NodeValidator__standardAttributeValidator$closure = new W.Closure$4(W._Html5NodeValidator__standardAttributeValidator, "_Html5NodeValidator__standardAttributeValidator$closure");
init.globalFunctions._Html5NodeValidator__uriAttributeValidator$closure = W._Html5NodeValidator__uriAttributeValidator$closure = new W.Closure$4(W._Html5NodeValidator__uriAttributeValidator, "_Html5NodeValidator__uriAttributeValidator$closure");
init.globalFunctions.main$closure = U.main$closure = new H.Closure$0(U.main, "main$closure");
init.globalFunctions.Canvas__leftChangedHandler$closure = Q.Canvas__leftChangedHandler$closure = new W.Closure$4(Q.Canvas__leftChangedHandler, "Canvas__leftChangedHandler$closure");
init.globalFunctions.Canvas__topChangedHandler$closure = Q.Canvas__topChangedHandler$closure = new W.Closure$4(Q.Canvas__topChangedHandler, "Canvas__topChangedHandler$closure");
init.globalFunctions.ComboBox__textChangeHandler$closure = Q.ComboBox__textChangeHandler$closure = new W.Closure$4(Q.ComboBox__textChangeHandler, "ComboBox__textChangeHandler$closure");
init.globalFunctions.ComboBox__isOpenChangedHandler$closure = Q.ComboBox__isOpenChangedHandler$closure = new W.Closure$4(Q.ComboBox__isOpenChangedHandler, "ComboBox__isOpenChangedHandler$closure");
init.globalFunctions.ContentContainer__contentChangedHandler$closure = Q.ContentContainer__contentChangedHandler$closure = new W.Closure$4(Q.ContentContainer__contentChangedHandler, "ContentContainer__contentChangedHandler$closure");
init.globalFunctions.Control__borderRadiusChangedHandler$closure = Q.Control__borderRadiusChangedHandler$closure = new W.Closure$4(Q.Control__borderRadiusChangedHandler, "Control__borderRadiusChangedHandler$closure");
init.globalFunctions.Control__paddingChangedHandler$closure = Q.Control__paddingChangedHandler$closure = new W.Closure$4(Q.Control__paddingChangedHandler, "Control__paddingChangedHandler$closure");
init.globalFunctions.Control__fontChangedHandler$closure = Q.Control__fontChangedHandler$closure = new W.Closure$4(Q.Control__fontChangedHandler, "Control__fontChangedHandler$closure");
init.globalFunctions.DisclosureBox__isOpenChangedHandler$closure = Q.DisclosureBox__isOpenChangedHandler$closure = new W.Closure$4(Q.DisclosureBox__isOpenChangedHandler, "DisclosureBox__isOpenChangedHandler$closure");
init.globalFunctions.DisclosureBox__fadeChangedHandler$closure = Q.DisclosureBox__fadeChangedHandler$closure = new W.Closure$4(Q.DisclosureBox__fadeChangedHandler, "DisclosureBox__fadeChangedHandler$closure");
init.globalFunctions.DisclosureBox__transitionChangedHandler$closure = Q.DisclosureBox__transitionChangedHandler$closure = new W.Closure$4(Q.DisclosureBox__transitionChangedHandler, "DisclosureBox__transitionChangedHandler$closure");
init.globalFunctions.DropDownButton__popupContentChanged$closure = Q.DropDownButton__popupContentChanged$closure = new W.Closure$4(Q.DropDownButton__popupContentChanged, "DropDownButton__popupContentChanged$closure");
init.globalFunctions.Grid__childLocationChangedHandler$closure = Q.Grid__childLocationChangedHandler$closure = new W.Closure$4(Q.Grid__childLocationChangedHandler, "Grid__childLocationChangedHandler$closure");
init.globalFunctions.GridColumn__widthChangedHandler$closure = Q.GridColumn__widthChangedHandler$closure = new W.Closure$4(Q.GridColumn__widthChangedHandler, "GridColumn__widthChangedHandler$closure");
init.globalFunctions.GridColumn__maxWidthChangedHandler$closure = Q.GridColumn__maxWidthChangedHandler$closure = new W.Closure$4(Q.GridColumn__maxWidthChangedHandler, "GridColumn__maxWidthChangedHandler$closure");
init.globalFunctions.GridColumn__minWidthChangedHandler$closure = Q.GridColumn__minWidthChangedHandler$closure = new W.Closure$4(Q.GridColumn__minWidthChangedHandler, "GridColumn__minWidthChangedHandler$closure");
init.globalFunctions.GridRow__heightChangeHandler$closure = Q.GridRow__heightChangeHandler$closure = new W.Closure$4(Q.GridRow__heightChangeHandler, "GridRow__heightChangeHandler$closure");
init.globalFunctions.GridRow__maxHeightChangeHandler$closure = Q.GridRow__maxHeightChangeHandler$closure = new W.Closure$4(Q.GridRow__maxHeightChangeHandler, "GridRow__maxHeightChangeHandler$closure");
init.globalFunctions.GridRow__minHeightChangeHandler$closure = Q.GridRow__minHeightChangeHandler$closure = new W.Closure$4(Q.GridRow__minHeightChangeHandler, "GridRow__minHeightChangeHandler$closure");
init.globalFunctions.Image__imageSourceChangeHandler$closure = Q.Image__imageSourceChangeHandler$closure = new W.Closure$4(Q.Image__imageSourceChangeHandler, "Image__imageSourceChangeHandler$closure");
init.globalFunctions.ItemsContainer__itemsChangedHandler$closure = Q.ItemsContainer__itemsChangedHandler$closure = new W.Closure$4(Q.ItemsContainer__itemsChangedHandler, "ItemsContainer__itemsChangedHandler$closure");
init.globalFunctions.ItemsContainer__itemChromeChangedHandler$closure = Q.ItemsContainer__itemChromeChangedHandler$closure = new W.Closure$4(Q.ItemsContainer__itemChromeChangedHandler, "ItemsContainer__itemChromeChangedHandler$closure");
init.globalFunctions.ItemsContainer__containerChromeChangeHandler$closure = Q.ItemsContainer__containerChromeChangeHandler$closure = new W.Closure$4(Q.ItemsContainer__containerChromeChangeHandler, "ItemsContainer__containerChromeChangeHandler$closure");
init.globalFunctions.Label__htmlEnabledChangeHandler$closure = Q.Label__htmlEnabledChangeHandler$closure = new W.Closure$4(Q.Label__htmlEnabledChangeHandler, "Label__htmlEnabledChangeHandler$closure");
init.globalFunctions.Label__lineStyleChangeHandler$closure = Q.Label__lineStyleChangeHandler$closure = new W.Closure$4(Q.Label__lineStyleChangeHandler, "Label__lineStyleChangeHandler$closure");
init.globalFunctions.Label__wordWrapChangeHandler$closure = Q.Label__wordWrapChangeHandler$closure = new W.Closure$4(Q.Label__wordWrapChangeHandler, "Label__wordWrapChangeHandler$closure");
init.globalFunctions.Label__textChangeHandler$closure = Q.Label__textChangeHandler$closure = new W.Closure$4(Q.Label__textChangeHandler, "Label__textChangeHandler$closure");
init.globalFunctions.ListBase__itemsChangedHandler$closure = Q.ListBase__itemsChangedHandler$closure = new W.Closure$4(Q.ListBase__itemsChangedHandler, "ListBase__itemsChangedHandler$closure");
init.globalFunctions.ListBase__selectedIndexChangedHandler$closure = Q.ListBase__selectedIndexChangedHandler$closure = new W.Closure$4(Q.ListBase__selectedIndexChangedHandler, "ListBase__selectedIndexChangedHandler$closure");
init.globalFunctions.ListBase__selectedItemChangedHandler$closure = Q.ListBase__selectedItemChangedHandler$closure = new W.Closure$4(Q.ListBase__selectedItemChangedHandler, "ListBase__selectedItemChangedHandler$closure");
init.globalFunctions.ListBase__sourceChangedHandler$closure = Q.ListBase__sourceChangedHandler$closure = new W.Closure$4(Q.ListBase__sourceChangedHandler, "ListBase__sourceChangedHandler$closure");
init.globalFunctions.ListBase__listDataChangedHandler$closure = Q.ListBase__listDataChangedHandler$closure = new W.Closure$4(Q.ListBase__listDataChangedHandler, "ListBase__listDataChangedHandler$closure");
init.globalFunctions.ListBase__selectedPropChangedHandler$closure = Q.ListBase__selectedPropChangedHandler$closure = new W.Closure$4(Q.ListBase__selectedPropChangedHandler, "ListBase__selectedPropChangedHandler$closure");
init.globalFunctions.PageControl__currentPageChangedHandler$closure = Q.PageControl__currentPageChangedHandler$closure = new W.Closure$4(Q.PageControl__currentPageChangedHandler, "PageControl__currentPageChangedHandler$closure");
init.globalFunctions.PageControl__pageKeyChangedHandler$closure = Q.PageControl__pageKeyChangedHandler$closure = new W.Closure$4(Q.PageControl__pageKeyChangedHandler, "PageControl__pageKeyChangedHandler$closure");
init.globalFunctions.Panel__maxMinEnabledChanged$closure = Q.Panel__maxMinEnabledChanged$closure = new W.Closure$4(Q.Panel__maxMinEnabledChanged, "Panel__maxMinEnabledChanged$closure");
init.globalFunctions.UIPlatform__mouseWheelHandler$closure = Q.UIPlatform__mouseWheelHandler$closure = new H.Closure$1(Q.UIPlatform__mouseWheelHandler, "UIPlatform__mouseWheelHandler$closure");
init.globalFunctions.Popup__isOpenChangedHandler$closure = Q.Popup__isOpenChangedHandler$closure = new W.Closure$4(Q.Popup__isOpenChangedHandler, "Popup__isOpenChangedHandler$closure");
init.globalFunctions.ProgressControl__cycleChangeHandler$closure = Q.ProgressControl__cycleChangeHandler$closure = new W.Closure$4(Q.ProgressControl__cycleChangeHandler, "ProgressControl__cycleChangeHandler$closure");
init.globalFunctions.RadioButton__isCheckedChangeHandler$closure = Q.RadioButton__isCheckedChangeHandler$closure = new W.Closure$4(Q.RadioButton__isCheckedChangeHandler, "RadioButton__isCheckedChangeHandler$closure");
init.globalFunctions.RadioButton__groupChangeHandler$closure = Q.RadioButton__groupChangeHandler$closure = new W.Closure$4(Q.RadioButton__groupChangeHandler, "RadioButton__groupChangeHandler$closure");
init.globalFunctions.ScrollBar__valueChangedHandler$closure = Q.ScrollBar__valueChangedHandler$closure = new W.Closure$4(Q.ScrollBar__valueChangedHandler, "ScrollBar__valueChangedHandler$closure");
init.globalFunctions.ScrollBox__scrollPointChangedHandler$closure = Q.ScrollBox__scrollPointChangedHandler$closure = new W.Closure$4(Q.ScrollBox__scrollPointChangedHandler, "ScrollBox__scrollPointChangedHandler$closure");
init.globalFunctions.ScrollBox__scrollChildHandler$closure = Q.ScrollBox__scrollChildHandler$closure = new H.Closure$2(Q.ScrollBox__scrollChildHandler, "ScrollBox__scrollChildHandler$closure");
init.globalFunctions.Slider__thumbChangedHandler$closure = Q.Slider__thumbChangedHandler$closure = new W.Closure$4(Q.Slider__thumbChangedHandler, "Slider__thumbChangedHandler$closure");
init.globalFunctions.Slider__ticksChangedHandler$closure = Q.Slider__ticksChangedHandler$closure = new W.Closure$4(Q.Slider__ticksChangedHandler, "Slider__ticksChangedHandler$closure");
init.globalFunctions.TextEdit__htmlEnabledChangeHandler$closure = Q.TextEdit__htmlEnabledChangeHandler$closure = new W.Closure$4(Q.TextEdit__htmlEnabledChangeHandler, "TextEdit__htmlEnabledChangeHandler$closure");
init.globalFunctions.TextEdit__maxCharsChangedHandler$closure = Q.TextEdit__maxCharsChangedHandler$closure = new W.Closure$4(Q.TextEdit__maxCharsChangedHandler, "TextEdit__maxCharsChangedHandler$closure");
init.globalFunctions.TextEdit__lineStyleChangeHandler$closure = Q.TextEdit__lineStyleChangeHandler$closure = new W.Closure$4(Q.TextEdit__lineStyleChangeHandler, "TextEdit__lineStyleChangeHandler$closure");
init.globalFunctions.TextEdit__textChangeHandler$closure = Q.TextEdit__textChangeHandler$closure = new W.Closure$4(Q.TextEdit__textChangeHandler, "TextEdit__textChangeHandler$closure");
init.globalFunctions.TextBox__maxCharsChangedHandler$closure = Q.TextBox__maxCharsChangedHandler$closure = new W.Closure$4(Q.TextBox__maxCharsChangedHandler, "TextBox__maxCharsChangedHandler$closure");
init.globalFunctions.TextBox__textChangedHandler$closure = Q.TextBox__textChangedHandler$closure = new W.Closure$4(Q.TextBox__textChangedHandler, "TextBox__textChangedHandler$closure");
init.globalFunctions.UIElement__widthChangedHandler$closure = Q.UIElement__widthChangedHandler$closure = new W.Closure$4(Q.UIElement__widthChangedHandler, "UIElement__widthChangedHandler$closure");
init.globalFunctions.UIElement__heightChangedHandler$closure = Q.UIElement__heightChangedHandler$closure = new W.Closure$4(Q.UIElement__heightChangedHandler, "UIElement__heightChangedHandler$closure");
init.globalFunctions.UIElement__filtersChangeHandler$closure = Q.UIElement__filtersChangeHandler$closure = new W.Closure$4(Q.UIElement__filtersChangeHandler, "UIElement__filtersChangeHandler$closure");
init.globalFunctions.UIElement__visibleChangedHandler$closure = Q.UIElement__visibleChangedHandler$closure = new W.Closure$4(Q.UIElement__visibleChangedHandler, "UIElement__visibleChangedHandler$closure");
init.globalFunctions.UIElement__opacityChangeHandler$closure = Q.UIElement__opacityChangeHandler$closure = new W.Closure$4(Q.UIElement__opacityChangeHandler, "UIElement__opacityChangeHandler$closure");
init.globalFunctions.UIElement__stateChangeHandler$closure = Q.UIElement__stateChangeHandler$closure = new W.Closure$4(Q.UIElement__stateChangeHandler, "UIElement__stateChangeHandler$closure");
init.globalFunctions.UIElement__marginsChangeHandler$closure = Q.UIElement__marginsChangeHandler$closure = new W.Closure$4(Q.UIElement__marginsChangeHandler, "UIElement__marginsChangeHandler$closure");
init.globalFunctions.UIElement__maskChangeHandler$closure = Q.UIElement__maskChangeHandler$closure = new W.Closure$4(Q.UIElement__maskChangeHandler, "UIElement__maskChangeHandler$closure");
init.globalFunctions.UIElement__minWidthConstraintChangeHandler$closure = Q.UIElement__minWidthConstraintChangeHandler$closure = new W.Closure$4(Q.UIElement__minWidthConstraintChangeHandler, "UIElement__minWidthConstraintChangeHandler$closure");
init.globalFunctions.UIElement__maxWidthConstraintChangeHandler$closure = Q.UIElement__maxWidthConstraintChangeHandler$closure = new W.Closure$4(Q.UIElement__maxWidthConstraintChangeHandler, "UIElement__maxWidthConstraintChangeHandler$closure");
init.globalFunctions.UIElement__minHeightConstraintChangeHandler$closure = Q.UIElement__minHeightConstraintChangeHandler$closure = new W.Closure$4(Q.UIElement__minHeightConstraintChangeHandler, "UIElement__minHeightConstraintChangeHandler$closure");
init.globalFunctions.UIElement__maxHeightConstraintChangeHandler$closure = Q.UIElement__maxHeightConstraintChangeHandler$closure = new W.Closure$4(Q.UIElement__maxHeightConstraintChangeHandler, "UIElement__maxHeightConstraintChangeHandler$closure");
init.globalFunctions.UIElement__transformChangeHandler$closure = Q.UIElement__transformChangeHandler$closure = new W.Closure$4(Q.UIElement__transformChangeHandler, "UIElement__transformChangeHandler$closure");
init.globalFunctions.UIElement__tooltipChangedHandler$closure = Q.UIElement__tooltipChangedHandler$closure = new W.Closure$4(Q.UIElement__tooltipChangedHandler, "UIElement__tooltipChangedHandler$closure");
init.globalFunctions.UIElement__clipChildrenChangeHandler$closure = Q.UIElement__clipChildrenChangeHandler$closure = new W.Closure$4(Q.UIElement__clipChildrenChangeHandler, "UIElement__clipChildrenChangeHandler$closure");
init.globalFunctions.UIElement__layoutVisibleChangedHandler$closure = Q.UIElement__layoutVisibleChangedHandler$closure = new W.Closure$4(Q.UIElement__layoutVisibleChangedHandler, "UIElement__layoutVisibleChangedHandler$closure");
init.globalFunctions.UIElement__keyEventHandler$closure = Q.UIElement__keyEventHandler$closure = new H.Closure$2(Q.UIElement__keyEventHandler, "UIElement__keyEventHandler$closure");
init.globalFunctions.UIElement__elementFocusChangedHandler$closure = Q.UIElement__elementFocusChangedHandler$closure = new W.Closure$4(Q.UIElement__elementFocusChangedHandler, "UIElement__elementFocusChangedHandler$closure");
init.globalFunctions.UIElement__mouseEventHandler$closure = Q.UIElement__mouseEventHandler$closure = new H.Closure$2(Q.UIElement__mouseEventHandler, "UIElement__mouseEventHandler$closure");
init.globalFunctions.UIElement__dragEventHandler$closure = Q.UIElement__dragEventHandler$closure = new H.Closure$2(Q.UIElement__dragEventHandler, "UIElement__dragEventHandler$closure");
init.globalFunctions.ValueRangeControl__valueChangedHandler$closure = Q.ValueRangeControl__valueChangedHandler$closure = new W.Closure$4(Q.ValueRangeControl__valueChangedHandler, "ValueRangeControl__valueChangedHandler$closure");
init.globalFunctions.ValueRangeControl__constraintValueChangedHandler$closure = Q.ValueRangeControl__constraintValueChangedHandler$closure = new W.Closure$4(Q.ValueRangeControl__constraintValueChangedHandler, "ValueRangeControl__constraintValueChangedHandler$closure");
// Runtime type support
J.JSInt.$isint = true;
J.JSInt.$isnum = true;
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isObject = true;
J.JSDouble.$isdouble = true;
J.JSDouble.$isnum = true;
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isObject = true;
W.Node.$isNode = true;
W.Node.$isEventTarget = true;
W.Node.$isObject = true;
W.Touch.$isObject = true;
J.JSString.$isString = true;
J.JSString.$isComparable = true;
J.JSString.$asComparable = [J.JSString];
J.JSString.$isObject = true;
J.JSNumber.$isnum = true;
J.JSNumber.$isComparable = true;
J.JSNumber.$asComparable = [J.JSNumber];
J.JSNumber.$isObject = true;
P.Duration.$isComparable = true;
P.Duration.$asComparable = [P.Duration];
P.Duration.$isObject = true;
Q.UIElement.$isUIElement = true;
Q.UIElement.$isUxmlElement = true;
Q.UIElement.$isIKeyValue = true;
Q.UIElement.$isObject = true;
P.Object.$isObject = true;
Q.UxmlElement.$isUxmlElement = true;
Q.UxmlElement.$isIKeyValue = true;
Q.UxmlElement.$isObject = true;
Q.PropertyChangedEvent.$isPropertyChangedEvent = true;
Q.PropertyChangedEvent.$isEventArgs = true;
Q.PropertyChangedEvent.$isObject = true;
Q.UISurface.$isObject = true;
Q.Effect.$isUxmlElement = true;
Q.Effect.$isIKeyValue = true;
Q.Effect.$isObject = true;
Q.Filter.$isUxmlElement = true;
Q.Filter.$isIKeyValue = true;
Q.Filter.$isObject = true;
W.Event.$isEvent = true;
W.Event.$isObject = true;
W.DeviceOrientationEvent.$isEvent = true;
W.DeviceOrientationEvent.$isObject = true;
W.KeyboardEvent.$isEvent = true;
W.KeyboardEvent.$isObject = true;
W.MouseEvent.$isMouseEvent = true;
W.MouseEvent.$isEvent = true;
W.MouseEvent.$isObject = true;
W.TouchEvent.$isTouchEvent = true;
W.TouchEvent.$isEvent = true;
W.TouchEvent.$isObject = true;
W.WheelEvent.$isWheelEvent = true;
W.WheelEvent.$isMouseEvent = true;
W.WheelEvent.$isEvent = true;
W.WheelEvent.$isObject = true;
Q.QueueCallbackData.$isObject = true;
W.NodeValidator.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
Q.EventDef.$isObject = true;
Q.ElementDef.$isObject = true;
Q.PropertyDefinition.$isPropertyDefinition = true;
Q.PropertyDefinition.$isObject = true;
J.JSArray.$isObject = true;
Q.IKeyValue.$isIKeyValue = true;
Q.IKeyValue.$isObject = true;
Q.CollectionChangedEvent.$isEventArgs = true;
Q.CollectionChangedEvent.$isObject = true;
Q.RadioButton.$isUIElement = true;
Q.RadioButton.$isUxmlElement = true;
Q.RadioButton.$isIKeyValue = true;
Q.RadioButton.$isObject = true;
Q.EventArgs.$isEventArgs = true;
Q.EventArgs.$isObject = true;
Q.Popup.$isUIElement = true;
Q.Popup.$isUxmlElement = true;
Q.Popup.$isIKeyValue = true;
Q.Popup.$isObject = true;
Q._OverlayList.$isObject = true;
Q._WatchList.$isObject = true;
P.Map.$isObject = true;
Q.ActiveActionList.$isObject = true;
Q.Action.$isAction = true;
Q.Action.$isObject = true;
Q.ActionValues.$isObject = true;
Q.ScheduledTask.$isObject = true;
Q.ActionData.$isObject = true;
Q._ToolTipState.$isObject = true;
P.ReceivePort.$isStream = true;
P.ReceivePort.$asStream = [null];
P.ReceivePort.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
P.Timer.$isTimer = true;
P.Timer.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
W.EventTarget.$isEventTarget = true;
W.EventTarget.$isObject = true;
P.Comparable.$isComparable = true;
P.Comparable.$isObject = true;
W.Element.$isElement = true;
W.Element.$isNode = true;
W.Element.$isEventTarget = true;
W.Element.$isObject = true;
W._Html5NodeValidator.$is_Html5NodeValidator = true;
W._Html5NodeValidator.$isObject = true;
Q.MouseEventArgs.$isMouseEventArgs = true;
Q.MouseEventArgs.$isEventArgs = true;
Q.MouseEventArgs.$isObject = true;
Q.DragEventArgs.$isDragEventArgs = true;
Q.DragEventArgs.$isMouseEventArgs = true;
Q.DragEventArgs.$isEventArgs = true;
Q.DragEventArgs.$isObject = true;
Q.KeyboardEventArgs.$isKeyboardEventArgs = true;
Q.KeyboardEventArgs.$isEventArgs = true;
Q.KeyboardEventArgs.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
P.Stream.$isStream = true;
P.Stream.$isObject = true;
P.StreamTransformer.$isStreamTransformer = true;
P.StreamTransformer.$isObject = true;
Q.DataEvent.$isDataEvent = true;
Q.DataEvent.$isEventArgs = true;
Q.DataEvent.$isObject = true;
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
C.C__DelayedDone = new P._DelayedDone();
C.C__RootZone = new P._RootZone();
C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_deviceorientation = new W.EventStreamProvider("deviceorientation");
C.EventStreamProvider_keydown = new W.EventStreamProvider("keydown");
C.EventStreamProvider_keypress = new W.EventStreamProvider("keypress");
C.EventStreamProvider_keyup = new W.EventStreamProvider("keyup");
C.EventStreamProvider_mousedown = new W.EventStreamProvider("mousedown");
C.EventStreamProvider_mousemove = new W.EventStreamProvider("mousemove");
C.EventStreamProvider_mouseout = new W.EventStreamProvider("mouseout");
C.EventStreamProvider_mouseup = new W.EventStreamProvider("mouseup");
C.EventStreamProvider_resize = new W.EventStreamProvider("resize");
C.EventStreamProvider_touchend = new W.EventStreamProvider("touchend");
C.EventStreamProvider_touchmove = new W.EventStreamProvider("touchmove");
C.EventStreamProvider_touchstart = new W.EventStreamProvider("touchstart");
C.JSArray_methods = J.JSArray.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNull_methods = J.JSNull.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_6qb = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_86y = function getTagFallback(o) {
  if (o == null) return "Null";
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.builtin$cls;
    if (typeof name == "string") return name;
    name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_Cbr = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (userAgent.indexOf("Chrome") >= 0 ||
        userAgent.indexOf("DumpRenderTree") >= 0) {
      return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_TtD = function() {
  function typeNameInChrome(obj) { return obj.constructor.name; }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_ZYJ =     ((typeof version == "function" && typeof os == "object" && "system" in os)
    || (typeof navigator == "object"
        && navigator.userAgent.indexOf('Chrome') != -1))
        ? function(x) { return x.$dartCachedLength || x.length; }
        : function(x) { return x.length; };
;
C.JS_CONST_rD3 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    if (tag == "Document") return null;
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
C.List_1GN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), [J.JSString]);
C.List_Qa6 = Isolate.makeConstantList(["b", "em", "i", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "ul", "ol", "li"]);
C.List_empty = Isolate.makeConstantList([]);
C.List_wSV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bind", "if", "ref", "repeat", "syntax"]), [J.JSString]);
C.List_yrN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), [J.JSString]);
C.NodeList_methods = W.NodeList.prototype;
C.Type_oqh = H.createRuntimeType('Uint64List');
C.Type_qxd = H.createRuntimeType('Int64List');
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
C.Window_methods = W.Window.prototype;
C._CustomEventStreamProvider__determineMouseWheelEventType = new W._CustomEventStreamProvider(W.Element__determineMouseWheelEventType$closure);
$.lazyPort = null;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.printToZone = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.Element__parseDocument = null;
$.Element__parseRange = null;
$.Element__defaultValidator = null;
$.Element__defaultSanitizer = null;
$.Device__isOpera = null;
$.Device__isIE = null;
$.Device__isFirefox = null;
$.Device__isWebKit = null;
$.Device__cachedCssPrefix = null;
$.Action_activeActionMap = null;
$.Application__registered = false;
$.Application__current = null;
$.Application_focusManager = null;
$.Application_applicationElementDef = null;
$.Application_mousePreviewEvent = null;
$.Application_keyPreviewEvent = null;
$.Application__mouseDownTarget = null;
$.Application_busyProperty = null;
$.Application__cancelTextInput = false;
$.Application_isIE = false;
$.Application_isFF = false;
$.Application_isChrome = false;
$.Application_isSafari = false;
$.Application_isWebKit = false;
$.Application_isMobile = false;
$.Application_isAndroid = false;
$.Application_isIos = false;
$.Application_screenPixelRatio = 1;
$.Application_uaVersion = 0;
$.BevelFilter_bevelfilterElementDef = null;
$.BevelFilter_alphaProperty = null;
$.BevelFilter_angleProperty = null;
$.BevelFilter_blurXProperty = null;
$.BevelFilter_blurYProperty = null;
$.BevelFilter_distanceProperty = null;
$.BevelFilter_highlightColorProperty = null;
$.BevelFilter_shadowColorProperty = null;
$.BevelFilter_hideObjectProperty = null;
$.BevelFilter_typeProperty = null;
$.BevelFilter_knockoutProperty = null;
$.BevelFilter_qualityProperty = null;
$.BevelFilter_strengthProperty = null;
$.BorderRadius_EMPTY = null;
$.Button_isPressedProperty = null;
$.Button_clickWhenPressedProperty = null;
$.Button_updateFocusOnMouseDownProperty = null;
$.Button_repeatRateProperty = null;
$.Button_repeatDelayProperty = null;
$.Button_clickEvent = null;
$.Button_buttonElementDef = null;
$.Canvas_leftProperty = null;
$.Canvas_topProperty = null;
$.Canvas__canvasElementDef = null;
$.CheckBox_isCheckedProperty = null;
$.CheckBox_checkboxElementDef = null;
$.ClipboardData_clipboardElementDef = null;
$.ClipboardData_loadDataEvent = null;
$.CollectionChangedEvent__objectPool = null;
$.CollectionChangedEvent_eventDef = null;
$.Color_EMPTY = null;
$.Color_BLACK = null;
$.Color_BLUE = null;
$.Color_CYAN = null;
$.Color_DARK_GRAY = null;
$.Color_GRAY = null;
$.Color_GREEN = null;
$.Color_LIGHT_GRAY = null;
$.Color_MAGENTA = null;
$.Color_ORANGE = null;
$.Color_PINK = null;
$.Color_RED = null;
$.Color_WHITE = null;
$.Color_YELLOW = null;
$.ComboBox_comboboxElementDef = null;
$.ComboBox_textProperty = null;
$.ComboBox_isOpenProperty = null;
$.ComboBox_editableProperty = null;
$.ComboBox_maxDropDownHeightProperty = null;
$.Command_commandElementDef = null;
$.Command_commandEvent = null;
$.Command_enabledProperty = null;
$.ContentContainer_contentcontainerElementDef = null;
$.ContentContainer_contentProperty = null;
$.ContentContainer_checkId = null;
$.Control_DEFAULT_TEXT_COLOR = null;
$.Control_borderRadiusProperty = null;
$.Control_fontNameProperty = null;
$.Control_backgroundProperty = null;
$.Control_fontSizeProperty = null;
$.Control_fontBoldProperty = null;
$.Control_textColorProperty = null;
$.Control_linkColorProperty = null;
$.Control_chromeProperty = null;
$.Control_paddingProperty = null;
$.Control_promptMessageProperty = null;
$.Control_errorMessageProperty = null;
$.Control_controlElementDef = null;
$.Controller_controllerElementDef = null;
$.Controller_controllerProperty = null;
$.Cursor_ARROW = null;
$.Cursor_BUTTON = null;
$.Cursor_HAND = null;
$.Cursor_IBEAM = null;
$.Cursor_WAIT = null;
$.Cursor_CROSSHAIR = null;
$.Cursor_cursorProperty = null;
$.Cursor__activeCursor = null;
$.Cursor_host = null;
$.DisclosureBox_disclosureboxElementDef = null;
$.DisclosureBox_isOpenProperty = null;
$.DisclosureBox_fadeProperty = null;
$.DisclosureBox_transitionProperty = null;
$.DisclosureBox_durationProperty = null;
$.DockBox_dockProperty = null;
$.DockBox_dockboxElementDef = null;
$.DragDropManager_dropIndicators = null;
$.DropDownButton_isOpenProperty = null;
$.DropDownButton_popupProperty = null;
$.DropDownButton_dropdownbuttonElementDef = null;
$.DropShadowFilter_dropshadowfilterElementDef = null;
$.DropShadowFilter_alphaProperty = null;
$.DropShadowFilter_angleProperty = null;
$.DropShadowFilter_blurXProperty = null;
$.DropShadowFilter_blurYProperty = null;
$.DropShadowFilter_distanceProperty = null;
$.DropShadowFilter_colorProperty = null;
$.DropShadowFilter_hideObjectProperty = null;
$.DropShadowFilter_innerProperty = null;
$.DropShadowFilter_knockoutProperty = null;
$.DropShadowFilter_qualityProperty = null;
$.DropShadowFilter_strengthProperty = null;
$.ElementCollection_changedEvent = null;
$.ElementRegistry__elements = null;
$.PropertyDefaults_NO_DEFAULT = null;
$.PropertyDefaults_NULL_VALUE = null;
$.EllipseShape_ellipseElementDef = null;
$.Route_DIRECT = null;
$.Route_BUBBLE = null;
$.Route_TUNNEL = null;
$.Filter_filterElementDef = null;
$.Filter_changedEvent = null;
$.FocusManager_focusElementDef = null;
$.FocusManager_focusChangedEvent = null;
$.FocusManager_redirectFocusChromeProperty = null;
$.FocusScopeData__rootGroup = null;
$.FocusScopeData_focusScopeProperty = null;
$.GlowFilter_glowFilterElementDef = null;
$.GlowFilter_alphaProperty = null;
$.GlowFilter_blurXProperty = null;
$.GlowFilter_blurYProperty = null;
$.GlowFilter_colorProperty = null;
$.GlowFilter_innerProperty = null;
$.GlowFilter_knockoutProperty = null;
$.GlowFilter_qualityProperty = null;
$.GlowFilter_strengthProperty = null;
$.Grid_gridElementDef = null;
$.Grid_rowProperty = null;
$.Grid_columnProperty = null;
$.Grid_cellPaddingProperty = null;
$.GridColumn_gridcolumnElementDef = null;
$.GridColumn_minWidthProperty = null;
$.GridColumn_maxWidthProperty = null;
$.GridColumn_widthProperty = null;
$.GridRow_minHeightProperty = null;
$.GridRow_maxHeightProperty = null;
$.GridRow_heightProperty = null;
$.GridRow_gridrowElementDef = null;
$.Group_groupElementDef = null;
$.HBox_hBoxElementDef = null;
$.HBox_spacingProperty = null;
$.HtmlSanitizer_TAG_WHITELIST_SET = null;
$.Image_imageElementDef = null;
$.Image_sourceProperty = null;
$.Image_scaleModeProperty = null;
$.Image_loadedProperty = null;
$.Image_tileProperty = null;
$.Image_monoChromeProperty = null;
$.Image_loadCompletedEvent = null;
$.Image_loadErrorEvent = null;
$.Item_itemElementDef = null;
$.Item_isPressedProperty = null;
$.Items_itemsChangedEvent = null;
$.ItemsContainer_itemsContainerElementDef = null;
$.ItemsContainer_itemsProperty = null;
$.ItemsContainer_isFirstProperty = null;
$.ItemsContainer_isLastProperty = null;
$.ItemsContainer_containerChromeProperty = null;
$.ItemsContainer_itemChromeProperty = null;
$.ItemsContainer_isAlternateRowProperty = null;
$.KeyboardEventArgs_shiftKey = false;
$.KeyboardEventArgs_ctrlKey = false;
$.KeyboardEventArgs_altKey = false;
$.KeyboardEventArgs_metaKey = false;
$.Label_labelElementDef = null;
$.Label_textProperty = null;
$.Label_wordWrapProperty = null;
$.Label_multilineProperty = null;
$.Label_sizeToBoldProperty = null;
$.Label_textAlignProperty = null;
$.Label_htmlEnabledProperty = null;
$.Label_ellipsisProperty = null;
$.Label_selectableProperty = null;
$.Label_linkClickEvent = null;
$.LabeledControl_labeledcontrolElementDef = null;
$.LabeledControl_contentProperty = null;
$.LabeledControl_labelProperty = null;
$.LabeledControl_pictureProperty = null;
$.LineShape_lineShapeElementDef = null;
$.LineShape_xFromProperty = null;
$.LineShape_yFromProperty = null;
$.LineShape_xToProperty = null;
$.LineShape_yToProperty = null;
$.LinearBrush_DEFAULT_START_POINT = null;
$.LinearBrush_DEFAULT_END_POINT = null;
$.ListBase_listbaseElementDef = null;
$.ListBase_itemsProperty = null;
$.ListBase_selectedItemsProperty = null;
$.ListBase_sourceProperty = null;
$.ListBase_itemChromeProperty = null;
$.ListBase_containerChromeProperty = null;
$.ListBase_selectedItemProperty = null;
$.ListBase_selectedIndexProperty = null;
$.ListBase_selectedProperty = null;
$.ListBase_multiSelectProperty = null;
$.ListBase_selectionChangedEvent = null;
$.ListBox_listboxElementDef = null;
$.Margin_EMPTY = null;
$.OverlayContainer_overlayElementDef = null;
$.OverlayContainer_locProperty = null;
$.OverlayContainer_finalLocationProperty = null;
$.PageControl_pagecontrolElementDef = null;
$.PageControl_currentPageProperty = null;
$.PageControl_transitionProperty = null;
$.PageControl_pageKeyProperty = null;
$.PageControl_pageActiveProperty = null;
$.PageControl_pageChangingEvent = null;
$.PageControl_pageChangedEvent = null;
$.Panel_panelElementDef = null;
$.Panel_titleProperty = null;
$.Panel_viewStateProperty = null;
$.Panel_maximizeEnabledProperty = null;
$.Panel_minimizeEnabledProperty = null;
$.Panel_moveEnabledProperty = null;
$.Panel_movedEvent = null;
$.PathShape_pathShapeElementDef = null;
$.PathShape_contentProperty = null;
$.PathShape_nineSliceProperty = null;
$.UIPlatform__isUsingRequestFrame = false;
$.UIPlatform__isTouchEnabled = false;
$.UIPlatform__resizeSub = null;
$.UIPlatform__orientationSub = null;
$.UIPlatform__keyDownSub = null;
$.UIPlatform__keyPressSub = null;
$.UIPlatform__keyUpSub = null;
$.UIPlatform__mouseDownSub = null;
$.UIPlatform__mouseUpSub = null;
$.UIPlatform__mouseMoveSub = null;
$.UIPlatform__mouseOutSub = null;
$.UIPlatform__mouseWheelSub = null;
$.UIPlatform__touchStartSub = null;
$.UIPlatform__touchMoveSub = null;
$.UIPlatform__touchEndSub = null;
$.UIPlatform_inAnimFrameCallback = false;
$.UIPlatform_pendingEnterFrame = false;
$.UIPlatform_previousAnimationTime = 0;
$.UISurfaceImpl__globalDebugEnabled = false;
$.UITextSurfaceImpl__measureUtils = null;
$.Popup_popupElementDef = null;
$.Popup_isOpenProperty = null;
$.Popup_autoFocusProperty = null;
$.Popup_locationProperty = null;
$.Popup_finalLocationProperty = null;
$.Popup__activePopups = null;
$.ProgressControl_progresscontrolElementDef = null;
$.ProgressControl_percentCompleteProperty = null;
$.ProgressControl_percentRemainingProperty = null;
$.ProgressControl_percentFormatProperty = null;
$.ProgressControl_percentTextProperty = null;
$.ProgressControl_cycleProperty = null;
$.ProgressControl_cycleDelayProperty = null;
$.ProgressControl_cycleTimeProperty = null;
$.ProgressControl_stepsProperty = null;
$.ProgressControl_isAnimatingProperty = null;
$.PropertyCache_classCache = null;
$.PropertyCache_propDefCache = null;
$.PropertyChangedEvent_changeEvent = null;
$.PropertyChangedEvent__objectPool = null;
$.RadialBrush__DEFAULT_CONFIG_POINT = null;
$.RadioButton_radiobuttonElementDef = null;
$.RadioButton_isCheckedProperty = null;
$.RadioButton_groupProperty = null;
$.RadioButton__activeGroups = null;
$.RectShape_rectshapeElementDef = null;
$.RectShape_borderRadiusProperty = null;
$.ScrollBar_scrollbarElementDef = null;
$.ScrollBar_orientationProperty = null;
$.ScrollBar_valueProperty = null;
$.ScrollBar_minValueProperty = null;
$.ScrollBar_maxValueProperty = null;
$.ScrollBar_valueChangedEvent = null;
$.ScrollBar__valueChangedArg = null;
$.ScrollBox_scrollboxElementDef = null;
$.ScrollBox_panningEnabledProperty = null;
$.ScrollBox_scrollPointXProperty = null;
$.ScrollBox_scrollPointYProperty = null;
$.ScrollBox_horizontalScrollEnabledProperty = null;
$.ScrollBox_verticalScrollEnabledProperty = null;
$.Shape_fillProperty = null;
$.Shape_strokeProperty = null;
$.Shape_scaleModeProperty = null;
$.Shape_shapeElementDef = null;
$.SlideBox_slideboxElementDef = null;
$.SlideBox_viewPortCapacityProperty = null;
$.SlideBox_viewPortMarginProperty = null;
$.SlideBox_selectedIndexProperty = null;
$.Slider_orientationProperty = null;
$.Slider_ticksProperty = null;
$.Slider_thumbProperty = null;
$.Slider_thumbPressedProperty = null;
$.Slider_sliderElementDef = null;
$.TabControl_tabcontrolElementDef = null;
$.TextEdit_texteditElementDef = null;
$.TextEdit_textProperty = null;
$.TextEdit_wordWrapProperty = null;
$.TextEdit_htmlEnabledProperty = null;
$.TextEdit_multilineProperty = null;
$.TextEdit_displayAsPasswordProperty = null;
$.TextEdit_readOnlyProperty = null;
$.TextEdit_maxCharsProperty = null;
$.TextEdit_linkClickEvent = null;
$.TextBox_textboxElementDef = null;
$.TextBox_textProperty = null;
$.TextBox_wordWrapProperty = null;
$.TextBox_htmlEnabledProperty = null;
$.TextBox_multilineProperty = null;
$.TextBox_displayAsPasswordProperty = null;
$.TextBox_readOnlyProperty = null;
$.TextBox_isEmptyProperty = null;
$.TextBox_maxCharsProperty = null;
$.TextBox_charsRemainingProperty = null;
$.TextBox_textChangedEvent = null;
$.TextBox__changeEventArgs = null;
$.ToolTip_tooltipElementDef = null;
$.ToolTip_locationProperty = null;
$.ToolTip_finalLocationProperty = null;
$._ToolTipManager_toolTipOpenedEvent = null;
$.UIElement_elementDef = null;
$.UIElement_visibleProperty = null;
$.UIElement_clipChildrenProperty = null;
$.UIElement_opacityProperty = null;
$.UIElement_widthProperty = null;
$.UIElement_heightProperty = null;
$.UIElement_hAlignProperty = null;
$.UIElement_vAlignProperty = null;
$.UIElement_minWidthProperty = null;
$.UIElement_maxWidthProperty = null;
$.UIElement_minHeightProperty = null;
$.UIElement_maxHeightProperty = null;
$.UIElement_marginsProperty = null;
$.UIElement_maskProperty = null;
$.UIElement_stateProperty = null;
$.UIElement_filtersProperty = null;
$.UIElement_isFocusGroupProperty = null;
$.UIElement_isFocusedProperty = null;
$.UIElement_transformProperty = null;
$.UIElement_layoutVisibleProperty = null;
$.UIElement_mouseEnabledProperty = null;
$.UIElement_enabledProperty = null;
$.UIElement_isMouseOverProperty = null;
$.UIElement_focusChromeProperty = null;
$.UIElement_tooltipProperty = null;
$.UIElement__inRemeasure = false;
$.UIElement_closedEvent = null;
$.UIElement_mouseDownEvent = null;
$.UIElement_mouseUpEvent = null;
$.UIElement_mouseMoveEvent = null;
$.UIElement_mouseEnterEvent = null;
$.UIElement_mouseExitEvent = null;
$.UIElement_mouseWheelEvent = null;
$.UIElement_keyDownEvent = null;
$.UIElement_keyUpEvent = null;
$.UIElement_dragStartEvent = null;
$.UIElement_dragEvent = null;
$.UIElement_dragEndEvent = null;
$.UIElement_dragEnterEvent = null;
$.UIElement_dragOverEvent = null;
$.UIElement_dragLeaveEvent = null;
$.UIElement_dropEvent = null;
$.UIElement_layoutChangedEvent = null;
$.UIElement_transformChangedEvent = null;
$.UIElement_scrollIntoViewEvent = null;
$.UIElement_stateChangedEvent = null;
$.UIElement__sharedLayoutArgs = null;
$.UIElementContainer_uielementcontainerElementDef = null;
$.UITransform_transformElementDef = null;
$.UITransform_scaleXProperty = null;
$.UITransform_scaleYProperty = null;
$.UITransform_translateXProperty = null;
$.UITransform_translateYProperty = null;
$.UITransform_rotateProperty = null;
$.UITransform_originXProperty = null;
$.UITransform_originYProperty = null;
$.UpdateQueue_measureUpdates = null;
$.UpdateQueue_measureSet = null;
$.UpdateQueue_layoutUpdates = null;
$.UpdateQueue_layoutSet = null;
$.UpdateQueue_renderUpdates = null;
$.UpdateQueue_renderSet = null;
$.UpdateQueue__childLocationUpdates = null;
$.UpdateQueue__childLocationSet = null;
$.UpdateQueue_filterUpdates = null;
$.UpdateQueue_locationUpdates = null;
$.UpdateQueue_busy = false;
$.UpdateQueue_callbacks = null;
$.UpdateQueue_callbackActive = null;
$.UpdateQueue_blockDoLater = false;
$.UpdateQueue__requestFrameInFlight = false;
$.UpdateQueue__frameCallback = null;
$.UxmlElement_dataProperty = null;
$.UxmlElement_baseElementDef = null;
$.UxmlElement__nullValue = null;
$.ValueRangeControl_valuerangecontrolElementDef = null;
$.ValueRangeControl_minValueProperty = null;
$.ValueRangeControl_maxValueProperty = null;
$.ValueRangeControl_valueProperty = null;
$.ValueRangeControl_valueChangedEvent = null;
$.ValueRangeControl__valueChangedArg = null;
$.VBox_vBoxElementDef = null;
$.VBox_spacingProperty = null;
$.WaitIndicator_waitIndicatorElementDef = null;
$.WaitIndicator_colorProperty = null;
$.WrapBox_wrapboxElementDef = null;
$.WrapBox_uniformWidthProperty = null;
$.WrapBox_uniformHeightProperty = null;
$.WrapBox_tileChildrenProperty = null;
$.WrapBox_directionProperty = null;
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return J.getInterceptor$n(receiver).$le(receiver, a0);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$n(receiver).$mul(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J._replaceChild$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
};
J.abs$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).abs$0(receiver);
};
J.add$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).add$1(receiver, a0);
};
J.add$3$ax = function(receiver, a0, a1, a2) {
  return J.getInterceptor$ax(receiver).add$3(receiver, a0, a1, a2);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.ceil$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).ceil$0(receiver);
};
J.clearRect$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).clearRect$4(receiver, a0, a1, a2, a3);
};
J.compareTo$1$ns = function(receiver, a0) {
  return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
J.contains$2$asx = function(receiver, a0, a1) {
  return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
J.createFragment$2$treeSanitizer$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).createFragment$2$treeSanitizer(receiver, a0, a1);
};
J.createFragment$3$treeSanitizer$validator$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).createFragment$3$treeSanitizer$validator(receiver, a0, a1, a2);
};
J.createLinearGradient$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver).createLinearGradient$4(receiver, a0, a1, a2, a3);
};
J.elementAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$bottom$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$bottom(receiver);
};
J.get$deltaY$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$deltaY(receiver);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$eventType$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$eventType(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$height$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$height(receiver);
};
J.get$isNaN$n = function(receiver) {
  return J.getInterceptor$n(receiver).get$isNaN(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$lastChild$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$lastChild(receiver);
};
J.get$left$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$left(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$location$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$location(receiver);
};
J.get$name$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$name(receiver);
};
J.get$nodes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nodes(receiver);
};
J.get$offset$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$offset(receiver);
};
J.get$opacity$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$opacity(receiver);
};
J.get$parent$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parent(receiver);
};
J.get$right$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$right(receiver);
};
J.get$source$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$source(receiver);
};
J.get$style$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$style(receiver);
};
J.get$toString$ = function(receiver) {
  return J.getInterceptor(receiver).get$toString(receiver);
};
J.get$top$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$top(receiver);
};
J.get$topLeft$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$topLeft(receiver);
};
J.get$touches$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$touches(receiver);
};
J.get$value$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$value(receiver);
};
J.get$width$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$width(receiver);
};
J.get$x$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$x(receiver);
};
J.get$y$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$y(receiver);
};
J.getBoundingClientRect$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).getBoundingClientRect$0(receiver);
};
J.getContext$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getContext$1(receiver, a0);
};
J.indexOf$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
};
J.indexOf$2$asx = function(receiver, a0, a1) {
  return J.getInterceptor$asx(receiver).indexOf$2(receiver, a0, a1);
};
J.insert$2$ax = function(receiver, a0, a1) {
  return J.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
};
J.onKeyDown$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).onKeyDown$1(receiver, a0);
};
J.onKeyUp$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).onKeyUp$1(receiver, a0);
};
J.preventDefault$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).preventDefault$0(receiver);
};
J.remove$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).remove$0(receiver);
};
J.removeAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.removeRange$2$ax = function(receiver, a0, a1) {
  return J.getInterceptor$ax(receiver).removeRange$2(receiver, a0, a1);
};
J.replaceAll$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
J.replaceWith$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
J.scale$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).scale$2(receiver, a0, a1);
};
J.send$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).send$1(receiver, a0);
};
J.set$backfaceVisibility$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$backfaceVisibility(receiver, value);
};
J.set$background$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$background(receiver, value);
};
J.set$backgroundColor$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$backgroundColor(receiver, value);
};
J.set$cursor$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$cursor(receiver, value);
};
J.set$display$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$display(receiver, value);
};
J.set$fillStyle$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fillStyle(receiver, value);
};
J.set$font$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$font(receiver, value);
};
J.set$fontFamily$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fontFamily(receiver, value);
};
J.set$fontSize$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fontSize(receiver, value);
};
J.set$fontWeight$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$fontWeight(receiver, value);
};
J.set$height$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$height(receiver, value);
};
J.set$href$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$href(receiver, value);
};
J.set$innerHtml$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$innerHtml(receiver, value);
};
J.set$left$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$left(receiver, value);
};
J.set$length$asx = function(receiver, value) {
  return J.getInterceptor$asx(receiver).set$length(receiver, value);
};
J.set$margin$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$margin(receiver, value);
};
J.set$maxLength$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$maxLength(receiver, value);
};
J.set$opacity$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$opacity(receiver, value);
};
J.set$overflow$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$overflow(receiver, value);
};
J.set$overflowX$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$overflowX(receiver, value);
};
J.set$overflowY$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$overflowY(receiver, value);
};
J.set$parent$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$parent(receiver, value);
};
J.set$pointerEvents$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$pointerEvents(receiver, value);
};
J.set$position$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$position(receiver, value);
};
J.set$selectedIndex$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$selectedIndex(receiver, value);
};
J.set$textAlign$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$textAlign(receiver, value);
};
J.set$top$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$top(receiver, value);
};
J.set$transform$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$transform(receiver, value);
};
J.set$userSelect$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$userSelect(receiver, value);
};
J.set$visibility$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$visibility(receiver, value);
};
J.set$width$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$width(receiver, value);
};
J.set$wordWrap$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$wordWrap(receiver, value);
};
J.setProperty$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).setProperty$2(receiver, a0, a1);
};
J.split$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).split$1(receiver, a0);
};
J.substring$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).substring$1(receiver, a0);
};
J.substring$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
J.toInt$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).toInt$0(receiver);
};
J.toList$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).toList$0(receiver);
};
J.toLowerCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.toStringAsFixed$1$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).toStringAsFixed$1(receiver, a0);
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return new P.Expando(null);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnNull());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOnUndefined());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnNull());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOnUndefined());
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  return P.ListQueue$(null, {func: "void_", void: true});
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return P.List_List(null, null);
});
Isolate.$lazy($, "_safeConsole", "Console__safeConsole", "get$Console__safeConsole", function() {
  return new W.Console();
});
Isolate.$lazy($, "_allowedElements", "_Html5NodeValidator__allowedElements", "get$_Html5NodeValidator__allowedElements", function() {
  var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t1.addAll$1(t1, ["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"]);
  return t1;
});
Isolate.$lazy($, "_attributeValidators", "_Html5NodeValidator__attributeValidators", "get$_Html5NodeValidator__attributeValidators", function() {
  return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "HTML_ENTITY_REGEX", "HtmlSanitizer_HTML_ENTITY_REGEX", "get$HtmlSanitizer_HTML_ENTITY_REGEX", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[a-z]+|#[0-9]+|#x[0-9a-fA-F]+", false, true, false), null, null);
});
Isolate.$lazy($, "_androidAgentList", "UIPlatform__androidAgentList", "get$UIPlatform__androidAgentList", function() {
  return ["android"];
});
Isolate.$lazy($, "_iosAgentList", "UIPlatform__iosAgentList", "get$UIPlatform__iosAgentList", function() {
  return ["iphone", "ipad", "ipod"];
});
Isolate.$lazy($, "_eventRoute", "UxmlElement__eventRoute", "get$UxmlElement__eventRoute", function() {
  var t1 = [];
  H.setRuntimeTypeInfo(t1, [Q.UxmlElement]);
  return t1;
});
// Native classes

init.functionAliases = {};
;
init.metadata = [];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(U.main$closure); });
  } else {
    H.startRootIsolate(U.main$closure);
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(field, accessors, cls) {
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable = false;
    if (code == 45) {
      len--;
      code = field.charCodeAt(len - 1);
      field = field.substring(0, len);
      reflectable = true;
    }
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()

//# sourceMappingURL=hellouxml.dart.js.map
//@ sourceMappingURL=hellouxml.dart.js.map
